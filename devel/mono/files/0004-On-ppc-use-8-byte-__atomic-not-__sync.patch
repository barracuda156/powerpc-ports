From edf3fef34118ebaa06b7fdc0fe348351f6862fcf Mon Sep 17 00:00:00 2001
From: Sergey Fedorov <vital.had@gmail.com>
Date: Tue, 9 May 2023 12:53:19 +0800
Subject: [PATCH 4/9] On ppc use 8-byte __atomic, not __sync

See: https://gcc.gnu.org/bugzilla/show_bug.cgi?id=63368#c7
---
 mono/utils/atomic.c | 8 ++++++++
 mono/utils/atomic.h | 5 ++++-
 2 files changed, 12 insertions(+), 1 deletion(-)

diff --git a/mono/utils/atomic.c b/mono/utils/atomic.c
index eac6be32557..3d1d962a2bf 100644
--- a/mono/utils/atomic.c
+++ b/mono/utils/atomic.c
@@ -12,6 +12,10 @@
 #include <config.h>
 #include <glib.h>
 
+#if defined (TARGET_OSX) && defined (TARGET_POWERPC)
+#include <stdbool.h>
+#endif
+
 #include <mono/utils/atomic.h>
 
 #if defined (WAPI_NO_ATOMIC_ASM) || defined (BROKEN_64BIT_ATOMICS_INTRINSIC)
@@ -508,7 +512,11 @@ void mono_atomic_store_ptr(volatile gpointer *dst, gpointer val)
 gint64
 mono_atomic_cas_i64(volatile gint64 *dest, gint64 exch, gint64 comp)
 {
+#if defined (TARGET_POWERPC) && !defined (TARGET_POWERPC64)
+	return gcc_atomic_compare_exchange (dest, &comp, &exch, false, __ATOMIC_SEQ_CST, __ATOMIC_SEQ_CST);
+#else
 	return gcc_sync_val_compare_and_swap (dest, comp, exch);
+#endif
 }
 
 #elif defined (__arm__) && defined (HAVE_ARMV7) && (defined(TARGET_IOS) || defined(TARGET_WATCHOS) || defined(TARGET_ANDROID))
diff --git a/mono/utils/atomic.h b/mono/utils/atomic.h
index 4b46122c518..62be50d13f5 100755
--- a/mono/utils/atomic.h
+++ b/mono/utils/atomic.h
@@ -238,6 +238,9 @@ mono_atomic_store_ptr (volatile gpointer *dst, gpointer val)
 #define gcc_sync_add_and_fetch(a, b) __sync_add_and_fetch (a, b)
 #define gcc_sync_sub_and_fetch(a, b) __sync_sub_and_fetch (a, b)
 #define gcc_sync_fetch_and_add(a, b) __sync_fetch_and_add (a, b)
+#if defined(TARGET_POWERPC) && !defined(TARGET_POWERPC64) /* 8-byte CAS not supported on ppc. */
+#define gcc_atomic_compare_exchange(a, b, c, d, e, f) __atomic_compare_exchange (a, b, c, d, e, f)
+#endif
 #endif
 
 static inline gint32 mono_atomic_cas_i32(volatile gint32 *dest,
@@ -333,7 +336,7 @@ static inline void mono_atomic_store_i32(volatile gint32 *dst, gint32 val)
 	} while (gcc_sync_val_compare_and_swap (dst, old_val, val) != old_val);
 }
 
-#if defined (TARGET_OSX) || defined (__arm__) || (defined (__mips__) && !defined (__mips64)) || (defined (__powerpc__) && !defined (__powerpc64__)) || (defined (__sparc__) && !defined (__arch64__))
+#if defined (TARGET_OSX) || defined (__arm__) || (defined (__mips__) && !defined (__mips64)) || defined (__ppc__) || (defined (__powerpc__) && !defined (__powerpc64__)) || (defined (__sparc__) && !defined (__arch64__))
 #define BROKEN_64BIT_ATOMICS_INTRINSIC 1
 #endif
 
-- 
2.42.0

