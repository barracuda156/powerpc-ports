From 58f62537f7eda4f4c30a52d4ccdd6b1dbf65a31a Mon Sep 17 00:00:00 2001
From: Sergey Fedorov <vital.had@gmail.com>
Date: Fri, 5 May 2023 17:06:06 +0800
Subject: [PATCH 2/9] utils/mono-context.h: unbreak context for macOS PPC

---
 mono/utils/mono-context.h | 148 ++++++++++++++++++++++++++++++++++++++
 1 file changed, 148 insertions(+)

diff --git a/mono/utils/mono-context.h b/mono/utils/mono-context.h
index d89c5a45466..50dc60015b2 100644
--- a/mono/utils/mono-context.h
+++ b/mono/utils/mono-context.h
@@ -602,6 +602,79 @@ typedef struct {
 #define MONO_CONTEXT_GET_BP(ctx) ((gpointer)(gsize)((ctx)->regs [ppc_r31]))
 #define MONO_CONTEXT_GET_SP(ctx) ((gpointer)(gsize)((ctx)->sc_sp))
 
+#ifdef __APPLE__
+#define MONO_CONTEXT_GET_CURRENT(ctx)	\
+	__asm__ volatile(	\
+		"std r0, 0(%0)\n"	\
+		"std r1, 8(%0)\n"	\
+		"std r0, 8*0+16(%0)\n"	\
+		"std r1, 8*1+16(%0)\n"	\
+		"std r2, 8*2+16(%0)\n"	\
+		"std r3, 8*3+16(%0)\n"	\
+		"std r4, 8*4+16(%0)\n"	\
+		"std r5, 8*5+16(%0)\n"	\
+		"std r6, 8*6+16(%0)\n"	\
+		"std r7, 8*7+16(%0)\n"	\
+		"std r8, 8*8+16(%0)\n"	\
+		"std r9, 8*9+16(%0)\n"	\
+		"std r10, 8*10+16(%0)\n"	\
+		"std r11, 8*11+16(%0)\n"	\
+		"std r12, 8*12+16(%0)\n"	\
+		"std r13, 8*13+16(%0)\n"	\
+		"std r14, 8*14+16(%0)\n"	\
+		"std r15, 8*15+16(%0)\n"	\
+		"std r16, 8*16+16(%0)\n"	\
+		"std r17, 8*17+16(%0)\n"	\
+		"std r18, 8*18+16(%0)\n"	\
+		"std r19, 8*19+16(%0)\n"	\
+		"std r20, 8*20+16(%0)\n"	\
+		"std r21, 8*21+16(%0)\n"	\
+		"std r22, 8*22+16(%0)\n"	\
+		"std r23, 8*23+16(%0)\n"	\
+		"std r24, 8*24+16(%0)\n"	\
+		"std r25, 8*25+16(%0)\n"	\
+		"std r26, 8*26+16(%0)\n"	\
+		"std r27, 8*27+16(%0)\n"	\
+		"std r28, 8*28+16(%0)\n"	\
+		"std r29, 8*29+16(%0)\n"	\
+		"std r30, 8*30+16(%0)\n"	\
+		"std r31, 8*31+16(%0)\n"	\
+		"stfd f0, 8*0+8*32+16(%0)\n"	\
+		"stfd f1, 8*1+8*32+16(%0)\n"	\
+		"stfd f2, 8*2+8*32+16(%0)\n"	\
+		"stfd f3, 8*3+8*32+16(%0)\n"	\
+		"stfd f4, 8*4+8*32+16(%0)\n"	\
+		"stfd f5, 8*5+8*32+16(%0)\n"	\
+		"stfd f6, 8*6+8*32+16(%0)\n"	\
+		"stfd f7, 8*7+8*32+16(%0)\n"	\
+		"stfd f8, 8*8+8*32+16(%0)\n"	\
+		"stfd f9, 8*9+8*32+16(%0)\n"	\
+		"stfd f10, 8*10+8*32+16(%0)\n"	\
+		"stfd f11, 8*11+8*32+16(%0)\n"	\
+		"stfd f12, 8*12+8*32+16(%0)\n"	\
+		"stfd f13, 8*13+8*32+16(%0)\n"	\
+		"stfd f14, 8*14+8*32+16(%0)\n"	\
+		"stfd f15, 8*15+8*32+16(%0)\n"	\
+		"stfd f16, 8*16+8*32+16(%0)\n"	\
+		"stfd f17, 8*17+8*32+16(%0)\n"	\
+		"stfd f18, 8*18+8*32+16(%0)\n"	\
+		"stfd f19, 8*19+8*32+16(%0)\n"	\
+		"stfd f20, 8*20+8*32+16(%0)\n"	\
+		"stfd f21, 8*21+8*32+16(%0)\n"	\
+		"stfd f22, 8*22+8*32+16(%0)\n"	\
+		"stfd f23, 8*23+8*32+16(%0)\n"	\
+		"stfd f24, 8*24+8*32+16(%0)\n"	\
+		"stfd f25, 8*25+8*32+16(%0)\n"	\
+		"stfd f26, 8*26+8*32+16(%0)\n"	\
+		"stfd f27, 8*27+8*32+16(%0)\n"	\
+		"stfd f28, 8*28+8*32+16(%0)\n"	\
+		"stfd f29, 8*29+8*32+16(%0)\n"	\
+		"stfd f30, 8*30+8*32+16(%0)\n"	\
+		"stfd f31, 8*31+8*32+16(%0)\n"	\
+		: : "r" (&(ctx))	\
+		: "memory"			\
+	)
+#else /* #ifdef __APPLE__ */
 #define MONO_CONTEXT_GET_CURRENT(ctx)	\
 	__asm__ __volatile__(	\
 		"std 0, 0(%0)\n"	\
@@ -673,6 +746,7 @@ typedef struct {
 		: : "r" (&(ctx))	\
 		: "memory"			\
 	)
+#endif /* #ifdef __APPLE__ */
 
 #else /* !defined(__mono_ppc64__) */
 
@@ -693,6 +767,79 @@ typedef struct {
 #define MONO_CONTEXT_GET_BP(ctx) ((gpointer)(gsize)((ctx)->regs [ppc_r31]))
 #define MONO_CONTEXT_GET_SP(ctx) ((gpointer)(gsize)((ctx)->sc_sp))
 
+#ifdef __APPLE__
+#define MONO_CONTEXT_GET_CURRENT(ctx)	\
+	__asm__ volatile(	\
+		"stw r0, 0(%0)\n"	\
+		"stw r1, 4(%0)\n"	\
+		"stw r0, 4*0+8(%0)\n"	\
+		"stw r1, 4*1+8(%0)\n"	\
+		"stw r2, 4*2+8(%0)\n"	\
+		"stw r3, 4*3+8(%0)\n"	\
+		"stw r4, 4*4+8(%0)\n"	\
+		"stw r5, 4*5+8(%0)\n"	\
+		"stw r6, 4*6+8(%0)\n"	\
+		"stw r7, 4*7+8(%0)\n"	\
+		"stw r8, 4*8+8(%0)\n"	\
+		"stw r9, 4*9+8(%0)\n"	\
+		"stw r10, 4*10+8(%0)\n"	\
+		"stw r11, 4*11+8(%0)\n"	\
+		"stw r12, 4*12+8(%0)\n"	\
+		"stw r13, 4*13+8(%0)\n"	\
+		"stw r14, 4*14+8(%0)\n"	\
+		"stw r15, 4*15+8(%0)\n"	\
+		"stw r16, 4*16+8(%0)\n"	\
+		"stw r17, 4*17+8(%0)\n"	\
+		"stw r18, 4*18+8(%0)\n"	\
+		"stw r19, 4*19+8(%0)\n"	\
+		"stw r20, 4*20+8(%0)\n"	\
+		"stw r21, 4*21+8(%0)\n"	\
+		"stw r22, 4*22+8(%0)\n"	\
+		"stw r23, 4*23+8(%0)\n"	\
+		"stw r24, 4*24+8(%0)\n"	\
+		"stw r25, 4*25+8(%0)\n"	\
+		"stw r26, 4*26+8(%0)\n"	\
+		"stw r27, 4*27+8(%0)\n"	\
+		"stw r28, 4*28+8(%0)\n"	\
+		"stw r29, 4*29+8(%0)\n"	\
+		"stw r30, 4*30+8(%0)\n"	\
+		"stw r31, 4*31+8(%0)\n"	\
+		"stfd f0, 8*0+4*32+8(%0)\n"	\
+		"stfd f1, 8*1+4*32+8(%0)\n"	\
+		"stfd f2, 8*2+4*32+8(%0)\n"	\
+		"stfd f3, 8*3+4*32+8(%0)\n"	\
+		"stfd f4, 8*4+4*32+8(%0)\n"	\
+		"stfd f5, 8*5+4*32+8(%0)\n"	\
+		"stfd f6, 8*6+4*32+8(%0)\n"	\
+		"stfd f7, 8*7+4*32+8(%0)\n"	\
+		"stfd f8, 8*8+4*32+8(%0)\n"	\
+		"stfd f9, 8*9+4*32+8(%0)\n"	\
+		"stfd f10, 8*10+4*32+8(%0)\n"	\
+		"stfd f11, 8*11+4*32+8(%0)\n"	\
+		"stfd f12, 8*12+4*32+8(%0)\n"	\
+		"stfd f13, 8*13+4*32+8(%0)\n"	\
+		"stfd f14, 8*14+4*32+8(%0)\n"	\
+		"stfd f15, 8*15+4*32+8(%0)\n"	\
+		"stfd f16, 8*16+4*32+8(%0)\n"	\
+		"stfd f17, 8*17+4*32+8(%0)\n"	\
+		"stfd f18, 8*18+4*32+8(%0)\n"	\
+		"stfd f19, 8*19+4*32+8(%0)\n"	\
+		"stfd f20, 8*20+4*32+8(%0)\n"	\
+		"stfd f21, 8*21+4*32+8(%0)\n"	\
+		"stfd f22, 8*22+4*32+8(%0)\n"	\
+		"stfd f23, 8*23+4*32+8(%0)\n"	\
+		"stfd f24, 8*24+4*32+8(%0)\n"	\
+		"stfd f25, 8*25+4*32+8(%0)\n"	\
+		"stfd f26, 8*26+4*32+8(%0)\n"	\
+		"stfd f27, 8*27+4*32+8(%0)\n"	\
+		"stfd f28, 8*28+4*32+8(%0)\n"	\
+		"stfd f29, 8*29+4*32+8(%0)\n"	\
+		"stfd f30, 8*30+4*32+8(%0)\n"	\
+		"stfd f31, 8*31+4*32+8(%0)\n"	\
+		: : "r" (&(ctx))	\
+		: "memory", "r0"	\
+	)
+#else /* #ifdef __APPLE__ */
 #define MONO_CONTEXT_GET_CURRENT(ctx)	\
 	__asm__ __volatile__(	\
 		"stw 0, 0(%0)\n"	\
@@ -764,6 +911,7 @@ typedef struct {
 		: : "r" (&(ctx))	\
 		: "memory", "r0"	\
 	)
+#endif /* #ifdef __APPLE__ */
 
 #endif
 
-- 
2.42.0

