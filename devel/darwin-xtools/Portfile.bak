# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:filetype=tcl:et:sw=4:ts=4:sts=4

PortSystem                  1.0
PortGroup                   cmake 1.1
PortGroup                   github 1.0
PortGroup                   muniversal 1.0

name                        darwin-xtools
epoch                       2

categories                  devel
maintainers                 {@barracuda156 macos-powerpc.org:barracuda}

variant v2 conflicts v3 description "Darwin Xtools branch 2.x" {}
variant v3 conflicts v2 description "Darwin Xtools branch 3.x" {}

if {[variant_isset v2]} {
    set xtools_version      6f6c04e8b25497851f6a5979a6e96023fffe22df
    github.setup            iains darwin-xtools ${xtools_version}
    version                 2.2.4
    revision                1

    checksums               ${name}-${xtools_version}.tar.gz \
                            rmd160  07dd50453b93f90ea4806fd8c12be3acb91c2fbd \
                            sha256  7568104068614b8e8b1cb72fcc01219f78f90a0d14d95c255be78e2c0a899d62 \
                            size    2932788
} elseif {[variant_isset v3]} {
    set xtools_version      6446947f3e99db52a40b30a38f36b9ae33492aea
    github.setup            iains darwin-xtools ${xtools_version}
    version                 3.3.0
    revision                1

    checksums               ${name}-${xtools_version}.tar.gz \
                            rmd160  18d99473a012f4fa48464aadd078921a25bdc322 \
                            sha256  9167b67e128f616cef079bbeda4b116fe0d41fe54784fff85826420daae23f5f \
                            size    2958759
} else {
    set xtools_version      80ad30c3bce821f52d94e844cbb1c2d095a127c6
    github.setup            iains darwin-xtools ${xtools_version}
    version                 1.1.0
    revision                0

    checksums               ${name}-${xtools_version}.tar.gz \
                            rmd160  0b0c7155c63a5f962c32848cd649d98b7eef1298 \
                            sha256  83971978f413ee309589307ed994fd7a7f2d55e818e6435b2663e8167da260d7 \
                            size    2887509
}

github.tarball_from         archive

description                 Aset of modifications to ctools and ld64 that enable support \
                            for older systems with up-to-date-tools.
long_description            {*}${description}
license                     {APSL-2 Apache-2}

homepage                    https://github.com/iains/darwin-xtools

if {[variant_isset v2] || [variant_isset v3]} {
    patchfiles-append       0001-ld64-unwinddump-include-stdlib-for-exit-3.patch \
                            0002-ld64-archive_file-fix-compilation-without-LTO_SUPPOR.patch \
                            0003-cctools-cmake-as-fix-compilation-on-powerpc-apple-da.patch \
                            0004-cctools-otool-fix-duplicate-symbol-in-arm-i386-_disa.patch \
                            0005-cctools-cmake-cbtlibs-link-against-libstuff-for-vari.patch \
                            0006-ld64-cmake-build-libprunetrie-as-static-archive.patch

    # Tapi is not supported in branch 1.x.
    variant tapi conflicts tapilite description "Use standalone Tapi library" {
        depends_lib-append  port:libtapi

        configure.args-append \
                            -DXTOOLS_TAPI_PATH=${prefix}
    }

    variant tapilite conflicts tapi description "Build replacement library for Tapi support" {
        set libyaml_version     0.2.5
        set libyaml_distfile    ${libyaml_version}.tar.gz
        distfiles-append        ${libyaml_distfile}:libyaml
        master_sites-append     https://github.com/yaml/libyaml/archive/refs/tags:libyaml
        checksums-append        ${libyaml_distfile} \
                                rmd160  7fe42b7d7bb0dd07aedee6c775c43fd35bb5cf3e \
                                sha256  fa240dbf262be053f3898006d502d514936c818e422afdcf33921c63bed9bf2e \
                                size    85055

        post-extract {
            ln -s ${workpath}/libyaml-${libyaml_version} ${worksrcpath}/libyaml
        }

        patchfiles-append   0007-tapilite-add-TAPI-emulation-library.patch \
                            0008-ld64-cmake-use-normal-cmake-trickery-to-link-against.patch \
                            0009-tapilite-bunch-of-fixes-and-changes.patch \
                            0010-tapilite-cmake-explitly-build-static-library.patch \
                            0011-libyaml-add-the-way-to-include-it.patch \
                            0012-tapilite-fix-build-by-clang.patch

        configure.args-append \
                            -DXTOOLS_LIBYAML_PATH=${worksrcpath}/libyaml \
                            -DXTOOLS_USE_TAPILITE=ON
    }

    if {${os.arch} ne "powerpc"} {
        patchfiles-append   0013-ld64-fix-compilation-on-arm64.patch \
                            0014-cctools-fix-build-on-macOS-monterey.patch \
                            0015-cctools-removed-redundant-implementation-of-get_toc_.patch
    }
}

if {${os.arch} eq "powerpc"} {
    variant lto description "Enable LLVM LTO" {
        set llvm_v          7.1.1

        depends_lib-append  port:llvm-powerpc

        configure.args-append \
                            -DXTOOLS_LTO_PATH=${prefix}/libexec/llvm-${prefix} \
                            -DXTOOLS_LTO_SUPPORT=ON
    }
}

# Use cmake-bootstrap
depends_build-replace       path:bin/cmake:cmake port:cmake-bootstrap
depends_skip_archcheck-append \
                            cmake-bootstrap
configure.cmd               ${prefix}/libexec/cmake-bootstrap/bin/cmake

# Prevent finding or linking against any other ports
compiler.cpath
compiler.library_path
configure.cppflags-delete   -I${prefix}/include
configure.ldflags-delete    -L${prefix}/lib

compiler.cxx_standard       2011

# compiler.blacklist-append   *gcc-4.*

merger_arch_flag            yes
merger_arch_compiler        yes
merger_must_run_binaries    yes

if {${os.platform} eq "darwin" && ${os.major} < 12} {
#    depends_build-append    port:gcc10-bootstrap
#    depends_skip_archcheck-append \
                            gcc10-bootstrap

    # Leopard is the first macOS which supports Rosetta
    # See: https://trac.macports.org/ticket/67284
#     if {${os.major} > 8} {
#         pre-configure {
#             file mkdir ${workpath}/bins
# 
#             set gcc [open "${workpath}/bins/gcc" w 0755]
#             puts ${gcc} "#!/bin/sh"
#             puts ${gcc} "arch -arch $\{BUILD_ARCH:-${build_arch}\} ${prefix}/libexec/gcc10-bootstrap/bin/gcc \"\$@\""
#             close ${gcc}
# 
#             set gxx [open "${workpath}/bins/g++" w 0755]
#             puts ${gxx} "#!/bin/sh"
#             puts ${gxx} "arch -arch $\{BUILD_ARCH:-${build_arch}\} ${prefix}/libexec/gcc10-bootstrap/bin/g++ \"\$@\""
#             close ${gxx}
#         }
# 
#         configure.cc        ${workpath}/bins/gcc
#         configure.cxx       ${workpath}/bins/g++
# 
#         if {[variant_exists universal] && [variant_isset universal]} {
#             foreach arch ${universal_archs_supported} {
#                 lappend merger_configure_env(${arch}) BUILD_ARCH=${arch}
#                 lappend merger_build_env(${arch}) BUILD_ARCH=${arch}
#             }
#         }
#     } else {
#         configure.cc        ${prefix}/libexec/gcc10-bootstrap/bin/gcc
#         configure.cxx       ${prefix}/libexec/gcc10-bootstrap/bin/g++
#     }

    # Prevent it from linking against gcc's libstdc++.6.dylib and libgcc_s.1.1.dylib
    configure.ldflags-append \
                            -static-libstdc++ -static-libgcc

#    configure.compiler.add_deps no-DALLOW_64BIT_LEB_ON_32B_TARGET=1
}

cmake.install_prefix        ${prefix}/libexec/${name}

cmake.build_type            Release
cmake.generator             {Unix Makefiles}

proc xtools_arch {arch} {
    switch ${arch} {
        arm64       {return aarch64}
        ppc64       {return powerpc64}
        ppc         {return powerpc}
        default     {return ${arch}}
    }
}

platform darwin {
    set xtools_triple       [xtools_arch ${build_arch}]-apple-darwin${os.major}
    configure.pre_args-append \
                            -DLLVM_DEFAULT_TARGET_TRIPLE=${xtools_triple}
}

configure.pre_args-replace  -DCMAKE_BUILD_WITH_INSTALL_RPATH:BOOL=ON \
                            -DCMAKE_BUILD_WITH_INSTALL_RPATH:BOOL=OFF \
                            -DCMAKE_INSTALL_RPATH="${prefix}/lib\;${cmake.install_prefix}/lib" \
                            -DCMAKE_INSTALL_RPATH="${cmake.install_prefix}/lib" \
                            -DCMAKE_SYSTEM_PREFIX_PATH="${prefix}\;${cmake.install_prefix}\;/usr" \
                            -DCMAKE_SYSTEM_PREFIX_PATH="${cmake.install_prefix}\;/usr"

configure.args-append       -DCCTOOLS_LD_CLASSIC=OFF \
                            -DPACKAGE_VERSION="macos-powerpc" \
                            -DXTOOLS_CXX_HAS_STDLIB_FLAG=OFF

# 64bit LD requires futures patches
if {${configure.build_arch} ni [list i386 ppc]} {
    configure.args-append   -DXTOOLS_HOST_IS_64B=ON
} else {
    configure.args-append   -DXTOOLS_HOST_IS_64B=OFF
}

post-destroot {
    if {[variant_isset v2] || [variant_isset v3]} {
        file delete -force {*}[glob -directory ${destroot}${cmake.install_prefix} \
                            cmake/yaml* include/yaml.h lib/libyaml*]
    }
}

github.livecheck.branch darwin-xtools-[string map {. -} ${version}]
