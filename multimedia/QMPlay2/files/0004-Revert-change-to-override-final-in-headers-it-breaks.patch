From bc6c844bfc416470851c7ad8cf90dd9a177bfb37 Mon Sep 17 00:00:00 2001
From: Sergey Fedorov <barracuda@macos-powerpc.org>
Date: Thu, 21 Nov 2024 12:43:11 +0800
Subject: [PATCH 4/8] Revert change to override final in headers, it breaks
 linking

---
 src/gui/AboutWidget.hpp                       |  6 +-
 src/gui/AddressDialog.hpp                     |  4 +-
 src/gui/AudioThr.hpp                          | 10 +--
 src/gui/DeintSettingsW.hpp                    |  4 +-
 src/gui/DemuxerThr.hpp                        |  6 +-
 src/gui/EntryProperties.hpp                   |  6 +-
 src/gui/EventFilterWorkarounds.hpp            |  4 +-
 src/gui/InfoDock.hpp                          |  6 +-
 src/gui/Main.hpp                              |  6 +-
 src/gui/MainWidget.hpp                        | 22 +++---
 src/gui/PlayClass.hpp                         |  4 +-
 src/gui/PlaylistWidget.hpp                    | 22 +++---
 src/gui/SettingsWidget.hpp                    |  8 +-
 src/gui/ShortcutHandler.hpp                   | 16 ++--
 src/gui/TagEditor.hpp                         |  6 +-
 src/gui/Updater.hpp                           |  4 +-
 src/gui/VideoAdjustmentW.hpp                  |  4 +-
 src/gui/VideoDock.hpp                         | 24 +++---
 src/gui/VideoThr.hpp                          | 10 +--
 src/modules/ALSA/ALSA.hpp                     | 12 +--
 src/modules/ALSA/ALSAWriter.hpp               | 18 ++---
 src/modules/AudioCD/AudioCD.hpp               | 16 ++--
 src/modules/AudioCD/AudioCDDemux.hpp          | 32 ++++----
 src/modules/AudioFilters/AudioFilters.hpp     | 12 +--
 src/modules/AudioFilters/BS2B.hpp             | 12 +--
 src/modules/AudioFilters/DysonCompressor.hpp  | 14 ++--
 src/modules/AudioFilters/Echo.hpp             |  8 +-
 src/modules/AudioFilters/Equalizer.hpp        | 14 ++--
 src/modules/AudioFilters/EqualizerGUI.hpp     | 12 +--
 src/modules/AudioFilters/PhaseReverse.hpp     |  8 +-
 src/modules/AudioFilters/VoiceRemoval.hpp     |  8 +-
 src/modules/CUVID/Cuvid.hpp                   | 16 ++--
 src/modules/CUVID/CuvidDec.hpp                | 18 ++---
 src/modules/Chiptune/Chiptune.hpp             | 12 +--
 src/modules/Chiptune/GME.hpp                  | 28 ++++---
 src/modules/Chiptune/SIDPlay.hpp              | 28 ++++---
 src/modules/DirectX/DirectDraw.hpp            | 32 ++++----
 src/modules/DirectX/DirectX.hpp               | 12 +--
 src/modules/Extensions/Downloader.hpp         | 22 +++---
 src/modules/Extensions/Extensions.hpp         | 12 +--
 src/modules/Extensions/LastFM.hpp             |  4 +-
 src/modules/Extensions/Lyrics.hpp             |  6 +-
 src/modules/Extensions/MPRIS2.hpp             | 16 ++--
 src/modules/Extensions/MediaBrowser.hpp       | 20 ++---
 src/modules/Extensions/Radio.hpp              |  8 +-
 .../Extensions/Radio/RadioBrowserModel.hpp    | 18 ++---
 src/modules/Extensions/YouTube.hpp            | 24 +++---
 src/modules/FFmpeg/FFDecDXVA2.hpp             | 12 +--
 src/modules/FFmpeg/FFDecSW.hpp                | 18 ++---
 src/modules/FFmpeg/FFDecVAAPI.hpp             | 14 ++--
 src/modules/FFmpeg/FFDecVDPAU.hpp             | 10 +--
 src/modules/FFmpeg/FFDecVDPAU_NW.hpp          | 12 +--
 src/modules/FFmpeg/FFDecVTB.cpp               |  2 +-
 src/modules/FFmpeg/FFDecVTB.hpp               | 14 ++--
 src/modules/FFmpeg/FFDemux.hpp                | 42 +++++------
 src/modules/FFmpeg/FFReader.hpp               | 24 +++---
 src/modules/FFmpeg/FFmpeg.hpp                 | 16 ++--
 src/modules/FFmpeg/VAAPIWriter.hpp            | 30 ++++----
 src/modules/FFmpeg/VDPAUWriter.hpp            | 30 ++++----
 .../FileAssociation/FileAssociation.hpp       | 12 +--
 src/modules/Inputs/Inputs.hpp                 | 18 ++---
 src/modules/Inputs/PCM.hpp                    | 20 ++---
 src/modules/Inputs/Rayman2.hpp                | 20 ++---
 src/modules/Inputs/ToneGenerator.hpp          | 24 +++---
 src/modules/Modplug/MPDemux.hpp               | 24 +++---
 src/modules/Modplug/Modplug.hpp               | 12 +--
 src/modules/Notify/Notify.hpp                 | 12 +--
 src/modules/Notify/NotifyExtension.hpp        |  6 +-
 src/modules/OpenGL2/OpenGL2.hpp               | 12 +--
 src/modules/OpenGL2/OpenGL2Common.hpp         |  4 +-
 src/modules/OpenGL2/OpenGL2Widget.hpp         | 16 ++--
 src/modules/OpenGL2/OpenGL2Window.hpp         | 20 ++---
 src/modules/OpenGL2/OpenGL2Writer.hpp         | 26 +++----
 src/modules/OpenSLES/OpenSLESWriter.hpp       | 18 ++---
 src/modules/Playlists/M3U.hpp                 |  6 +-
 src/modules/Playlists/PLS.hpp                 |  6 +-
 src/modules/Playlists/Playlists.hpp           | 12 +--
 src/modules/Playlists/XSPF.hpp                |  6 +-
 src/modules/PortAudio/PortAudio.hpp           | 14 ++--
 src/modules/PortAudio/PortAudioWriter.hpp     | 18 ++---
 src/modules/PulseAudio/PulseAudio.hpp         | 12 +--
 src/modules/PulseAudio/PulseAudioWriter.hpp   | 16 ++--
 src/modules/QPainter/QPainter.hpp             | 12 +--
 src/modules/QPainter/QPainterWriter.hpp       | 30 ++++----
 src/modules/Subtitles/Classic.hpp             |  4 +-
 src/modules/Subtitles/SRT.hpp                 |  4 +-
 src/modules/Subtitles/Subtitles.hpp           | 12 +--
 src/modules/VideoFilters/BlendDeint.hpp       |  6 +-
 src/modules/VideoFilters/BobDeint.hpp         |  8 +-
 src/modules/VideoFilters/DiscardDeint.hpp     |  6 +-
 src/modules/VideoFilters/MotionBlur.hpp       |  6 +-
 src/modules/VideoFilters/VFilters.hpp         |  6 +-
 src/modules/VideoFilters/YadifDeint.hpp       | 14 ++--
 src/modules/Visualizations/FFTSpectrum.hpp    | 26 +++----
 src/modules/Visualizations/SimpleVis.hpp      | 26 +++----
 src/modules/Visualizations/Visualizations.hpp | 12 +--
 src/modules/XVideo/XVideo.hpp                 | 12 +--
 src/modules/XVideo/XVideoWriter.hpp           | 28 +++----
 src/qmplay2/LineEdit.cpp                      | 28 ++-----
 src/qmplay2/VideoFilters.cpp                  |  4 +-
 src/qmplay2/headers/AudioFilter.hpp           |  2 +-
 src/qmplay2/headers/Buffer.hpp                |  4 +-
 src/qmplay2/headers/ColorButton.hpp           |  6 +-
 src/qmplay2/headers/CommonJS.hpp              |  4 +-
 src/qmplay2/headers/Decoder.hpp               |  2 +-
 src/qmplay2/headers/DeintFilter.hpp           |  2 +-
 src/qmplay2/headers/Demuxer.hpp               |  2 +-
 src/qmplay2/headers/DockWidget.hpp            |  7 +-
 src/qmplay2/headers/Functions.hpp             | 74 +++++++++----------
 src/qmplay2/headers/IPC.hpp                   | 18 ++---
 src/qmplay2/headers/ImgScaler.hpp             |  4 +-
 src/qmplay2/headers/InDockW.hpp               | 10 +--
 src/qmplay2/headers/LibASS.hpp                |  4 +-
 src/qmplay2/headers/LineEdit.hpp              | 26 +++----
 src/qmplay2/headers/MkvMuxer.hpp              |  4 +-
 src/qmplay2/headers/Module.hpp                |  2 +-
 src/qmplay2/headers/ModuleCommon.hpp          |  2 +-
 src/qmplay2/headers/ModuleParams.hpp          |  4 +-
 src/qmplay2/headers/NetworkAccess.hpp         |  9 +--
 src/qmplay2/headers/NetworkAccessJS.hpp       |  4 +-
 src/qmplay2/headers/Notifies.hpp              |  5 +-
 src/qmplay2/headers/NotifiesAndroid.hpp       |  6 +-
 src/qmplay2/headers/NotifiesFreedesktop.hpp   |  8 +-
 src/qmplay2/headers/NotifiesMacOS.hpp         |  8 +-
 src/qmplay2/headers/NotifiesTray.hpp          |  8 +-
 src/qmplay2/headers/Packet.hpp                |  2 +-
 src/qmplay2/headers/PacketBuffer.hpp          |  2 +-
 src/qmplay2/headers/PixelFormats.hpp          | 10 +--
 src/qmplay2/headers/Playlist.hpp              |  3 +-
 src/qmplay2/headers/QMPlay2Core.hpp           |  4 +-
 src/qmplay2/headers/QMPlay2Extensions.hpp     |  2 +-
 src/qmplay2/headers/QMPlay2OSD.hpp            |  4 +-
 src/qmplay2/headers/Reader.hpp                |  2 +-
 src/qmplay2/headers/Settings.hpp              |  2 +-
 src/qmplay2/headers/Slider.hpp                | 16 ++--
 src/qmplay2/headers/SndResampler.hpp          |  4 +-
 src/qmplay2/headers/StreamInfo.hpp            |  5 +-
 src/qmplay2/headers/SubsDec.hpp               |  4 +-
 src/qmplay2/headers/TreeWidgetJS.hpp          |  6 +-
 src/qmplay2/headers/Version.hpp               |  8 +-
 src/qmplay2/headers/VideoAdjustment.hpp       |  4 +-
 src/qmplay2/headers/VideoFilter.hpp           |  2 +-
 src/qmplay2/headers/VideoFilters.hpp          |  2 +-
 src/qmplay2/headers/VideoFrame.hpp            |  6 +-
 src/qmplay2/headers/VideoWriter.hpp           |  2 +-
 src/qmplay2/headers/Writer.hpp                |  2 +-
 src/qmplay2/headers/YouTubeDL.hpp             |  6 +-
 147 files changed, 838 insertions(+), 901 deletions(-)

diff --git src/gui/AboutWidget.hpp src/gui/AboutWidget.hpp
index 98994f7a..33833656 100644
--- src/gui/AboutWidget.hpp
+++ src/gui/AboutWidget.hpp
@@ -24,14 +24,14 @@
 class QPlainTextEdit;
 class QPushButton;
 
-class AboutWidget final : public QWidget
+class AboutWidget : public QWidget
 {
     Q_OBJECT
 public:
     AboutWidget();
 private:
-    void showEvent(QShowEvent *) override;
-    void closeEvent(QCloseEvent *) override;
+	void showEvent(QShowEvent *) override final;
+	void closeEvent(QCloseEvent *) override final;
 
     QPlainTextEdit *logE, *clE, *auE;
     QPushButton *clrLogB;
diff --git src/gui/AddressDialog.hpp src/gui/AddressDialog.hpp
index 4a6f779a..3835b97d 100644
--- src/gui/AddressDialog.hpp
+++ src/gui/AddressDialog.hpp
@@ -24,12 +24,12 @@
 #include <QCheckBox>
 #include <QDialog>
 
-class AddressDialog final : public QDialog
+class AddressDialog : public QDialog
 {
     Q_DECLARE_TR_FUNCTIONS(AddressDialog)
 public:
     AddressDialog(QWidget *);
-    ~AddressDialog();
+    ~AddressDialog() final;
 
     inline bool addAndPlay() const
     {
diff --git src/gui/AudioThr.hpp src/gui/AudioThr.hpp
index f2382376..c0842611 100644
--- src/gui/AudioThr.hpp
+++ src/gui/AudioThr.hpp
@@ -28,14 +28,14 @@ class QMPlay2Extensions;
 class PlayClass;
 class AudioFilter;
 
-class AudioThr final : public AVThread
+class AudioThr : public AVThread
 {
     Q_OBJECT
 public:
     AudioThr(PlayClass &, const QStringList &pluginsName = {});
-    ~AudioThr();
+    ~AudioThr() final;
 
-    void stop(bool terminate = false) override;
+    void stop(bool terminate = false) override final;
     void clearVisualizations();
 
     bool setParams(uchar realChn, uint realSRate, uchar chn, uint sRate, bool resamplerFirst);
@@ -47,7 +47,7 @@ public:
         allowAudioDrain = true;
     }
 private:
-    void run() override;
+    void run() override final;
 
     bool resampler_create();
 
@@ -55,7 +55,7 @@ private:
     inline uint currentSampleRate() const;
 
 #ifdef Q_OS_WIN
-    void timerEvent(QTimerEvent *) override;
+    void timerEvent(QTimerEvent *) override final;
 #endif
 
     SndResampler sndResampler;
diff --git src/gui/DeintSettingsW.hpp src/gui/DeintSettingsW.hpp
index ea74fac2..92787425 100644
--- src/gui/DeintSettingsW.hpp
+++ src/gui/DeintSettingsW.hpp
@@ -24,14 +24,14 @@ class QCheckBox;
 class QComboBox;
 class Module;
 
-class DeintSettingsW final : public QGroupBox
+class DeintSettingsW : public QGroupBox
 {
     Q_OBJECT
 public:
     static void init();
 
     DeintSettingsW();
-    ~DeintSettingsW();
+    ~DeintSettingsW() final;
 
     void writeSettings();
 private slots:
diff --git src/gui/DemuxerThr.hpp src/gui/DemuxerThr.hpp
index 35db9e36..9fdfd88d 100644
--- src/gui/DemuxerThr.hpp
+++ src/gui/DemuxerThr.hpp
@@ -32,14 +32,14 @@ class AVThread;
 class Demuxer;
 class BasicIO;
 
-class DemuxerThr final : public QThread
+class DemuxerThr : public QThread
 {
     friend class DemuxerTimer;
     friend class PlayClass;
     Q_OBJECT
 private:
     DemuxerThr(PlayClass &);
-    ~DemuxerThr();
+    ~DemuxerThr() final;
 
     QByteArray getCoverFromStream() const;
 
@@ -65,7 +65,7 @@ private:
 
     void checkReadyWrite(AVThread *avThr);
 
-    void run() override;
+    void run() override final;
 
     inline void ensureTrueUpdateBuffered();
     inline bool canUpdateBuffered() const;
diff --git src/gui/EntryProperties.hpp src/gui/EntryProperties.hpp
index d89c2ccb..ba203300 100644
--- src/gui/EntryProperties.hpp
+++ src/gui/EntryProperties.hpp
@@ -30,7 +30,7 @@ class QCheckBox;
 #endif
 class QLabel;
 
-class EntryProperties final : public QDialog
+class EntryProperties : public QDialog
 {
     Q_OBJECT
 public:
@@ -54,6 +54,6 @@ private slots:
 #endif
     void browse();
     void openUrl();
-    void accept() override;
-    void reject() override;
+    void accept() override final;
+    void reject() override final;
 };
diff --git src/gui/EventFilterWorkarounds.hpp src/gui/EventFilterWorkarounds.hpp
index e8c28cff..ce32dda1 100644
--- src/gui/EventFilterWorkarounds.hpp
+++ src/gui/EventFilterWorkarounds.hpp
@@ -20,7 +20,7 @@
 
 #include <QObject>
 
-class EventFilterWorkarounds final : public QObject
+class EventFilterWorkarounds : public QObject
 {
     Q_OBJECT
 
@@ -29,5 +29,5 @@ public:
     ~EventFilterWorkarounds();
 
 private:
-    bool eventFilter(QObject *watched, QEvent *event) override;
+    bool eventFilter(QObject *watched, QEvent *event) override final;
 };
diff --git src/gui/InfoDock.hpp src/gui/InfoDock.hpp
index cd3354a6..c46c4c7b 100644
--- src/gui/InfoDock.hpp
+++ src/gui/InfoDock.hpp
@@ -22,11 +22,11 @@
 
 #include <DockWidget.hpp>
 
-class TextEdit final : public QTextEdit
+class TextEdit : public QTextEdit
 {
 private:
-    void mouseMoveEvent(QMouseEvent *) override;
-    void mousePressEvent(QMouseEvent *) override;
+    void mouseMoveEvent(QMouseEvent *) override final;
+    void mousePressEvent(QMouseEvent *) override final;
 };
 
 /**/
diff --git src/gui/Main.hpp src/gui/Main.hpp
index e4916950..26f17d54 100644
--- src/gui/Main.hpp
+++ src/gui/Main.hpp
@@ -35,7 +35,7 @@ class VideoDock;
 class MenuBar;
 class QWidget;
 
-class QMPlay2GUIClass final : private QMPlay2CoreClass
+class QMPlay2GUIClass : private QMPlay2CoreClass
 {
     Q_DECLARE_TR_FUNCTIONS(QMPlay2GUIClass)
 
@@ -68,7 +68,7 @@ public:
 
     void updateInDockW();
 
-    const QWidget *getVideoDock() const override;
+    const QWidget *getVideoDock() const override final;
 
     QColor grad1, grad2, qmpTxt;
     QIcon *groupIcon, *mediaIcon, *folderIcon;
@@ -84,7 +84,7 @@ public:
     QString newProfileName, cmdLineProfile;
 private:
     QMPlay2GUIClass();
-    ~QMPlay2GUIClass();
+    ~QMPlay2GUIClass() final;
 };
 
 #define QMPlay2GUI \
diff --git src/gui/MainWidget.hpp src/gui/MainWidget.hpp
index 2fe04bc5..5ac4cb24 100644
--- src/gui/MainWidget.hpp
+++ src/gui/MainWidget.hpp
@@ -42,14 +42,14 @@ class QMPlay2Extensions;
     class QWinTaskbarProgress;
 #endif
 
-class MainWidget final : public QMainWindow
+class MainWidget : public QMainWindow
 {
     friend class QMPlay2GUIClass;
     Q_PROPERTY(bool fullScreen READ getFullScreen)
     Q_OBJECT
 public:
     MainWidget(QList<QPair<QString, QString>> &argument);
-    ~MainWidget();
+    ~MainWidget() final;
 private slots:
     void detachFromPipe();
 
@@ -122,7 +122,7 @@ private slots:
 private:
     void savePlistHelper(const QString &, const QString &, bool);
 
-    QMenu *createPopupMenu() override;
+    QMenu *createPopupMenu() override final;
 
     void showToolBar(bool);
     void hideDocks();
@@ -135,15 +135,15 @@ private:
     void setWindowsTaskBarFeatures();
 #endif
 
-    void keyPressEvent(QKeyEvent *) override;
-    void mouseMoveEvent(QMouseEvent *) override;
-    void leaveEvent(QEvent *) override;
-    void closeEvent(QCloseEvent *) override;
-    void moveEvent(QMoveEvent *) override;
-    void showEvent(QShowEvent *) override;
-    void hideEvent(QHideEvent *) override;
+    void keyPressEvent(QKeyEvent *) override final;
+    void mouseMoveEvent(QMouseEvent *) override final;
+    void leaveEvent(QEvent *) override final;
+    void closeEvent(QCloseEvent *) override final;
+    void moveEvent(QMoveEvent *) override final;
+    void showEvent(QShowEvent *) override final;
+    void hideEvent(QHideEvent *) override final;
 
-    bool eventFilter(QObject *obj, QEvent *event) override;
+    bool eventFilter(QObject *obj, QEvent *event) override final;
 
 #ifdef Q_OS_MACOS
     void fileOpenTimerTimeout();
diff --git src/gui/PlayClass.hpp src/gui/PlayClass.hpp
index 41e4e629..bc4152ed 100644
--- src/gui/PlayClass.hpp
+++ src/gui/PlayClass.hpp
@@ -44,7 +44,7 @@ enum
     SEEK_REPEAT = -3
 };
 
-class PlayClass final : public QObject
+class PlayClass : public QObject
 {
     Q_OBJECT
     friend class DemuxerThr;
@@ -53,7 +53,7 @@ class PlayClass final : public QObject
     friend class AudioThr;
 public:
     PlayClass();
-    ~PlayClass();
+    ~PlayClass() final;
 
     Q_SLOT void play(const QString &);
     Q_SLOT void stop(bool quitApp = false);
diff --git src/gui/PlaylistWidget.hpp src/gui/PlaylistWidget.hpp
index 1f20e523..3c73b6ad 100644
--- src/gui/PlaylistWidget.hpp
+++ src/gui/PlaylistWidget.hpp
@@ -34,7 +34,7 @@ class QTreeWidgetItem;
 class PlaylistWidget;
 class Demuxer;
 
-class UpdateEntryThr final : public QThread
+class UpdateEntryThr : public QThread
 {
     Q_OBJECT
 
@@ -51,7 +51,7 @@ public:
     }
 
 private:
-    void run() override;
+    void run() override final;
 
     QAtomicInt pendingUpdates;
     IOController<> ioCtrl;
@@ -84,7 +84,7 @@ private slots:
     void finished();
 };
 
-class AddThr final : public QThread
+class AddThr : public QThread
 {
     Q_OBJECT
 public:
@@ -101,7 +101,7 @@ private slots:
     void modifyItemFlags(QTreeWidgetItem *tWI, int flags);
     void deleteTreeWidgetItem(QTreeWidgetItem *tWI);
 private:
-    void run() override;
+    void run() override final;
 
     bool add(const QStringList &urls, QTreeWidgetItem *parent, const Functions::DemuxersInfo &demuxersInfo, QStringList *existingEntries = nullptr, bool loadList = false);
     QTreeWidgetItem *insertPlaylistEntries(const Playlist::Entries &entries, QTreeWidgetItem *parent, const Functions::DemuxersInfo &demuxersInfo, int insertChildAt, QStringList *existingEntries);
@@ -120,7 +120,7 @@ signals:
     void status(bool s);
 };
 
-class PlaylistWidget final : public QTreeWidget
+class PlaylistWidget : public QTreeWidget
 {
     friend class AddThr;
     friend class UpdateEntryThr;
@@ -196,12 +196,12 @@ private:
 
     void createExtensionsMenu();
 
-    void mouseMoveEvent(QMouseEvent *) override;
-    void dragEnterEvent(QDragEnterEvent *) override;
-    void dragMoveEvent(QDragMoveEvent *) override;
-    void dropEvent(QDropEvent *) override;
-    void paintEvent(QPaintEvent *) override;
-    void scrollContentsBy(int dx, int dy) override;
+    void mouseMoveEvent(QMouseEvent *) override final;
+    void dragEnterEvent(QDragEnterEvent *) override final;
+    void dragMoveEvent(QDragMoveEvent *) override final;
+    void dropEvent(QDropEvent *) override final;
+    void paintEvent(QPaintEvent *) override final;
+    void scrollContentsBy(int dx, int dy) override final;
 
     QRect getArcRect(int size);
 
diff --git src/gui/SettingsWidget.hpp src/gui/SettingsWidget.hpp
index b36ac00c..12257f53 100644
--- src/gui/SettingsWidget.hpp
+++ src/gui/SettingsWidget.hpp
@@ -35,7 +35,7 @@ namespace Ui {
     class ModulesList;
 }
 
-class SettingsWidget final : public QWidget
+class SettingsWidget : public QWidget
 {
     Q_OBJECT
 public:
@@ -44,7 +44,7 @@ public:
     static void SetAudioChannels(int chn);
 
     SettingsWidget(int page, const QString &module, QWidget *videoEq);
-    ~SettingsWidget();
+    ~SettingsWidget() final;
 
     void setAudioChannels();
 private:
@@ -56,8 +56,8 @@ private:
 
     inline QString getSelectedProfile();
 
-    void showEvent(QShowEvent *) override;
-    void closeEvent(QCloseEvent *) override;
+    void showEvent(QShowEvent *) override final;
+    void closeEvent(QCloseEvent *) override final;
 
     Ui::GeneralSettings *page1;
     Ui::PlaybackSettings *page2;
diff --git src/gui/ShortcutHandler.hpp src/gui/ShortcutHandler.hpp
index 1723eb78..ad140325 100644
--- src/gui/ShortcutHandler.hpp
+++ src/gui/ShortcutHandler.hpp
@@ -23,23 +23,23 @@
 
 class QAction;
 
-class ShortcutHandler final : public QAbstractTableModel
+class ShortcutHandler : public QAbstractTableModel
 {
     Q_DECLARE_TR_FUNCTIONS(ShortcutHandler)
 
 public:
     ShortcutHandler(QObject *parent);
-    ~ShortcutHandler();
+    ~ShortcutHandler() final;
 
-    int columnCount(const QModelIndex &parent) const override;
-    int rowCount(const QModelIndex &parent) const override;
+    int columnCount(const QModelIndex &parent) const override final;
+    int rowCount(const QModelIndex &parent) const override final;
 
-    Qt::ItemFlags flags(const QModelIndex &index) const override;
+    Qt::ItemFlags flags(const QModelIndex &index) const override final;
 
-    QVariant headerData(int section, Qt::Orientation orientation, int role) const override;
+    QVariant headerData(int section, Qt::Orientation orientation, int role) const override final;
 
-    QVariant data(const QModelIndex &index, int role) const override;
-    bool setData(const QModelIndex &index, const QVariant &value, int role) override;
+    QVariant data(const QModelIndex &index, int role) const override final;
+    bool setData(const QModelIndex &index, const QVariant &value, int role) override final;
 
     void appendAction(QAction *action, const QString &settingsName, const QString &defaultShortcut);
 
diff --git src/gui/TagEditor.hpp src/gui/TagEditor.hpp
index 24edcf0e..283c1497 100644
--- src/gui/TagEditor.hpp
+++ src/gui/TagEditor.hpp
@@ -29,12 +29,12 @@ class QLineEdit;
 class QSpinBox;
 class QLabel;
 
-class PictureW final : public QWidget
+class PictureW : public QWidget
 {
 public:
     PictureW(TagLib::ByteVector &picture);
 private:
-    void paintEvent(QPaintEvent *) override;
+    void paintEvent(QPaintEvent *) override final;
 
     TagLib::ByteVector &picture;
 };
@@ -44,7 +44,7 @@ class TagEditor : public QGroupBox
     Q_OBJECT
 public:
     TagEditor();
-    ~TagEditor();
+    ~TagEditor() final;
 
     bool open(const QString &fileName);
     void clear();
diff --git src/gui/Updater.hpp src/gui/Updater.hpp
index 027ce819..a18d1158 100644
--- src/gui/Updater.hpp
+++ src/gui/Updater.hpp
@@ -30,7 +30,7 @@
     class QLabel;
 #endif
 
-class Updater final : public
+class Updater : public
 #ifdef UPDATER
     QDialog
 #else
@@ -45,7 +45,7 @@ public:
 #else
     Updater(QObject *parent);
 #endif
-    ~Updater();
+    ~Updater() final;
 
 #ifdef UPDATER
     bool downloading() const;
diff --git src/gui/VideoAdjustmentW.hpp src/gui/VideoAdjustmentW.hpp
index 419ebb01..c900354f 100644
--- src/gui/VideoAdjustmentW.hpp
+++ src/gui/VideoAdjustmentW.hpp
@@ -27,13 +27,13 @@ class ModuleParams;
 class QAction;
 class Slider;
 
-class VideoAdjustmentW final : public QWidget
+class VideoAdjustmentW : public QWidget
 {
     Q_OBJECT
 
 public:
     VideoAdjustmentW();
-    ~VideoAdjustmentW();
+    ~VideoAdjustmentW() final;
 
     void restoreValues();
     void saveValues();
diff --git src/gui/VideoDock.hpp src/gui/VideoDock.hpp
index bd26b3f9..d50dba18 100644
--- src/gui/VideoDock.hpp
+++ src/gui/VideoDock.hpp
@@ -26,7 +26,7 @@
 
 class QMenu;
 
-class VideoDock final : public DockWidget
+class VideoDock : public DockWidget
 {
     Q_OBJECT
 public:
@@ -49,17 +49,17 @@ private:
 
     void unsetCursor(QWidget *w);
 
-    void dragEnterEvent(QDragEnterEvent *) override;
-    void dropEvent(QDropEvent *) override;
-    void mouseMoveEvent(QMouseEvent *) override;
-    void mouseDoubleClickEvent(QMouseEvent *) override;
-    void mousePressEvent(QMouseEvent *) override;
-    void mouseReleaseEvent(QMouseEvent *) override;
-    void moveEvent(QMoveEvent *) override;
-    void wheelEvent(QWheelEvent *) override;
-    void leaveEvent(QEvent *) override;
-    void enterEvent(QEvent *) override;
-    bool event(QEvent *) override;
+    void dragEnterEvent(QDragEnterEvent *) override final;
+    void dropEvent(QDropEvent *) override final;
+    void mouseMoveEvent(QMouseEvent *) override final;
+    void mouseDoubleClickEvent(QMouseEvent *) override final;
+    void mousePressEvent(QMouseEvent *) override final;
+    void mouseReleaseEvent(QMouseEvent *) override final;
+    void moveEvent(QMoveEvent *) override final;
+    void wheelEvent(QWheelEvent *) override final;
+    void leaveEvent(QEvent *) override final;
+    void enterEvent(QEvent *) override final;
+    bool event(QEvent *) override final;
 
     QTimer hideCursorTim, leftButtonPlayTim;
     InDockW iDW;
diff --git src/gui/VideoThr.hpp src/gui/VideoThr.hpp
index 728edce8..6713829f 100644
--- src/gui/VideoThr.hpp
+++ src/gui/VideoThr.hpp
@@ -25,16 +25,16 @@
 class QMPlay2OSD;
 class VideoWriter;
 
-class VideoThr final : public AVThread
+class VideoThr : public AVThread
 {
     Q_OBJECT
 public:
     VideoThr(PlayClass &, VideoWriter *, const QStringList &pluginsName = {});
-    ~VideoThr();
+    ~VideoThr() final;
 
-    void stop(bool terminate = false) override;
+    void stop(bool terminate = false) override final;
 
-    bool hasDecoderError() const override;
+    bool hasDecoderError() const override final;
 
     inline VideoWriter *getHWAccelWriter() const
     {
@@ -80,7 +80,7 @@ public:
 private:
     inline VideoWriter *videoWriter() const;
 
-    void run() override;
+    void run() override final;
 
     bool deleteSubs, syncVtoA, doScreenshot, canWrite, deleteOSD, deleteFrame, gotFrameOrError, decoderError;
     double lastSampleAspectRatio;
diff --git src/modules/ALSA/ALSA.hpp src/modules/ALSA/ALSA.hpp
index 7554dc52..f08ddc69 100644
--- src/modules/ALSA/ALSA.hpp
+++ src/modules/ALSA/ALSA.hpp
@@ -20,15 +20,15 @@
 
 #include <Module.hpp>
 
-class ALSA final : public Module
+class ALSA : public Module
 {
 public:
     ALSA();
 private:
-    QList<Info> getModulesInfo(const bool) const override;
-    void *createInstance(const QString &) override;
+    QList<Info> getModulesInfo(const bool) const override final;
+    void *createInstance(const QString &) override final;
 
-    SettingsWidget *getSettingsWidget() override;
+    SettingsWidget *getSettingsWidget() override final;
 };
 
 /**/
@@ -39,13 +39,13 @@ class QDoubleSpinBox;
 class QCheckBox;
 class QComboBox;
 
-class ModuleSettingsWidget final : public Module::SettingsWidget
+class ModuleSettingsWidget : public Module::SettingsWidget
 {
     Q_DECLARE_TR_FUNCTIONS(ModuleSettingsWidget)
 public:
     ModuleSettingsWidget(Module &);
 private:
-    void saveSettings() override;
+    void saveSettings() override final;
 
     QCheckBox *enabledB, *autoMultichnB;
     QDoubleSpinBox *delayB;
diff --git src/modules/ALSA/ALSAWriter.hpp src/modules/ALSA/ALSAWriter.hpp
index 08c14a79..1e860862 100644
--- src/modules/ALSA/ALSAWriter.hpp
+++ src/modules/ALSA/ALSAWriter.hpp
@@ -25,25 +25,25 @@
 
 struct _snd_pcm;
 
-class ALSAWriter final : public Writer
+class ALSAWriter : public Writer
 {
     Q_DECLARE_TR_FUNCTIONS(ALSAWriter)
 public:
     ALSAWriter(Module &);
 private:
-    ~ALSAWriter();
+    ~ALSAWriter() final;
 
-    bool set() override;
+    bool set() override final;
 
-    bool readyWrite() const override;
+    bool readyWrite() const override final;
 
-    bool processParams(bool *paramsCorrected) override;
-    qint64 write(const QByteArray &) override;
-    void pause() override;
+    bool processParams(bool *paramsCorrected) override final;
+    qint64 write(const QByteArray &) override final;
+    void pause() override final;
 
-    QString name() const override;
+    QString name() const override final;
 
-    bool open() override;
+    bool open() override final;
 
     /**/
 
diff --git src/modules/AudioCD/AudioCD.hpp src/modules/AudioCD/AudioCD.hpp
index 95065ae0..bd19f789 100644
--- src/modules/AudioCD/AudioCD.hpp
+++ src/modules/AudioCD/AudioCD.hpp
@@ -24,19 +24,19 @@
 
 class CDIODestroyTimer;
 
-class AudioCD final : public Module
+class AudioCD : public Module
 {
     Q_OBJECT
 public:
     AudioCD();
-    ~AudioCD();
+    ~AudioCD() final;
 private:
-    QList<Info> getModulesInfo(const bool) const override;
-    void *createInstance(const QString &) override;
+    QList<Info> getModulesInfo(const bool) const override final;
+    void *createInstance(const QString &) override final;
 
-    QList<QAction *> getAddActions() override;
+    QList<QAction *> getAddActions() override final;
 
-    SettingsWidget *getSettingsWidget() override;
+    SettingsWidget *getSettingsWidget() override final;
 
     QIcon CD;
 
@@ -52,13 +52,13 @@ class QGridLayout;
 class QGroupBox;
 class QCheckBox;
 
-class ModuleSettingsWidget final : public Module::SettingsWidget
+class ModuleSettingsWidget : public Module::SettingsWidget
 {
     Q_DECLARE_TR_FUNCTIONS(ModuleSettingsWidget)
 public:
     ModuleSettingsWidget(Module &);
 private:
-    void saveSettings() override;
+    void saveSettings() override final;
 
     QGroupBox *audioCDB;
     QCheckBox *useCDDB, *useCDTEXT;
diff --git src/modules/AudioCD/AudioCDDemux.hpp src/modules/AudioCD/AudioCDDemux.hpp
index 3a0c6f3d..d98bc518 100644
--- src/modules/AudioCD/AudioCDDemux.hpp
+++ src/modules/AudioCD/AudioCDDemux.hpp
@@ -26,19 +26,19 @@
 #include <cdio/cdio.h>
 #include <cddb/cddb.h>
 
-class CDIODestroyTimer final : public QObject
+class CDIODestroyTimer : public QObject
 {
     Q_OBJECT
 public:
     CDIODestroyTimer();
-    ~CDIODestroyTimer();
+    ~CDIODestroyTimer() final;
 
     Q_SIGNAL void setInstance(CdIo_t *_cdio, const QString &_device, unsigned _discID);
     CdIo_t *getInstance(const QString &_device, unsigned &_discID);
 private slots:
     void setInstanceSlot(CdIo_t *_cdio, const QString &_device, unsigned _discID);
 private:
-    void timerEvent(QTimerEvent *e) override;
+    void timerEvent(QTimerEvent *e) override final;
 
     QAtomicInt timerId;
     CdIo_t *cdio;
@@ -48,7 +48,7 @@ private:
 
 /**/
 
-class AudioCDDemux final : public Demuxer
+class AudioCDDemux : public Demuxer
 {
     Q_DECLARE_TR_FUNCTIONS(AudioCDDemux)
 public:
@@ -56,23 +56,23 @@ public:
 
     AudioCDDemux(Module &, CDIODestroyTimer &destroyTimer);
 private:
-    ~AudioCDDemux();
+    ~AudioCDDemux() final;
 
-    bool set() override;
+    bool set() override final;
 
-    QString name() const override;
-    QString title() const override;
-    QList<QMPlay2Tag> tags() const override;
-    double length() const override;
-    int bitrate() const override;
+    QString name() const override final;
+    QString title() const override final;
+    QList<QMPlay2Tag> tags() const override final;
+    double length() const override final;
+    int bitrate() const override final;
 
-    bool seek(double, bool) override;
-    bool read(Packet &, int & ) override;
-    void abort() override;
+    bool seek(double, bool) override final;
+    bool read(Packet &, int & ) override final;
+    void abort() override final;
 
-    bool open(const QString &) override;
+    bool open(const QString &) override final;
 
-    Playlist::Entries fetchTracks(const QString &url, bool &ok) override;
+    Playlist::Entries fetchTracks(const QString &url, bool &ok) override final;
 
     /**/
 
diff --git src/modules/AudioFilters/AudioFilters.hpp src/modules/AudioFilters/AudioFilters.hpp
index 6823f625..02d3d1c1 100644
--- src/modules/AudioFilters/AudioFilters.hpp
+++ src/modules/AudioFilters/AudioFilters.hpp
@@ -20,15 +20,15 @@
 
 #include <Module.hpp>
 
-class AudioFilters final : public Module
+class AudioFilters : public Module
 {
 public:
     AudioFilters();
 private:
-    QList<Info> getModulesInfo(const bool) const override;
-    void *createInstance(const QString &) override;
+    QList<Info> getModulesInfo(const bool) const override final;
+    void *createInstance(const QString &) override final;
 
-    SettingsWidget *getSettingsWidget() override;
+    SettingsWidget *getSettingsWidget() override final;
 };
 
 /**/
@@ -41,7 +41,7 @@ class QComboBox;
 class QSpinBox;
 class Slider;
 
-class ModuleSettingsWidget final : public Module::SettingsWidget
+class ModuleSettingsWidget : public Module::SettingsWidget
 {
     Q_OBJECT
 public:
@@ -55,7 +55,7 @@ private slots:
     void compressor();
     void defaultSettings();
 private:
-    void saveSettings() override;
+    void saveSettings() override final;
 
     bool restoringDefault;
 
diff --git src/modules/AudioFilters/BS2B.hpp src/modules/AudioFilters/BS2B.hpp
index f62e4235..00822620 100644
--- src/modules/AudioFilters/BS2B.hpp
+++ src/modules/AudioFilters/BS2B.hpp
@@ -22,17 +22,17 @@
 
 #include <bs2b/bs2b.hpp>
 
-class BS2B final : public AudioFilter
+class BS2B : public AudioFilter
 {
 public:
     BS2B(Module &module);
-    ~BS2B();
+    ~BS2B() final;
 
-    bool set() override;
+    bool set() override final;
 private:
-    bool setAudioParameters(uchar, uint srate) override;
-    void clearBuffers() override;
-    double filter(Buffer &data, bool flush) override;
+    bool setAudioParameters(uchar, uint srate) override final;
+    void clearBuffers() override final;
+    double filter(Buffer &data, bool flush) override final;
 
     void alloc();
 
diff --git src/modules/AudioFilters/DysonCompressor.hpp src/modules/AudioFilters/DysonCompressor.hpp
index 2f2b086f..69409429 100644
--- src/modules/AudioFilters/DysonCompressor.hpp
+++ src/modules/AudioFilters/DysonCompressor.hpp
@@ -25,19 +25,19 @@
 #define NFILT  12
 #define NEFILT 17
 
-class DysonCompressor final : public AudioFilter
+class DysonCompressor : public AudioFilter
 {
 public:
     DysonCompressor(Module &module);
-    ~DysonCompressor();
+    ~DysonCompressor() final;
 
-    bool set() override;
+    bool set() override final;
 
 private:
-    bool setAudioParameters(uchar chn, uint srate) override;
-    int bufferedSamples() const override;
-    void clearBuffers() override;
-    double filter(Buffer &data, bool flush) override;
+    bool setAudioParameters(uchar chn, uint srate) override final;
+    int bufferedSamples() const override final;
+    void clearBuffers() override final;
+    double filter(Buffer &data, bool flush) override final;
 
     using FloatVector = QVector<float>;
 
diff --git src/modules/AudioFilters/Echo.hpp src/modules/AudioFilters/Echo.hpp
index c418ec3c..5ad34e3e 100644
--- src/modules/AudioFilters/Echo.hpp
+++ src/modules/AudioFilters/Echo.hpp
@@ -20,15 +20,15 @@
 
 #include <AudioFilter.hpp>
 
-class Echo final : public AudioFilter
+class Echo : public AudioFilter
 {
 public:
     Echo(Module &);
 
-    bool set() override;
+    bool set() override final;
 private:
-    bool setAudioParameters(uchar, uint) override;
-    double filter(Buffer &, bool) override;
+    bool setAudioParameters(uchar, uint) override final;
+    double filter(Buffer &, bool) override final;
 
     void alloc(bool);
 
diff --git src/modules/AudioFilters/Equalizer.hpp src/modules/AudioFilters/Equalizer.hpp
index 7c8d9665..f6b79283 100644
--- src/modules/AudioFilters/Equalizer.hpp
+++ src/modules/AudioFilters/Equalizer.hpp
@@ -23,7 +23,7 @@
 struct FFTContext;
 struct FFTComplex;
 
-class Equalizer final : public AudioFilter
+class Equalizer : public AudioFilter
 {
 public:
     static QVector<float> interpolate(const QVector<float> &, const int);
@@ -31,14 +31,14 @@ public:
     static float getAmpl(int val);
 
     Equalizer(Module &);
-    ~Equalizer();
+    ~Equalizer() final;
 
-    bool set() override;
+    bool set() override final;
 private:
-    bool setAudioParameters(uchar, uint) override;
-    int bufferedSamples() const override;
-    void clearBuffers() override;
-    double filter(Buffer &data, bool flush) override;
+    bool setAudioParameters(uchar, uint) override final;
+    int bufferedSamples() const override final;
+    void clearBuffers() override final;
+    double filter(Buffer &data, bool flush) override final;
 
     /**/
 
diff --git src/modules/AudioFilters/EqualizerGUI.hpp src/modules/AudioFilters/EqualizerGUI.hpp
index eb48d902..52aa4293 100644
--- src/modules/AudioFilters/EqualizerGUI.hpp
+++ src/modules/AudioFilters/EqualizerGUI.hpp
@@ -20,7 +20,7 @@
 
 #include <QMPlay2Extensions.hpp>
 
-class GraphW final : public QWidget
+class GraphW : public QWidget
 {
 public:
     GraphW();
@@ -31,7 +31,7 @@ public:
         values.resize(vals);
     }
 private:
-    void paintEvent(QPaintEvent *) override;
+    void paintEvent(QPaintEvent *) override final;
 
     QVector<float> values;
     float preamp;
@@ -44,15 +44,15 @@ class QCheckBox;
 class QSlider;
 class QMenu;
 
-class EqualizerGUI final : public QWidget, public QMPlay2Extensions
+class EqualizerGUI : public QWidget, public QMPlay2Extensions
 {
     Q_OBJECT
 public:
     EqualizerGUI(Module &);
 
-    bool set() override;
+    bool set() override final;
 
-    DockWidget *getDockWidget() override;
+    DockWidget *getDockWidget() override final;
 private slots:
     void wallpaperChanged(bool hasWallpaper, double alpha);
     void enabled(bool);
@@ -80,7 +80,7 @@ private:
 
     void loadPresets();
 
-    void showEvent(QShowEvent *event) override;
+    void showEvent(QShowEvent *event) override final;
 
     QMap<int, int> getPresetValues(const QString &name);
 
diff --git src/modules/AudioFilters/PhaseReverse.hpp src/modules/AudioFilters/PhaseReverse.hpp
index 470aad80..59fe4456 100644
--- src/modules/AudioFilters/PhaseReverse.hpp
+++ src/modules/AudioFilters/PhaseReverse.hpp
@@ -20,15 +20,15 @@
 
 #include <AudioFilter.hpp>
 
-class PhaseReverse final : public AudioFilter
+class PhaseReverse : public AudioFilter
 {
 public:
     PhaseReverse(Module &);
 
-    bool set() override;
+    bool set() override final;
 private:
-    bool setAudioParameters(uchar, uint) override;
-    double filter(Buffer &, bool) override;
+    bool setAudioParameters(uchar, uint) override final;
+    double filter(Buffer &, bool) override final;
 
     bool enabled, hasParameters, canFilter, reverseRight;
     uchar chn;
diff --git src/modules/AudioFilters/VoiceRemoval.hpp src/modules/AudioFilters/VoiceRemoval.hpp
index b67e6844..024c98af 100644
--- src/modules/AudioFilters/VoiceRemoval.hpp
+++ src/modules/AudioFilters/VoiceRemoval.hpp
@@ -20,15 +20,15 @@
 
 #include <AudioFilter.hpp>
 
-class VoiceRemoval final : public AudioFilter
+class VoiceRemoval : public AudioFilter
 {
 public:
     VoiceRemoval(Module &);
 
-    bool set() override;
+    bool set() override final;
 private:
-    bool setAudioParameters(uchar, uint) override;
-    double filter(Buffer &, bool) override;
+    bool setAudioParameters(uchar, uint) override final;
+    double filter(Buffer &, bool) override final;
 
     bool enabled, hasParameters, canFilter;
     uchar chn;
diff --git src/modules/CUVID/Cuvid.hpp src/modules/CUVID/Cuvid.hpp
index e1d695d8..ee60dece 100644
--- src/modules/CUVID/Cuvid.hpp
+++ src/modules/CUVID/Cuvid.hpp
@@ -24,23 +24,21 @@
 
 class QComboBox;
 
-class Cuvid final : public Module
+class Cuvid : public Module
 {
     Q_DECLARE_TR_FUNCTIONS(Cuvid)
 
 public:
     Cuvid();
-    ~Cuvid();
+    ~Cuvid() final;
 
 private:
-    QList<Info> getModulesInfo(const bool showDisabled) const override;
-    void *createInstance(const QString &name) override;
+    QList<Info> getModulesInfo(const bool showDisabled) const override final;
+    void *createInstance(const QString &name) override final;
 
-    SettingsWidget *getSettingsWidget() override;
+    SettingsWidget *getSettingsWidget() override final;
 
-    void videoDeintSave() override;
-
-    /**/
+    void videoDeintSave() override final;
 
     QComboBox *m_deintMethodB;
 };
@@ -58,7 +56,7 @@ public:
     ModuleSettingsWidget(Module &module);
 
 private:
-    void saveSettings() override;
+    void saveSettings() override final;
 
     QCheckBox *m_enabledB, *m_copyVideoB, *m_decodeMPEG4;
 #ifdef Q_OS_WIN
diff --git src/modules/CUVID/CuvidDec.hpp src/modules/CUVID/CuvidDec.hpp
index fb96a41d..5bdd4bcf 100644
--- src/modules/CUVID/CuvidDec.hpp
+++ src/modules/CUVID/CuvidDec.hpp
@@ -33,7 +33,7 @@ struct AVBSFContext;
 struct SwsContext;
 struct AVPacket;
 
-class CuvidDec final : public Decoder
+class CuvidDec : public Decoder
 {
     Q_DECLARE_TR_FUNCTIONS(CuvidDec)
 
@@ -44,26 +44,24 @@ public:
     static bool canCreateInstance();
 
     CuvidDec(Module &module);
-    ~CuvidDec();
+    ~CuvidDec() final;
 
-    bool set() override;
+    bool set() override final;
 
     int videoSequence(CUVIDEOFORMAT *format);
     int pictureDecode(CUVIDPICPARAMS *picParams);
     int pictureDisplay(CUVIDPARSERDISPINFO *dispInfo);
 
 private:
-    QString name() const override;
+    QString name() const override final;
 
-    VideoWriter *HWAccel() const override;
+    VideoWriter *HWAccel() const override final;
 
-    int decodeVideo(Packet &encodedPacket, VideoFrame &decoded, QByteArray &newPixFmt, bool flush, unsigned hurry_up) override;
+    int decodeVideo(Packet &encodedPacket, VideoFrame &decoded, QByteArray &newPixFmt, bool flush, unsigned hurry_up) override final;
 
-    bool hasCriticalError() const override;
+    bool hasCriticalError() const override final;
 
-    bool open(StreamInfo &streamInfo, VideoWriter *writer = nullptr) override;
-
-    /**/
+    bool open(StreamInfo &streamInfo, VideoWriter *writer = nullptr) override final;
 
     bool testDecoder(const int depth);
 
diff --git src/modules/Chiptune/Chiptune.hpp src/modules/Chiptune/Chiptune.hpp
index 1892cb3b..174e84dd 100644
--- src/modules/Chiptune/Chiptune.hpp
+++ src/modules/Chiptune/Chiptune.hpp
@@ -20,15 +20,15 @@
 
 #include <Module.hpp>
 
-class Chiptune final : public Module
+class Chiptune : public Module
 {
 public:
     Chiptune();
 private:
-    QList<Info> getModulesInfo(const bool) const override;
-    void *createInstance(const QString &) override;
+    QList<Info> getModulesInfo(const bool) const override final;
+    void *createInstance(const QString &) override final;
 
-    SettingsWidget *getSettingsWidget() override;
+    SettingsWidget *getSettingsWidget() override final;
 
     QIcon GMEIcon, SIDIcon;
 };
@@ -40,13 +40,13 @@ private:
 class QCheckBox;
 class QSpinBox;
 
-class ModuleSettingsWidget final : public Module::SettingsWidget
+class ModuleSettingsWidget : public Module::SettingsWidget
 {
     Q_DECLARE_TR_FUNCTIONS(ModuleSettingsWidget)
 public:
     ModuleSettingsWidget(Module &);
 private:
-    void saveSettings() override;
+    void saveSettings() override final;
 
 #ifdef USE_GME
     QCheckBox *gmeB;
diff --git src/modules/Chiptune/GME.hpp src/modules/Chiptune/GME.hpp
index d19c8642..701493f1 100644
--- src/modules/Chiptune/GME.hpp
+++ src/modules/Chiptune/GME.hpp
@@ -24,36 +24,34 @@
 
 class Reader;
 
-class GME final : public Demuxer
+class GME : public Demuxer
 {
     Q_DECLARE_TR_FUNCTIONS(GME)
 public:
     GME(Module &);
-    ~GME();
+    ~GME() final;
 private:
-    bool set() override;
+    bool set() override final;
 
-    QString name() const override;
-    QString title() const override;
-    QList<QMPlay2Tag> tags() const override;
-    double length() const override;
-    int bitrate() const override;
+    QString name() const override final;
+    QString title() const override final;
+    QList<QMPlay2Tag> tags() const override final;
+    double length() const override final;
+    int bitrate() const override final;
 
-    bool seek(double, bool) override;
-    bool read(Packet &, int &) override;
-    void abort() override;
+    bool seek(double, bool) override final;
+    bool read(Packet &, int &) override final;
+    void abort() override final;
 
-    bool open(const QString &) override;
-
-    Playlist::Entries fetchTracks(const QString &url, bool &ok) override;
+    bool open(const QString &) override final;
 
+    Playlist::Entries fetchTracks(const QString &url, bool &ok) override final;
 
     bool open(const QString &url, bool tracksOnly);
 
     QString getTitle(gme_info_t *info, int track) const;
     int getLength(gme_info_t *info) const;
 
-
     IOController<Reader> m_reader;
     quint32 m_srate;
     bool m_aborted;
diff --git src/modules/Chiptune/SIDPlay.hpp src/modules/Chiptune/SIDPlay.hpp
index 2925bc07..a6a8566e 100644
--- src/modules/Chiptune/SIDPlay.hpp
+++ src/modules/Chiptune/SIDPlay.hpp
@@ -26,35 +26,33 @@
 class SidTuneInfo;
 class Reader;
 
-class SIDPlay final : public Demuxer
+class SIDPlay : public Demuxer
 {
     Q_DECLARE_TR_FUNCTIONS(SIDPlay)
 public:
     SIDPlay(Module &);
-    ~SIDPlay();
+    ~SIDPlay() final;
 private:
-    bool set() override;
+    bool set() override final;
 
-    QString name() const override;
-    QString title() const override;
-    QList<QMPlay2Tag> tags() const override;
-    double length() const override;
-    int bitrate() const override;
+    QString name() const override final;
+    QString title() const override final;
+    QList<QMPlay2Tag> tags() const override final;
+    double length() const override final;
+    int bitrate() const override final;
 
-    bool seek(double, bool backward) override;
-    bool read(Packet &, int &) override;
-    void abort() override;
+    bool seek(double, bool backward) override final;
+    bool read(Packet &, int &) override final;
+    void abort() override final;
 
-    bool open(const QString &) override;
-
-    Playlist::Entries fetchTracks(const QString &url, bool &ok) override;
+    bool open(const QString &) override final;
 
+    Playlist::Entries fetchTracks(const QString &url, bool &ok) override final;
 
     bool open(const QString &url, bool tracksOnly);
 
     QString getTitle(const SidTuneInfo *info, int track) const;
 
-
     IOController<Reader> m_reader;
     quint32 m_srate;
     bool m_aborted;
diff --git src/modules/DirectX/DirectDraw.hpp src/modules/DirectX/DirectDraw.hpp
index bc488ebd..06180168 100644
--- src/modules/DirectX/DirectDraw.hpp
+++ src/modules/DirectX/DirectDraw.hpp
@@ -28,12 +28,12 @@
 class DirectDrawWriter;
 class QMPlay2OSD;
 
-class Drawable final : public QWidget
+class Drawable : public QWidget
 {
     Q_OBJECT
 public:
     Drawable(DirectDrawWriter &);
-    ~Drawable();
+    ~Drawable() final;
 
     inline bool canDraw() const
     {
@@ -48,7 +48,7 @@ public:
 
     void draw(const VideoFrame &videoFrame);
 
-    void resizeEvent(QResizeEvent *) override;
+    void resizeEvent(QResizeEvent *) override final;
 
     QList<const QMPlay2OSD *> osd_list;
     QMutex osd_mutex;
@@ -64,10 +64,10 @@ private:
 
     bool restoreLostSurface();
 
-    void paintEvent(QPaintEvent *) override;
-    bool event(QEvent *) override;
+    void paintEvent(QPaintEvent *) override final;
+    bool event(QEvent *) override final;
 
-    QPaintEngine *paintEngine() const override;
+    QQPaintEngine *paintEngine() const override final;
 
     QImage osdImg;
     QVector<quint64> osd_ids;
@@ -90,27 +90,27 @@ private:
 
 /**/
 
-class DirectDrawWriter final : public VideoWriter
+class DirectDrawWriter : public VideoWriter
 {
     friend class Drawable;
 public:
     DirectDrawWriter(Module &);
 private:
-        ~DirectDrawWriter();
+    ~DirectDrawWriter() final;
 
-    bool set() override;
+    bool set() override final;
 
-    bool readyWrite() const override;
+    bool readyWrite() const override final;
 
-    bool processParams(bool *paramsCorrected) override;
-    void writeVideo(const VideoFrame &videoFrame) override;
-    void writeOSD(const QList<const QMPlay2OSD *> &) override;
+    bool processParams(bool *paramsCorrected) override final;
+    void writeVideo(const VideoFrame &videoFrame) override final;
+    void writeOSD(const QList<const QMPlay2OSD *> &) override final;
 
-    void pause() override;
+    void pause() override final;
 
-    QString name() const override;
+    QString name() const override final;
 
-    bool open() override;
+    bool open() override final;
 
     /**/
 
diff --git src/modules/DirectX/DirectX.hpp src/modules/DirectX/DirectX.hpp
index dde8d6b5..70cfb418 100644
--- src/modules/DirectX/DirectX.hpp
+++ src/modules/DirectX/DirectX.hpp
@@ -22,29 +22,29 @@
 
 #include <QCoreApplication>
 
-class DirectX final : public Module
+class DirectX : public Module
 {
 public:
     DirectX();
 private:
-    QList<Info> getModulesInfo(const bool) const override;
-    void *createInstance(const QString &) override;
+    QList<Info> getModulesInfo(const bool) const override final;
+    void *createInstance(const QString &) override final;
 
-    SettingsWidget *getSettingsWidget() override;
+    SettingsWidget *getSettingsWidget() override final;
 };
 
 /**/
 
 class QCheckBox;
 
-class ModuleSettingsWidget final : public Module::SettingsWidget
+class ModuleSettingsWidget : public Module::SettingsWidget
 {
     Q_DECLARE_TR_FUNCTIONS(ModuleSettingsWidget)
 
 public:
     ModuleSettingsWidget(Module &);
 private:
-    void saveSettings() override;
+    void saveSettings() override final;
 
     QCheckBox *ddrawB;
 };
diff --git src/modules/Extensions/Downloader.hpp src/modules/Extensions/Downloader.hpp
index a19787ac..75789df6 100644
--- src/modules/Extensions/Downloader.hpp
+++ src/modules/Extensions/Downloader.hpp
@@ -32,12 +32,12 @@ class QProgressBar;
 class QTreeWidgetItem;
 class DownloaderThread;
 
-class DownloadItemW final : public QWidget
+class DownloadItemW : public QWidget
 {
     Q_OBJECT
 public:
     DownloadItemW(DownloaderThread *downloaderThr, QString name, const QIcon &icon, QDataStream *stream, QString preset);
-    ~DownloadItemW();
+    ~DownloadItemW() final;
 
     void setName(const QString &);
     void setSizeAndFilePath(qint64, const QString &);
@@ -99,7 +99,7 @@ private:
 
 /**/
 
-class DownloadListW final : public QTreeWidget
+class DownloadListW : public QTreeWidget
 {
     friend class Downloader;
 public:
@@ -113,13 +113,13 @@ private:
 
 /**/
 
-class DownloaderThread final : public QThread
+class DownloaderThread : public QThread
 {
     Q_OBJECT
     enum {ADD_ENTRY, NAME, SET, SET_POS, SET_SPEED, DOWNLOAD_ERROR, FINISH};
 public:
     DownloaderThread(QDataStream *stream, const QString &url, DownloadListW *downloadLW, const QMenu *convertsMenu, const QString &name = QString(), const QString &prefix = QString(), const QString &param = QString(), const QString &preset = QString());
-    ~DownloaderThread();
+    ~DownloaderThread() final;
 
     void serialize(QDataStream &stream);
 
@@ -131,7 +131,7 @@ private slots:
     void stop();
     void finished();
 private:
-    void run() override;
+    void run() override final;
 
     QIcon getIcon();
 
@@ -145,19 +145,19 @@ private:
 
 /**/
 
-class Downloader final : public QWidget, public QMPlay2Extensions
+class Downloader : public QWidget, public QMPlay2Extensions
 {
     Q_OBJECT
 
 public:
     Downloader(Module &module);
-    ~Downloader();
+    ~Downloader() final;
 
-    void init() override;
+    void init() override final;
 
-    DockWidget *getDockWidget() override;
+    DockWidget *getDockWidget() override final;
 
-    QVector<QAction *> getActions(const QString &, double, const QString &, const QString &, const QString &) override;
+    QVector<QAction *> getActions(const QString &, double, const QString &, const QString &, const QString &) override final;
 
 private:
     void addConvertPreset();
diff --git src/modules/Extensions/Extensions.hpp src/modules/Extensions/Extensions.hpp
index c2a424e1..6d1e74ed 100644
--- src/modules/Extensions/Extensions.hpp
+++ src/modules/Extensions/Extensions.hpp
@@ -20,15 +20,15 @@
 
 #include <Module.hpp>
 
-class Extensions final : public Module
+class Extensions : public Module
 {
 public:
     Extensions();
 private:
-    QList<Info> getModulesInfo(const bool) const override;
-    void *createInstance(const QString &) override;
+    QList<Info> getModulesInfo(const bool) const override final;
+    void *createInstance(const QString &) override final;
 
-    SettingsWidget *getSettingsWidget() override;
+    SettingsWidget *getSettingsWidget() override final;
 
     QIcon downloader, youtube, radio;
 #ifdef USE_LASTFM
@@ -45,7 +45,7 @@ class QGroupBox;
 class QCheckBox;
 class LineEdit;
 
-class ModuleSettingsWidget final : public Module::SettingsWidget
+class ModuleSettingsWidget : public Module::SettingsWidget
 {
     Q_OBJECT
 public:
@@ -56,7 +56,7 @@ private slots:
     void passwordEdited();
 #endif
 private:
-    void saveSettings() override;
+    void saveSettings() override final;
 
 #ifdef USE_MPRIS2
     QCheckBox *MPRIS2B;
diff --git src/modules/Extensions/LastFM.hpp src/modules/Extensions/LastFM.hpp
index 3d2b3e73..c8abaa10 100644
--- src/modules/Extensions/LastFM.hpp
+++ src/modules/Extensions/LastFM.hpp
@@ -29,7 +29,7 @@
 
 class QImage;
 
-class LastFM final : public QObject, public QMPlay2Extensions
+class LastFM : public QObject, public QMPlay2Extensions
 {
     Q_OBJECT
 public:
@@ -49,7 +49,7 @@ public:
 
     LastFM(Module &module);
 private:
-    bool set() override;
+    bool set() override final;
 
     void getAlbumCover(const QString &title, const QString &artist, const QString &album, bool titleAsAlbum = false);
 
diff --git src/modules/Extensions/Lyrics.hpp src/modules/Extensions/Lyrics.hpp
index d4f954a3..572571cc 100644
--- src/modules/Extensions/Lyrics.hpp
+++ src/modules/Extensions/Lyrics.hpp
@@ -25,15 +25,15 @@
 #include <QTextEdit>
 #include <QPointer>
 
-class Lyrics final : public QTextEdit, public QMPlay2Extensions
+class Lyrics : public QTextEdit, public QMPlay2Extensions
 {
     Q_OBJECT
 
 public:
     Lyrics(Module &module);
-    ~Lyrics();
+    ~Lyrics() final;
 
-    DockWidget *getDockWidget() override;
+    DockWidget *getDockWidget() override final;
 
 private slots:
     void visibilityChanged(bool v);
diff --git src/modules/Extensions/MPRIS2.hpp src/modules/Extensions/MPRIS2.hpp
index 5a218250..80f1769d 100644
--- src/modules/Extensions/MPRIS2.hpp
+++ src/modules/Extensions/MPRIS2.hpp
@@ -23,7 +23,7 @@
 
 #include <memory>
 
-class MediaPlayer2Root final : public QDBusAbstractAdaptor
+class MediaPlayer2Root : public QDBusAbstractAdaptor
 {
     Q_OBJECT
 
@@ -62,7 +62,7 @@ private:
 
 /**/
 
-class MediaPlayer2Player final : public QDBusAbstractAdaptor
+class MediaPlayer2Player : public QDBusAbstractAdaptor
 {
     Q_OBJECT
 
@@ -83,7 +83,7 @@ class MediaPlayer2Player final : public QDBusAbstractAdaptor
     Q_PROPERTY(double Volume READ volume WRITE setVolume)
 public:
     MediaPlayer2Player(QObject *p);
-    ~MediaPlayer2Player();
+    ~MediaPlayer2Player() final;
 
     bool canControl() const;
     bool canGoNext() const;
@@ -139,11 +139,11 @@ private:
 
 /**/
 
-class MPRIS2Interface final : public QObject
+class MPRIS2Interface : public QObject
 {
 public:
     MPRIS2Interface();
-    ~MPRIS2Interface();
+    ~MPRIS2Interface() final;
 
     inline bool isOk() const;
 private:
@@ -157,13 +157,13 @@ private:
 
 #include <QMPlay2Extensions.hpp>
 
-class MPRIS2 final : public QMPlay2Extensions
+class MPRIS2 : public QMPlay2Extensions
 {
 public:
     MPRIS2(Module &module);
-    ~MPRIS2();
+    ~MPRIS2() final;
 private:
-    bool set() override;
+    bool set() override final;
 
     std::unique_ptr<MPRIS2Interface> mpris2Interface;
 };
diff --git src/modules/Extensions/MediaBrowser.hpp src/modules/Extensions/MediaBrowser.hpp
index 717d9fd9..c607a7a3 100644
--- src/modules/Extensions/MediaBrowser.hpp
+++ src/modules/Extensions/MediaBrowser.hpp
@@ -33,13 +33,13 @@ class MediaBrowserJS;
 
 /**/
 
-class MediaBrowserResults final : public QTreeWidget
+class MediaBrowserResults : public QTreeWidget
 {
     Q_OBJECT
 
 public:
     MediaBrowserResults(MediaBrowserJS *&mediaBrowser);
-    ~MediaBrowserResults();
+    ~MediaBrowserResults() final;
 
     void setCurrentName(const QString &name, const QString &pageName);
 
@@ -69,7 +69,7 @@ private:
 class QToolButton;
 class QComboBox;
 
-class MediaBrowserPages final : public QWidget
+class MediaBrowserPages : public QWidget
 {
     Q_OBJECT
 
@@ -114,23 +114,23 @@ class QCompleter;
 class QTextEdit;
 class LineEdit;
 
-class MediaBrowser final : public QWidget, public QMPlay2Extensions
+class MediaBrowser : public QWidget, public QMPlay2Extensions
 {
     Q_OBJECT
 
 public:
     MediaBrowser(Module &module);
-    ~MediaBrowser();
+    ~MediaBrowser() final;
 
 private:
-    DockWidget *getDockWidget() override;
+    DockWidget *getDockWidget() override final;
 
-    bool canConvertAddress() const override;
+    bool canConvertAddress() const override final;
 
-    QList<AddressPrefix> addressPrefixList(bool) const override;
-    void convertAddress(const QString &prefix, const QString &url, const QString &param, QString *streamUrl, QString *name, QIcon *icon, QString *extension, IOController<> *ioCtrl) override;
+    QList<AddressPrefix> addressPrefixList(bool) const override final;
+    void convertAddress(const QString &prefix, const QString &url, const QString &param, QString *streamUrl, QString *name, QIcon *icon, QString *extension, IOController<> *ioCtrl) override final;
 
-    QVector<QAction *> getActions(const QString &, double, const QString &, const QString &, const QString &) override;
+    QVector<QAction *> getActions(const QString &, double, const QString &, const QString &, const QString &) override final;
 
 private:
     void initScripts();
diff --git src/modules/Extensions/Radio.hpp src/modules/Extensions/Radio.hpp
index 1bf167a5..8d674706 100644
--- src/modules/Extensions/Radio.hpp
+++ src/modules/Extensions/Radio.hpp
@@ -36,15 +36,15 @@ class NetworkReply;
 class QTimer;
 class QMenu;
 
-class Radio final : public QTabWidget, public QMPlay2Extensions
+class Radio : public QTabWidget, public QMPlay2Extensions
 {
     Q_OBJECT
 
 public:
     Radio(Module &);
-    ~Radio();
+    ~Radio() final;
 
-    DockWidget *getDockWidget() override;
+    DockWidget *getDockWidget() override final;
 
 private slots:
     void visibilityChanged(const bool v);
@@ -95,7 +95,7 @@ private:
     void loadMyRadios(const QStringList &radios);
 
 private:
-    bool eventFilter(QObject *watched, QEvent *event) override;
+    bool eventFilter(QObject *watched, QEvent *event) override final;
 
 private:
     const QString m_newStationTxt;
diff --git src/modules/Extensions/Radio/RadioBrowserModel.hpp src/modules/Extensions/Radio/RadioBrowserModel.hpp
index 9ecd5270..42586e28 100644
--- src/modules/Extensions/Radio/RadioBrowserModel.hpp
+++ src/modules/Extensions/Radio/RadioBrowserModel.hpp
@@ -30,7 +30,7 @@ class NetworkAccess;
 class NetworkReply;
 struct Column;
 
-class RadioBrowserModel final : public QAbstractItemModel
+class RadioBrowserModel : public QAbstractItemModel
 {
     Q_OBJECT
 
@@ -49,14 +49,14 @@ public:
     QUrl getEditUrl(const QModelIndex &index) const;
     QUrl getHomePageUrl(const QModelIndex &index) const;
 
-    QModelIndex index(int row, int column, const QModelIndex &parent) const override;
-    QModelIndex parent(const QModelIndex &child) const override;
-    int rowCount(const QModelIndex &parent) const override;
-    int columnCount(const QModelIndex &parent) const override;
-    QVariant data(const QModelIndex &index, int role) const override;
-    QVariant headerData(int section, Qt::Orientation orientation, int role = Qt::DisplayRole) const override;
-    Qt::ItemFlags flags(const QModelIndex &index) const override;
-    void sort(int columnIdx, Qt::SortOrder order = Qt::AscendingOrder) override;
+    QModelIndex index(int row, int column, const QModelIndex &parent) const override final;
+    QModelIndex parent(const QModelIndex &child) const override final;
+    int rowCount(const QModelIndex &parent) const override final;
+    int columnCount(const QModelIndex &parent) const override final;
+    QVariant data(const QModelIndex &index, int role) const override final;
+    QVariant headerData(int section, Qt::Orientation orientation, int role = Qt::DisplayRole) const override final;
+    Qt::ItemFlags flags(const QModelIndex &index) const override final;
+    void sort(int columnIdx, Qt::SortOrder order = Qt::AscendingOrder) override final;
 
 public slots:
     void setFiltrText(const QString &text = QString());
diff --git src/modules/Extensions/YouTube.hpp src/modules/Extensions/YouTube.hpp
index 17350c2d..513b0766 100644
--- src/modules/Extensions/YouTube.hpp
+++ src/modules/Extensions/YouTube.hpp
@@ -39,12 +39,12 @@ class QMenu;
 
 /**/
 
-class ResultsYoutube final : public QTreeWidget
+class ResultsYoutube : public QTreeWidget
 {
     Q_OBJECT
 public:
     ResultsYoutube();
-    ~ResultsYoutube();
+    ~ResultsYoutube() final;
 
 private:
     void playOrEnqueue(const QString &param, QTreeWidgetItem *tWI, const QString &addrParam = QString());
@@ -62,7 +62,7 @@ private slots:
 
 /**/
 
-class PageSwitcher final : public QWidget
+class PageSwitcher : public QWidget
 {
     Q_OBJECT
 public:
@@ -76,7 +76,7 @@ public:
 
 using ItagNames = QPair<QStringList, QList<int>>;
 
-class YouTube final : public QWidget, public QMPlay2Extensions
+class YouTube : public QWidget, public QMPlay2Extensions
 {
     Q_OBJECT
 
@@ -85,19 +85,19 @@ public:
 
 public:
     YouTube(Module &module);
-    ~YouTube();
+    ~YouTube() final;
 
-    bool set() override;
+    bool set() override final;
 
-    DockWidget *getDockWidget() override;
+    DockWidget *getDockWidget() override final;
 
-    bool canConvertAddress() const override;
+    bool canConvertAddress() const override final;
 
-    QString matchAddress(const QString &url) const override;
-    QList<AddressPrefix> addressPrefixList(bool) const override;
-    void convertAddress(const QString &, const QString &, const QString &, QString *, QString *, QIcon *, QString *, IOController<> *ioCtrl) override;
+    QString matchAddress(const QString &url) const override final;
+    QList<AddressPrefix> addressPrefixList(bool) const override final;
+    void convertAddress(const QString &, const QString &, const QString &, QString *, QString *, QIcon *, QString *, IOController<> *ioCtrl) override final;
 
-    QVector<QAction *> getActions(const QString &, double, const QString &, const QString &, const QString &) override;
+    QVector<QAction *> getActions(const QString &, double, const QString &, const QString &, const QString &) override final;
 
 private slots:
     void next();
diff --git src/modules/FFmpeg/FFDecDXVA2.hpp src/modules/FFmpeg/FFDecDXVA2.hpp
index c7e24065..74f82787 100644
--- src/modules/FFmpeg/FFDecDXVA2.hpp
+++ src/modules/FFmpeg/FFDecDXVA2.hpp
@@ -30,7 +30,7 @@ extern "C"
 class DXVA2Surfaces;
 struct SwsContext;
 
-class FFDecDXVA2 final : public FFDecHWAccel
+class FFDecDXVA2 : public FFDecHWAccel
 {
 public:
     using Surfaces = std::shared_ptr<QVector<IDirect3DSurface9 *>>;
@@ -38,15 +38,15 @@ public:
     static bool loadLibraries();
 
     FFDecDXVA2(Module &module);
-    ~FFDecDXVA2();
+    ~FFDecDXVA2() final;
 
-    bool set() override;
+    bool set() override final;
 
-    QString name() const override;
+    QString name() const override final;
 
-    void downloadVideoFrame(VideoFrame &decoded) override;
+    void downloadVideoFrame(VideoFrame &decoded) override final;
 
-    bool open(StreamInfo &streamInfo, VideoWriter *writer) override;
+    bool open(StreamInfo &streamInfo, VideoWriter *writer) override final;
 
 private:
     Qt::CheckState m_copyVideo;
diff --git src/modules/FFmpeg/FFDecSW.hpp src/modules/FFmpeg/FFDecSW.hpp
index b36bcde7..641e9865 100644
--- src/modules/FFmpeg/FFDecSW.hpp
+++ src/modules/FFmpeg/FFDecSW.hpp
@@ -25,7 +25,7 @@
 
 struct SwsContext;
 
-class FFDecSW final : public FFDec
+class FFDecSW : public FFDec
 {
 public:
     FFDecSW(Module &);
@@ -44,19 +44,19 @@ private:
     };
 
 private:
-    ~FFDecSW();
+    ~FFDecSW() final;
 
-    bool set() override;
+    bool set() override final;
 
-    QString name() const override;
+    QString name() const override final;
 
-    void setSupportedPixelFormats(const QMPlay2PixelFormats &pixelFormats) override;
+    void setSupportedPixelFormats(const QMPlay2PixelFormats &pixelFormats) override final;
 
-    int  decodeAudio(Packet &encodedPacket, Buffer &decoded, quint8 &channels, quint32 &sampleRate, bool flush) override;
-    int  decodeVideo(Packet &encodedPacket, VideoFrame &decoded, QByteArray &newPixFmt, bool flush, unsigned hurry_up) override;
-    bool decodeSubtitle(const Packet &encodedPacket, double pos, QMPlay2OSD *&osd, const QSize &size, bool flush) override;
+    int  decodeAudio(Packet &encodedPacket, Buffer &decoded, quint8 &channels, quint32 &sampleRate, bool flush) override final;
+    int  decodeVideo(Packet &encodedPacket, VideoFrame &decoded, QByteArray &newPixFmt, bool flush, unsigned hurry_up) override final;
+    bool decodeSubtitle(const Packet &encodedPacket, double pos, QMPlay2OSD *&osd, const QSize &size, bool flush) override final;
 
-    bool open(StreamInfo &, VideoWriter *) override;
+    bool open(StreamInfo &, VideoWriter *) override final;
 
     /**/
 
diff --git src/modules/FFmpeg/FFDecVAAPI.hpp src/modules/FFmpeg/FFDecVAAPI.hpp
index 1e91ee49..cd26684a 100644
--- src/modules/FFmpeg/FFDecVAAPI.hpp
+++ src/modules/FFmpeg/FFDecVAAPI.hpp
@@ -23,20 +23,20 @@
 
 struct SwsContext;
 
-class FFDecVAAPI final : public FFDecHWAccel
+class FFDecVAAPI : public FFDecHWAccel
 {
 public:
     FFDecVAAPI(Module &);
-    ~FFDecVAAPI();
+    ~FFDecVAAPI() final;
 
-    bool set() override;
+    bool set() override final;
 
-    QString name() const override;
+    QString name() const override final;
 
-    int decodeVideo(Packet &encodedPacket, VideoFrame &decoded, QByteArray &newPixFmt, bool flush, unsigned hurryUp) override;
-    void downloadVideoFrame(VideoFrame &decoded) override;
+    int decodeVideo(Packet &encodedPacket, VideoFrame &decoded, QByteArray &newPixFmt, bool flush, unsigned hurryUp) override final;
+    void downloadVideoFrame(VideoFrame &decoded) override final;
 
-    bool open(StreamInfo &, VideoWriter *) override;
+    bool open(StreamInfo &, VideoWriter *) override final;
 
 private:
     bool m_useOpenGL;
diff --git src/modules/FFmpeg/FFDecVDPAU.hpp src/modules/FFmpeg/FFDecVDPAU.hpp
index 6c1e1eeb..50e5ca18 100644
--- src/modules/FFmpeg/FFDecVDPAU.hpp
+++ src/modules/FFmpeg/FFDecVDPAU.hpp
@@ -22,15 +22,15 @@
 
 class VDPAUWriter;
 
-class FFDecVDPAU final : public FFDecHWAccel
+class FFDecVDPAU : public FFDecHWAccel
 {
 public:
     FFDecVDPAU(Module &);
-    ~FFDecVDPAU();
+    ~FFDecVDPAU() final;
 
-    bool set() override;
+    bool set() override final;
 
-    QString name() const override;
+    QString name() const override final;
 
-    bool open(StreamInfo &, VideoWriter *) override;
+    bool open(StreamInfo &, VideoWriter *) override final;
 };
diff --git src/modules/FFmpeg/FFDecVDPAU_NW.hpp src/modules/FFmpeg/FFDecVDPAU_NW.hpp
index 189bd239..67958eee 100644
--- src/modules/FFmpeg/FFDecVDPAU_NW.hpp
+++ src/modules/FFmpeg/FFDecVDPAU_NW.hpp
@@ -22,19 +22,19 @@
 
 class VDPAU;
 
-class FFDecVDPAU_NW final : public FFDecHWAccel
+class FFDecVDPAU_NW : public FFDecHWAccel
 {
 public:
     FFDecVDPAU_NW(Module &);
-    ~FFDecVDPAU_NW();
+    ~FFDecVDPAU_NW() final;
 
-    bool set() override;
+    bool set() override final;
 
-    QString name() const override;
+    QString name() const override final;
 
-    void downloadVideoFrame(VideoFrame &decoded) override;
+    void downloadVideoFrame(VideoFrame &decoded) override final;
 
-    bool open(StreamInfo &, VideoWriter *) override;
+    bool open(StreamInfo &, VideoWriter *) override final;
 
 private:
     VDPAU *vdpau;
diff --git src/modules/FFmpeg/FFDecVTB.cpp src/modules/FFmpeg/FFDecVTB.cpp
index 17e5d683..7749cfc6 100644
--- src/modules/FFmpeg/FFDecVTB.cpp
+++ src/modules/FFmpeg/FFDecVTB.cpp
@@ -50,7 +50,7 @@ static AVPixelFormat getVTBFormat(AVCodecContext *ctx, const AVPixelFormat *fmt)
 
 /**/
 
-class VTBHwaccel final : public HWAccelInterface
+class VTBHwaccel : public HWAccelInterface
 {
 public:
     inline VTBHwaccel() :
diff --git src/modules/FFmpeg/FFDecVTB.hpp src/modules/FFmpeg/FFDecVTB.hpp
index dbe78640..258d257c 100644
--- src/modules/FFmpeg/FFDecVTB.hpp
+++ src/modules/FFmpeg/FFDecVTB.hpp
@@ -22,22 +22,22 @@
 
 struct SwsContext;
 
-class FFDecVTB final : public FFDecHWAccel
+class FFDecVTB : public FFDecHWAccel
 {
 public:
     FFDecVTB(Module &module);
     ~FFDecVTB();
 
-    bool set() override;
+    bool set() override final;
 
-    QString name() const override;
+    QString name() const override final;
 
-    int decodeVideo(Packet &encodedPacket, VideoFrame &decoded, QByteArray &newPixFmt, bool flush, unsigned hurryUp) override;
-    void downloadVideoFrame(VideoFrame &decoded) override;
+    int decodeVideo(Packet &encodedPacket, VideoFrame &decoded, QByteArray &newPixFmt, bool flush, unsigned hurryUp) override final;
+    void downloadVideoFrame(VideoFrame &decoded) override final;
 
-    bool hasCriticalError() const override;
+    bool hasCriticalError() const override final;
 
-    bool open(StreamInfo &streamInfo, VideoWriter *writer) override;
+    bool open(StreamInfo &streamInfo, VideoWriter *writer) override final;
 
 private:
     SwsContext *m_swsCtx;
diff --git src/modules/FFmpeg/FFDemux.hpp src/modules/FFmpeg/FFDemux.hpp
index 498f4b29..d69f990f 100644
--- src/modules/FFmpeg/FFDemux.hpp
+++ src/modules/FFmpeg/FFDemux.hpp
@@ -22,42 +22,42 @@
 
 class FormatContext;
 
-class FFDemux final : public Demuxer
+class FFDemux : public Demuxer
 {
     Q_DECLARE_TR_FUNCTIONS(FFDemux)
 public:
     FFDemux(Module &);
 private:
-    ~FFDemux();
+    ~FFDemux() final;
 
-    bool set() override;
+    bool set() override final;
 
-    bool metadataChanged() const override;
+    bool metadataChanged() const override final;
 
-    bool isStillImage() const override;
+    bool isStillImage() const override final;
 
-    QList<ProgramInfo> getPrograms() const override;
-    QList<ChapterInfo> getChapters() const override;
+    QList<ProgramInfo> getPrograms() const override final;
+    QList<ChapterInfo> getChapters() const override final;
 
-    QString name() const override;
-    QString title() const override;
-    QList<QMPlay2Tag> tags() const override;
-    bool getReplayGain(bool album, float &gain_db, float &peak) const override;
-    qint64 size() const override;
-    double length() const override;
-    int bitrate() const override;
-    QByteArray image(bool forceCopy) const override;
+    QString name() const override final;
+    QString title() const override final;
+    QList<QMPlay2Tag> tags() const override final;
+    bool getReplayGain(bool album, float &gain_db, float &peak) const override final;
+    qint64 size() const override final;
+    double length() const override final;
+    int bitrate() const override final;
+    QByteArray image(bool forceCopy) const override final;
 
     bool localStream() const override;
 
-    bool seek(double pos, bool backward) override;
-    bool read(Packet &encoded, int &idx) override;
-    void pause() override;
-    void abort() override;
+    bool seek(double pos, bool backward) override final;
+    bool read(Packet &encoded, int &idx) override final;
+    void pause() override final;
+    void abort() override final;
 
-    bool open(const QString &entireUrl) override;
+    bool open(const QString &entireUrl) override final;
 
-    Playlist::Entries fetchTracks(const QString &url, bool &ok) override;
+    Playlist::Entries fetchTracks(const QString &url, bool &ok) override final;
 
     /**/
 
diff --git src/modules/FFmpeg/FFReader.hpp src/modules/FFmpeg/FFReader.hpp
index 75caec11..0cd53f11 100644
--- src/modules/FFmpeg/FFReader.hpp
+++ src/modules/FFmpeg/FFReader.hpp
@@ -24,25 +24,25 @@
 
 struct AVIOContext;
 
-class FFReader final : public Reader
+class FFReader : public Reader
 {
 public:
     FFReader();
 private:
-    bool readyRead() const override;
-    bool canSeek() const override;
+    bool readyRead() const override final;
+    bool canSeek() const override final;
 
-    bool seek(qint64) override;
-    QByteArray read(qint64) override;
-    void pause() override;
-    bool atEnd() const override;
-    void abort() override;
+    bool seek(qint64) override final;
+    QByteArray read(qint64) override final;
+    void pause() override final;
+    bool atEnd() const override final;
+    void abort() override final;
 
-    qint64 size() const override;
-    qint64 pos() const override;
-    QString name() const override;
+    qint64 size() const override final;
+    qint64 pos() const override final;
+    QString name() const override final;
 
-    bool open() override;
+    bool open() override final;
 
     /**/
 
diff --git src/modules/FFmpeg/FFmpeg.hpp src/modules/FFmpeg/FFmpeg.hpp
index 70e73d4e..0e5ad238 100644
--- src/modules/FFmpeg/FFmpeg.hpp
+++ src/modules/FFmpeg/FFmpeg.hpp
@@ -24,19 +24,19 @@
 
 class QComboBox;
 
-class FFmpeg final : public Module
+class FFmpeg : public Module
 {
     Q_DECLARE_TR_FUNCTIONS(FFmpeg)
 public:
     FFmpeg();
-    ~FFmpeg();
+    ~FFmpeg() final;
 private:
-    QList<Info> getModulesInfo(const bool) const override;
-    void *createInstance(const QString &) override;
+    QList<Info> getModulesInfo(const bool) const override final;
+    void *createInstance(const QString &) override final;
 
-    SettingsWidget *getSettingsWidget() override;
+    SettingsWidget *getSettingsWidget() override final;
 
-    void videoDeintSave() override;
+    void videoDeintSave() override final;
 
     /**/
 
@@ -65,7 +65,7 @@ class QGroupBox;
 class QSpinBox;
 class Slider;
 
-class ModuleSettingsWidget final : public Module::SettingsWidget
+class ModuleSettingsWidget : public Module::SettingsWidget
 {
 #ifdef QMPlay2_VDPAU
     Q_OBJECT
@@ -84,7 +84,7 @@ private slots:
     void checkEnables();
 #endif
 private:
-    void saveSettings() override;
+    void saveSettings() override final;
 
     QGroupBox *demuxerB;
     QCheckBox *reconnectStreamedB;
diff --git src/modules/FFmpeg/VAAPIWriter.hpp src/modules/FFmpeg/VAAPIWriter.hpp
index c36966db..84249e53 100644
--- src/modules/FFmpeg/VAAPIWriter.hpp
+++ src/modules/FFmpeg/VAAPIWriter.hpp
@@ -24,27 +24,27 @@
 #include <QWidget>
 #include <QTimer>
 
-class VAAPIWriter final : public QWidget, public VideoWriter
+class VAAPIWriter : public QWidget, public VideoWriter
 {
     Q_OBJECT
 public:
     VAAPIWriter(Module &module, VAAPI *vaapi);
-    ~VAAPIWriter();
+    ~VAAPIWriter() final;
 
-    bool set() override;
+    bool set() override final;
 
-    bool readyWrite() const override;
+    bool readyWrite() const override final;
 
-    bool processParams(bool *paramsCorrected) override;
-    void writeVideo(const VideoFrame &videoFrame) override;
-    void writeOSD(const QList<const QMPlay2OSD *> &osd) override;
-    void pause() override;
+    bool processParams(bool *paramsCorrected) override final;
+    void writeVideo(const VideoFrame &videoFrame) override final;
+    void writeOSD(const QList<const QMPlay2OSD *> &osd) override final;
+    void pause() override final;
 
-    bool hwAccelGetImg(const VideoFrame &videoFrame, void *dest, ImgScaler *nv12ToRGB32) const override;
+    bool hwAccelGetImg(const VideoFrame &videoFrame, void *dest, ImgScaler *nv12ToRGB32) const override final;
 
-    QString name() const override;
+    QString name() const override final;
 
-    bool open() override;
+    bool open() override final;
 
     /**/
 
@@ -56,11 +56,11 @@ public:
 private:
     void draw(VASurfaceID id = -1, int field = -1);
 
-    void resizeEvent(QResizeEvent *) override;
-    void paintEvent(QPaintEvent *) override;
-    bool event(QEvent *) override;
+    void resizeEvent(QResizeEvent *) override final;
+    void paintEvent(QPaintEvent *) override final;
+    bool event(QEvent *) override final;
 
-    QPaintEngine *paintEngine() const override;
+    QPaintEngine *paintEngine() const override final;
 
     void clearVaImage();
 
diff --git src/modules/FFmpeg/VDPAUWriter.hpp src/modules/FFmpeg/VDPAUWriter.hpp
index 4c6dc28f..123fb86b 100644
--- src/modules/FFmpeg/VDPAUWriter.hpp
+++ src/modules/FFmpeg/VDPAUWriter.hpp
@@ -28,27 +28,27 @@
 
 struct _XDisplay;
 
-class VDPAUWriter final : public QWidget, public VideoWriter
+class VDPAUWriter : public QWidget, public VideoWriter
 {
     Q_OBJECT
 public:
     VDPAUWriter(Module &module);
-    ~VDPAUWriter();
+    ~VDPAUWriter() final;
 
-    bool set() override;
+    bool set() override final;
 
-    bool readyWrite() const override;
+    bool readyWrite() const override final;
 
-    bool processParams(bool *paramsCorrected) override;
-    void writeVideo(const VideoFrame &videoFrame) override;
-    void writeOSD(const QList<const QMPlay2OSD *> &osd) override;
-    void pause() override;
+    bool processParams(bool *paramsCorrected) override final;
+    void writeVideo(const VideoFrame &videoFrame) override final;
+    void writeOSD(const QList<const QMPlay2OSD *> &osd) override final;
+    void pause() override final;
 
-    bool hwAccelGetImg(const VideoFrame &videoFrame, void *dest, ImgScaler *nv12ToRGB32) const override;
+    bool hwAccelGetImg(const VideoFrame &videoFrame, void *dest, ImgScaler *nv12ToRGB32) const override final;
 
-    QString name() const override;
+    QString name() const override final;
 
-    bool open() override;
+    bool open() override final;
 
     /**/
 
@@ -78,11 +78,11 @@ private:
     Q_SLOT void draw(VdpVideoSurface surface_id = VDP_INVALID_HANDLE);
     void vdpau_display();
 
-    void resizeEvent(QResizeEvent *) override;
-    void paintEvent(QPaintEvent *) override;
-    bool event(QEvent *) override;
+    void resizeEvent(QResizeEvent *) override final;
+    void paintEvent(QPaintEvent *) override final;
+    bool event(QEvent *) override final;
 
-    QPaintEngine *paintEngine() const override;
+    QPaintEngine *paintEngine() const override final;
 
     void destroyOutputSurfaces();
     void clr();
diff --git src/modules/FileAssociation/FileAssociation.hpp src/modules/FileAssociation/FileAssociation.hpp
index cdaf85a9..4fbcbf68 100644
--- src/modules/FileAssociation/FileAssociation.hpp
+++ src/modules/FileAssociation/FileAssociation.hpp
@@ -20,16 +20,16 @@
 
 #include <Module.hpp>
 
-class FileAssociation final : public Module
+class FileAssociation : public Module
 {
     Q_OBJECT
 public:
     FileAssociation();
 private:
-    QList<Info> getModulesInfo(const bool) const override;
-    void *createInstance(const QString &) override;
+    QList<Info> getModulesInfo(const bool) const override final;
+    void *createInstance(const QString &) override final;
 
-    SettingsWidget *getSettingsWidget() override;
+    SettingsWidget *getSettingsWidget() override final;
 
     bool reallyFirsttime;
 private slots:
@@ -43,14 +43,14 @@ class QPushButton;
 class QGroupBox;
 class QCheckBox;
 
-class ModuleSettingsWidget final : public Module::SettingsWidget
+class ModuleSettingsWidget : public Module::SettingsWidget
 {
     Q_OBJECT
     friend class FileAssociation;
 public:
     ModuleSettingsWidget(Module &);
 private:
-    void saveSettings() override;
+    void saveSettings() override final;
     void addExtension(const QString &, const bool, const bool isPlaylist = false);
 private slots:
     void selectAll();
diff --git src/modules/Inputs/Inputs.hpp src/modules/Inputs/Inputs.hpp
index 9cdbcff3..5484fe53 100644
--- src/modules/Inputs/Inputs.hpp
+++ src/modules/Inputs/Inputs.hpp
@@ -20,18 +20,18 @@
 
 #include <Module.hpp>
 
-class Inputs final : public Module
+class Inputs : public Module
 {
     Q_OBJECT
 public:
     Inputs();
 private:
-    QList<Info> getModulesInfo(const bool) const override;
-    void *createInstance(const QString &) override;
+    QList<Info> getModulesInfo(const bool) const override final;
+    void *createInstance(const QString &) override final;
 
-    QList<QAction *> getAddActions() override;
+    QList<QAction *> getAddActions() override final;
 
-    SettingsWidget *getSettingsWidget() override;
+    SettingsWidget *getSettingsWidget() override final;
 
     QIcon toneIcon, pcmIcon, rayman2Icon;
 private slots:
@@ -43,7 +43,7 @@ private slots:
 #include <QSpinBox>
 #include <QDialog>
 
-class HzW final : public QWidget
+class HzW : public QWidget
 {
 public:
     HzW(int, const QStringList &);
@@ -60,7 +60,7 @@ private:
 
 class QGridLayout;
 
-class AddD final : public QDialog
+class AddD : public QDialog
 {
     Q_OBJECT
 public:
@@ -95,7 +95,7 @@ class QGroupBox;
 class QCheckBox;
 class QLineEdit;
 
-class ModuleSettingsWidget final : public Module::SettingsWidget
+class ModuleSettingsWidget : public Module::SettingsWidget
 {
     Q_OBJECT
 public:
@@ -103,7 +103,7 @@ public:
 private slots:
     void applyFreqs();
 private:
-    void saveSettings() override;
+    void saveSettings() override final;
 
     AddD *toneGenerator;
     QGroupBox *pcmB;
diff --git src/modules/Inputs/PCM.hpp src/modules/Inputs/PCM.hpp
index eb47a911..528cb35a 100644
--- src/modules/Inputs/PCM.hpp
+++ src/modules/Inputs/PCM.hpp
@@ -24,25 +24,25 @@
 
 class Reader;
 
-class PCM final : public Demuxer
+class PCM : public Demuxer
 {
 public:
     enum FORMAT {PCM_U8, PCM_S8, PCM_S16, PCM_S24, PCM_S32, PCM_FLT, FORMAT_COUNT};
 
     PCM(Module &);
 private:
-    bool set() override;
+    bool set() override final;
 
-    QString name() const override;
-    QString title() const override;
-    double length() const override;
-    int bitrate() const override;
+    QString name() const override final;
+    QString title() const override final;
+    double length() const override final;
+    int bitrate() const override final;
 
-    bool seek(double, bool) override;
-    bool read(Packet &, int &) override;
-    void abort() override;
+    bool seek(double, bool) override final;
+    bool read(Packet &, int &) override final;
+    void abort() override final;
 
-    bool open(const QString &) override;
+    bool open(const QString &) override final;
 
     /**/
 
diff --git src/modules/Inputs/Rayman2.hpp src/modules/Inputs/Rayman2.hpp
index af623d90..2326a272 100644
--- src/modules/Inputs/Rayman2.hpp
+++ src/modules/Inputs/Rayman2.hpp
@@ -24,23 +24,23 @@
 
 class Reader;
 
-class Rayman2 final : public Demuxer
+class Rayman2 : public Demuxer
 {
 public:
     Rayman2(Module &);
 private:
-    bool set() override;
+    bool set() override final;
 
-    QString name() const override;
-    QString title() const override;
-    double length() const override;
-    int bitrate() const override;
+    QString name() const override final;
+    QString title() const override final;
+    double length() const override final;
+    int bitrate() const override final;
 
-    bool seek(double pos, bool backward) override;
-    bool read(Packet &, int &) override;
-    void abort() override;
+    bool seek(double pos, bool backward) override final;
+    bool read(Packet &, int &) override final;
+    void abort() override final;
 
-    bool open(const QString &) override;
+    bool open(const QString &) override final;
 
     /**/
 
diff --git src/modules/Inputs/ToneGenerator.hpp src/modules/Inputs/ToneGenerator.hpp
index a84c7fb0..9b29313b 100644
--- src/modules/Inputs/ToneGenerator.hpp
+++ src/modules/Inputs/ToneGenerator.hpp
@@ -20,28 +20,28 @@
 
 #include <Demuxer.hpp>
 
-class ToneGenerator final : public Demuxer
+class ToneGenerator : public Demuxer
 {
     Q_DECLARE_TR_FUNCTIONS(ToneGenerator)
 public:
     ToneGenerator(Module &);
 
-    bool set() override;
+    bool set() override final;
 private:
-    bool metadataChanged() const override;
+    bool metadataChanged() const override final;
 
-    QString name() const override;
-    QString title() const override;
-    double length() const override;
-    int bitrate() const override;
+    QString name() const override final;
+    QString title() const override final;
+    double length() const override final;
+    int bitrate() const override final;
 
-    bool dontUseBuffer() const override;
+    bool dontUseBuffer() const override final;
 
-    bool seek(double, bool) override;
-    bool read(Packet &, int &) override;
-    void abort() override;
+    bool seek(double, bool) override final;
+    bool read(Packet &, int &) override final;
+    void abort() override final;
 
-    bool open(const QString &) override;
+    bool open(const QString &) override final;
 
     /**/
 
diff --git src/modules/Modplug/MPDemux.hpp src/modules/Modplug/MPDemux.hpp
index f96518b1..72055284 100644
--- src/modules/Modplug/MPDemux.hpp
+++ src/modules/Modplug/MPDemux.hpp
@@ -27,27 +27,27 @@ namespace QMPlay2ModPlug {
 }
 class Reader;
 
-class MPDemux final : public Demuxer
+class MPDemux : public Demuxer
 {
     Q_DECLARE_TR_FUNCTIONS(MPDemux)
 public:
     MPDemux(Module &);
 private:
-    ~MPDemux();
+    ~MPDemux() final;
 
-    bool set() override;
+    bool set() override final;
 
-    QString name() const override;
-    QString title() const override;
-    QList<QMPlay2Tag> tags() const override;
-    double length() const override;
-    int bitrate() const override;
+    QString name() const override final;
+    QString title() const override final;
+    QList<QMPlay2Tag> tags() const override final;
+    double length() const override final;
+    int bitrate() const override final;
 
-    bool seek(double, bool) override;
-    bool read(Packet &, int &) override;
-    void abort() override;
+    bool seek(double, bool) override final;
+    bool read(Packet &, int &) override final;
+    void abort() override final;
 
-    bool open(const QString &) override;
+    bool open(const QString &) override final;
 
     /**/
 
diff --git src/modules/Modplug/Modplug.hpp src/modules/Modplug/Modplug.hpp
index a3a881d5..889327de 100644
--- src/modules/Modplug/Modplug.hpp
+++ src/modules/Modplug/Modplug.hpp
@@ -20,15 +20,15 @@
 
 #include <Module.hpp>
 
-class Modplug final : public Module
+class Modplug : public Module
 {
 public:
     Modplug();
 private:
-    QList<Info> getModulesInfo(const bool) const override;
-    void *createInstance(const QString &) override;
+    QList<Info> getModulesInfo(const bool) const override final;
+    void *createInstance(const QString &) override final;
 
-    SettingsWidget *getSettingsWidget() override;
+    SettingsWidget *getSettingsWidget() override final;
 
     QIcon modIcon;
 };
@@ -40,13 +40,13 @@ private:
 class QCheckBox;
 class QComboBox;
 
-class ModuleSettingsWidget final : public Module::SettingsWidget
+class ModuleSettingsWidget : public Module::SettingsWidget
 {
     Q_DECLARE_TR_FUNCTIONS(ModuleSettingsWidget)
 public:
     ModuleSettingsWidget(Module &);
 private:
-    void saveSettings() override;
+    void saveSettings() override final;
 
     QCheckBox *enabledB;
     QComboBox *resamplingB;
diff --git src/modules/Notify/Notify.hpp src/modules/Notify/Notify.hpp
index cf23928c..98c64d6a 100644
--- src/modules/Notify/Notify.hpp
+++ src/modules/Notify/Notify.hpp
@@ -20,16 +20,16 @@
 
 #include <Module.hpp>
 
-class Notify final : public Module
+class Notify : public Module
 {
 public:
     Notify();
 
 private:
-    QList<Info> getModulesInfo(const bool) const override;
-    void *createInstance(const QString &) override;
+    QList<Info> getModulesInfo(const bool) const override final;
+    void *createInstance(const QString &) override final;
 
-    SettingsWidget *getSettingsWidget() override;
+    SettingsWidget *getSettingsWidget() override final;
 };
 
 /**/
@@ -41,7 +41,7 @@ class QCheckBox;
 class QGroupBox;
 class QLineEdit;
 
-class ModuleSettingsWidget final : public Module::SettingsWidget
+class ModuleSettingsWidget : public Module::SettingsWidget
 {
     Q_DECLARE_TR_FUNCTIONS(ModuleSettingsWidget)
 
@@ -49,7 +49,7 @@ public:
     ModuleSettingsWidget(Module &module);
 
 private:
-    void saveSettings() override;
+    void saveSettings() override final;
 
     QGroupBox *m_notify;
     QDoubleSpinBox *m_timeoutSB;
diff --git src/modules/Notify/NotifyExtension.hpp src/modules/Notify/NotifyExtension.hpp
index a32ea9ad..ca4edee6 100644
--- src/modules/Notify/NotifyExtension.hpp
+++ src/modules/Notify/NotifyExtension.hpp
@@ -22,7 +22,7 @@
 
 #include <memory>
 
-class NotifyService final : public QObject
+class NotifyService : public QObject
 {
     Q_OBJECT
 
@@ -46,14 +46,14 @@ private:
 
 /**/
 
-class NotifyExtension final : public QMPlay2Extensions
+class NotifyExtension : public QMPlay2Extensions
 {
 public:
     NotifyExtension(Module &module);
     ~NotifyExtension();
 
 private:
-    bool set() override;
+    bool set() override final;
 
     std::unique_ptr<NotifyService> m_notifyService;
 };
diff --git src/modules/OpenGL2/OpenGL2.hpp src/modules/OpenGL2/OpenGL2.hpp
index 89f22d21..24b049ed 100644
--- src/modules/OpenGL2/OpenGL2.hpp
+++ src/modules/OpenGL2/OpenGL2.hpp
@@ -20,15 +20,15 @@
 
 #include <Module.hpp>
 
-class OpenGL2 final : public Module
+class OpenGL2 : public Module
 {
 public:
     OpenGL2();
 private:
-    QList<Info> getModulesInfo(const bool) const override;
-    void *createInstance(const QString &) override;
+    QList<Info> getModulesInfo(const bool) const override final;
+    void *createInstance(const QString &) override final;
 
-    SettingsWidget *getSettingsWidget() override;
+    SettingsWidget *getSettingsWidget() override final;
 };
 
 /**/
@@ -37,13 +37,13 @@ private:
 
 class QCheckBox;
 
-class ModuleSettingsWidget final : public Module::SettingsWidget
+class ModuleSettingsWidget : public Module::SettingsWidget
 {
     Q_DECLARE_TR_FUNCTIONS(ModuleSettingsWidget)
 public:
     ModuleSettingsWidget(Module &);
 private:
-    void saveSettings() override;
+    void saveSettings() override final;
 
     QCheckBox *enabledB, *allowPboB, *hqScalingB;
     QCheckBox *forceRttB;
diff --git src/modules/OpenGL2/OpenGL2Common.hpp src/modules/OpenGL2/OpenGL2Common.hpp
index 8e4a9ef1..6079a8ea 100644
--- src/modules/OpenGL2/OpenGL2Common.hpp
+++ src/modules/OpenGL2/OpenGL2Common.hpp
@@ -42,14 +42,14 @@ class OpenGL2Common;
 class QMPlay2OSD;
 class QMouseEvent;
 
-class RotAnimation final : public QVariantAnimation
+class RotAnimation : public QVariantAnimation
 {
 public:
     inline RotAnimation(OpenGL2Common &glCommon) :
         glCommon(glCommon)
     {}
 private:
-    void updateCurrentValue(const QVariant &value) override;
+    void updateCurrentValue(const QVariant &value) override final;
 
     OpenGL2Common &glCommon;
 };
diff --git src/modules/OpenGL2/OpenGL2Widget.hpp src/modules/OpenGL2/OpenGL2Widget.hpp
index 3e8bc14e..51af2aae 100644
--- src/modules/OpenGL2/OpenGL2Widget.hpp
+++ src/modules/OpenGL2/OpenGL2Widget.hpp
@@ -23,22 +23,22 @@
 #include <QSurfaceFormat>
 #include <QOpenGLWidget>
 
-class OpenGL2Widget final : public QOpenGLWidget, public OpenGL2Common
+class OpenGL2Widget : public QOpenGLWidget, public OpenGL2Common
 {
     Q_OBJECT
 public:
     OpenGL2Widget();
-    ~OpenGL2Widget();
+    ~OpenGL2Widget() final;
 
-    QWidget *widget() override;
+    QWidget *widget() override final;
 
-    bool setVSync(bool enable) override;
-    void updateGL(bool requestDelayed) override;
+    bool setVSync(bool enable) override final;
+    void updateGL(bool requestDelayed) override final;
 
-    void initializeGL() override;
-    void paintGL() override;
+    void initializeGL() override final;
+    void paintGL() override final;
 private slots:
     void aboutToBeDestroyed();
 private:
-    bool event(QEvent *e) override;
+    bool event(QEvent *e) override final;
 };
diff --git src/modules/OpenGL2/OpenGL2Window.hpp src/modules/OpenGL2/OpenGL2Window.hpp
index d9cbdf0b..a9a18b80 100644
--- src/modules/OpenGL2/OpenGL2Window.hpp
+++ src/modules/OpenGL2/OpenGL2Window.hpp
@@ -27,32 +27,32 @@
     #define PASS_EVENTS_TO_PARENT
 #endif
 
-class OpenGL2Window final : private QOpenGLWindow, public OpenGL2Common
+class OpenGL2Window : private QOpenGLWindow, public OpenGL2Common
 {
     Q_OBJECT
 public:
     OpenGL2Window();
-    ~OpenGL2Window();
+    ~OpenGL2Window() final;
 
-    void deleteMe() override;
+    void deleteMe() override final;
 
-    QWidget *widget() override;
+    QWidget *widget() override final;
 
-    bool setVSync(bool enable) override;
-    void updateGL(bool requestDelayed) override;
+    bool setVSync(bool enable) override final;
+    void updateGL(bool requestDelayed) override final;
 
-    void initializeGL() override;
-    void paintGL() override;
+    void initializeGL() override final;
+    void paintGL() override final;
 
 private slots:
     void doUpdateGL(bool queued = false);
     void aboutToBeDestroyed();
     void videoVisible(bool v);
 private:
-    bool eventFilter(QObject *o, QEvent *e) override;
+    bool eventFilter(QObject *o, QEvent *e) override final;
 
 #ifdef PASS_EVENTS_TO_PARENT
-    bool event(QEvent *e) override;
+    bool event(QEvent *e) override final;
 #endif
 
     QWidget *container;
diff --git src/modules/OpenGL2/OpenGL2Writer.hpp src/modules/OpenGL2/OpenGL2Writer.hpp
index 7881da78..ebc04bf0 100644
--- src/modules/OpenGL2/OpenGL2Writer.hpp
+++ src/modules/OpenGL2/OpenGL2Writer.hpp
@@ -24,34 +24,34 @@
 
 class OpenGL2Common;
 
-class OpenGL2Writer final : public VideoWriter
+class OpenGL2Writer : public VideoWriter
 {
     Q_DECLARE_TR_FUNCTIONS(OpenGL2Writer)
 public:
     OpenGL2Writer(Module &);
 private:
-    ~OpenGL2Writer();
+    ~OpenGL2Writer() final;
 
-    bool set() override;
+    bool set() override final;
 
-    bool readyWrite() const override;
+    bool readyWrite() const override final;
 
-    bool hwAccelError() const override;
+    bool hwAccelError() const override final;
 
-    bool processParams(bool *paramsCorrected) override;
+    bool processParams(bool *paramsCorrected) override final;
 
-    QMPlay2PixelFormats supportedPixelFormats() const override;
+    QMPlay2PixelFormats supportedPixelFormats() const override final;
 
-    void writeVideo(const VideoFrame &videoFrame) override;
-    void writeOSD(const QList<const QMPlay2OSD *> &) override;
+    void writeVideo(const VideoFrame &videoFrame) override final;
+    void writeOSD(const QList<const QMPlay2OSD *> &) override final;
 
-    void setHWAccelInterface(HWAccelInterface *hwAccelInterface) override;
+    void setHWAccelInterface(HWAccelInterface *hwAccelInterface) override final;
 
-    void pause() override;
+    void pause() override final;
 
-    QString name() const override;
+    QString name() const override final;
 
-    bool open() override;
+    bool open() override final;
 
     /**/
 
diff --git src/modules/OpenSLES/OpenSLESWriter.hpp src/modules/OpenSLES/OpenSLESWriter.hpp
index 0d49b1a3..b1d8c428 100644
--- src/modules/OpenSLES/OpenSLESWriter.hpp
+++ src/modules/OpenSLES/OpenSLESWriter.hpp
@@ -24,24 +24,24 @@
 
 #include <SLES/OpenSLES.h>
 
-class OpenSLESWriter final : public Writer
+class OpenSLESWriter : public Writer
 {
 public:
     OpenSLESWriter(Module &);
 private:
-        ~OpenSLESWriter();
+    ~OpenSLESWriter() final;
 
-    bool set() override;
+    bool set() override final;
 
-    bool readyWrite() const override;
+    bool readyWrite() const override final;
 
-    bool processParams(bool *paramsCorrected) override;
-    qint64 write(const QByteArray &) override;
-    void pause() override;
+    bool processParams(bool *paramsCorrected) override final;
+    qint64 write(const QByteArray &) override final;
+    void pause() override final;
 
-    QString name() const override;
+    QString name() const override final;
 
-    bool open() override;
+    bool open() override final;
 
     /**/
 
diff --git src/modules/Playlists/M3U.hpp src/modules/Playlists/M3U.hpp
index 7cbc376a..d1a82949 100644
--- src/modules/Playlists/M3U.hpp
+++ src/modules/Playlists/M3U.hpp
@@ -20,10 +20,10 @@
 
 #include <Playlist.hpp>
 
-class M3U final : public Playlist
+class M3U : public Playlist
 {
-    Entries read() override;
-    bool write(const Entries &) override;
+    Entries read() override final;
+    bool write(const Entries &) override final;
 };
 
 #define M3UName "M3U"
diff --git src/modules/Playlists/PLS.hpp src/modules/Playlists/PLS.hpp
index 2e084f67..9e119a40 100644
--- src/modules/Playlists/PLS.hpp
+++ src/modules/Playlists/PLS.hpp
@@ -20,10 +20,10 @@
 
 #include <Playlist.hpp>
 
-class PLS final : public Playlist
+class PLS : public Playlist
 {
-    Entries read() override;
-    bool write(const Entries &) override;
+    Entries read() override final;
+    bool write(const Entries &) override final;
 };
 
 #define PLSName "PLS"
diff --git src/modules/Playlists/Playlists.hpp src/modules/Playlists/Playlists.hpp
index be8691ef..7574bc55 100644
--- src/modules/Playlists/Playlists.hpp
+++ src/modules/Playlists/Playlists.hpp
@@ -20,15 +20,15 @@
 
 #include <Module.hpp>
 
-class Playlists final : public Module
+class Playlists : public Module
 {
 public:
     Playlists();
 private:
-    QList<Info> getModulesInfo(const bool) const override;
-    void *createInstance(const QString &) override;
+    QList<Info> getModulesInfo(const bool) const override final;
+    void *createInstance(const QString &) override final;
 
-    SettingsWidget *getSettingsWidget() override;
+    SettingsWidget *getSettingsWidget() override final;
 };
 
 /**/
@@ -37,13 +37,13 @@ private:
 
 class QCheckBox;
 
-class ModuleSettingsWidget final : public Module::SettingsWidget
+class ModuleSettingsWidget : public Module::SettingsWidget
 {
     Q_DECLARE_TR_FUNCTIONS(ModuleSettingsWidget)
 public:
     ModuleSettingsWidget(Module &);
 private:
-    void saveSettings() override;
+    void saveSettings() override final;
 
     QCheckBox *m3uEnabledB, *xspfEnabledB;
 };
diff --git src/modules/Playlists/XSPF.hpp src/modules/Playlists/XSPF.hpp
index b30e12d2..35e6d419 100644
--- src/modules/Playlists/XSPF.hpp
+++ src/modules/Playlists/XSPF.hpp
@@ -20,10 +20,10 @@
 
 #include <Playlist.hpp>
 
-class XSPF final : public Playlist
+class XSPF : public Playlist
 {
-    Entries read() override;
-    bool write(const Entries &) override;
+    Entries read() override final;
+    bool write(const Entries &) override final;
 };
 
 #define XSPFName "XSPF"
diff --git src/modules/PortAudio/PortAudio.hpp src/modules/PortAudio/PortAudio.hpp
index a6eea8fc..55c95985 100644
--- src/modules/PortAudio/PortAudio.hpp
+++ src/modules/PortAudio/PortAudio.hpp
@@ -20,16 +20,16 @@
 
 #include <Module.hpp>
 
-class PortAudio final : public Module
+class PortAudio : public Module
 {
 public:
     PortAudio();
-        ~PortAudio();
+    ~PortAudio() final;
 private:
-    QList<Info> getModulesInfo(const bool) const override;
-    void *createInstance(const QString &) override;
+    QList<Info> getModulesInfo(const bool) const override final;
+    void *createInstance(const QString &) override final;
 
-    SettingsWidget *getSettingsWidget() override;
+    SettingsWidget *getSettingsWidget() override final;
 
     bool initialized;
 };
@@ -42,13 +42,13 @@ class QDoubleSpinBox;
 class QCheckBox;
 class QComboBox;
 
-class ModuleSettingsWidget final : public Module::SettingsWidget
+class ModuleSettingsWidget : public Module::SettingsWidget
 {
     Q_DECLARE_TR_FUNCTIONS(ModuleSettingsWidget)
 public:
     ModuleSettingsWidget(Module &);
 private:
-    void saveSettings() override;
+    void saveSettings() override final;
 
     QCheckBox *enabledB;
     QComboBox *devicesB;
diff --git src/modules/PortAudio/PortAudioWriter.hpp src/modules/PortAudio/PortAudioWriter.hpp
index 20ff55d8..b458e9ca 100644
--- src/modules/PortAudio/PortAudioWriter.hpp
+++ src/modules/PortAudio/PortAudioWriter.hpp
@@ -29,25 +29,25 @@
 class AudioDevice;
 #endif
 
-class PortAudioWriter final : public Writer
+class PortAudioWriter : public Writer
 {
     Q_DECLARE_TR_FUNCTIONS(PortAudioWriter)
 public:
     PortAudioWriter(Module &);
 private:
-    ~PortAudioWriter();
+    ~PortAudioWriter() final;
 
-    bool set() override;
+    bool set() override final;
 
-    bool readyWrite() const override;
+    bool readyWrite() const override final;
 
-    bool processParams(bool *paramsCorrected) override;
-    qint64 write(const QByteArray &) override;
-    void pause() override;
+    bool processParams(bool *paramsCorrected) override final;
+    qint64 write(const QByteArray &) override final;
+    void pause() override final;
 
-    QString name() const override;
+    QString name() const override final;
 
-    bool open() override;
+    bool open() override final;
 
     /**/
 
diff --git src/modules/PulseAudio/PulseAudio.hpp src/modules/PulseAudio/PulseAudio.hpp
index 006f749d..e59f7046 100644
--- src/modules/PulseAudio/PulseAudio.hpp
+++ src/modules/PulseAudio/PulseAudio.hpp
@@ -20,15 +20,15 @@
 
 #include <Module.hpp>
 
-class PulseAudio final : public Module
+class PulseAudio : public Module
 {
 public:
     PulseAudio();
 private:
-    QList<Info> getModulesInfo(const bool) const override;
-    void *createInstance(const QString &) override;
+    QList<Info> getModulesInfo(const bool) const override final;
+    void *createInstance(const QString &) override final;
 
-    SettingsWidget *getSettingsWidget() override;
+    SettingsWidget *getSettingsWidget() override final;
 };
 
 /**/
@@ -38,13 +38,13 @@ private:
 class QDoubleSpinBox;
 class QCheckBox;
 
-class ModuleSettingsWidget final : public Module::SettingsWidget
+class ModuleSettingsWidget : public Module::SettingsWidget
 {
     Q_DECLARE_TR_FUNCTIONS(ModuleSettingsWidget)
 public:
     ModuleSettingsWidget(Module &);
 private:
-    void saveSettings() override;
+    void saveSettings() override final;
 
     QCheckBox *enabledB;
     QDoubleSpinBox *delayB;
diff --git src/modules/PulseAudio/PulseAudioWriter.hpp src/modules/PulseAudio/PulseAudioWriter.hpp
index 8ba6eb64..4d816b29 100644
--- src/modules/PulseAudio/PulseAudioWriter.hpp
+++ src/modules/PulseAudio/PulseAudioWriter.hpp
@@ -23,23 +23,23 @@
 
 #include <QCoreApplication>
 
-class PulseAudioWriter final : public Writer
+class PulseAudioWriter : public Writer
 {
     Q_DECLARE_TR_FUNCTIONS(PulseAudioWriter)
 public:
     PulseAudioWriter(Module &);
-    ~PulseAudioWriter();
+    ~PulseAudioWriter() final;
 private:
-    bool set() override;
+    bool set() override final;
 
-    bool readyWrite() const override;
+    bool readyWrite() const override final;
 
-    bool processParams(bool *paramsCorrected) override;
-    qint64 write(const QByteArray &) override;
+    bool processParams(bool *paramsCorrected) override final;
+    qint64 write(const QByteArray &) override final;
 
-    QString name() const override;
+    QString name() const override final;
 
-    bool open() override;
+    bool open() override final;
 
     /**/
 
diff --git src/modules/QPainter/QPainter.hpp src/modules/QPainter/QPainter.hpp
index 7257c675..d1c39521 100644
--- src/modules/QPainter/QPainter.hpp
+++ src/modules/QPainter/QPainter.hpp
@@ -20,15 +20,15 @@
 
 #include <Module.hpp>
 
-class QPainterSW final : public Module
+class QPainterSW : public Module
 {
 public:
     QPainterSW();
 private:
-    QList<Info> getModulesInfo(const bool) const override;
-    void *createInstance(const QString &) override;
+    QList<Info> getModulesInfo(const bool) const override final;
+    void *createInstance(const QString &) override final;
 
-    SettingsWidget *getSettingsWidget() override;
+    SettingsWidget *getSettingsWidget() override final;
 };
 
 /**/
@@ -37,13 +37,13 @@ private:
 
 class QCheckBox;
 
-class ModuleSettingsWidget final : public Module::SettingsWidget
+class ModuleSettingsWidget : public Module::SettingsWidgett
 {
     Q_DECLARE_TR_FUNCTIONS(ModuleSettingsWidget)
 public:
     ModuleSettingsWidget(Module &);
 private:
-    void saveSettings() override;
+    void saveSettings() override final;
 
     QCheckBox *enabledB;
 };
diff --git src/modules/QPainter/QPainterWriter.hpp src/modules/QPainter/QPainterWriter.hpp
index f5e0a680..61991e4e 100644
--- src/modules/QPainter/QPainterWriter.hpp
+++ src/modules/QPainter/QPainterWriter.hpp
@@ -27,23 +27,23 @@
 class QPainterWriter;
 class QMPlay2OSD;
 
-class Drawable final : public QWidget
+class Drawable : public QWidget
 {
 public:
     Drawable(class QPainterWriter &);
-    ~Drawable();
+    ~Drawable() final;
 
     void draw(const VideoFrame &newVideoFrame, bool, bool);
 
-    void resizeEvent(QResizeEvent *) override;
+    void resizeEvent(QResizeEvent *) override final;
 
     VideoFrame videoFrame;
     QList<const QMPlay2OSD *> osd_list;
     int Brightness, Contrast;
     QMutex osd_mutex;
 private:
-    void paintEvent(QPaintEvent *) override;
-    bool event(QEvent *) override;
+    void paintEvent(QPaintEvent *) override final;
+    bool event(QEvent *) override final;
 
     int X, Y, W, H, imgW, imgH;
     QPainterWriter &writer;
@@ -54,28 +54,28 @@ private:
 
 /**/
 
-class QPainterWriter final : public VideoWriter
+class QPainterWriter : public VideoWriter
 {
     friend class Drawable;
 public:
     QPainterWriter(Module &);
 private:
-    ~QPainterWriter();
+    ~QPainterWriter() final;
 
-    bool set() override;
+    bool set() override final;
 
-    bool readyWrite() const override;
+    bool readyWrite() const override final;
 
-    bool processParams(bool *paramsCorrected) override;
+    bool processParams(bool *paramsCorrected) override final;
 
-    QMPlay2PixelFormats supportedPixelFormats() const override;
+    QMPlay2PixelFormats supportedPixelFormats() const override final;
 
-    void writeVideo(const VideoFrame &videoFrame) override;
-    void writeOSD(const QList<const QMPlay2OSD *> &) override;
+    void writeVideo(const VideoFrame &videoFrame) override final;
+    void writeOSD(const QList<const QMPlay2OSD *> &) override final;
 
-    QString name() const override;
+    QString name() const override final;
 
-    bool open() override;
+    bool open() override final;
 
     /**/
 
diff --git src/modules/Subtitles/Classic.hpp src/modules/Subtitles/Classic.hpp
index b4270f7f..db15b93d 100644
--- src/modules/Subtitles/Classic.hpp
+++ src/modules/Subtitles/Classic.hpp
@@ -20,12 +20,12 @@
 
 #include <SubsDec.hpp>
 
-class Classic final : public SubsDec
+class Classic : public SubsDec
 {
 public:
     Classic(bool, double);
 private:
-    bool toASS(const QByteArray &, class LibASS *, double) override;
+    bool toASS(const QByteArray &, class LibASS *, double) override final;
 
     /**/
 
diff --git src/modules/Subtitles/SRT.hpp src/modules/Subtitles/SRT.hpp
index 817c4b4f..d4e7f6f3 100644
--- src/modules/Subtitles/SRT.hpp
+++ src/modules/Subtitles/SRT.hpp
@@ -20,9 +20,9 @@
 
 #include <SubsDec.hpp>
 
-class SRT final : public SubsDec
+class SRT : public SubsDec
 {
-    bool toASS(const QByteArray &, class LibASS *, double) override;
+    bool toASS(const QByteArray &, class LibASS *, double) override final;
 };
 
 #define SRTSubsName "SRT Subtitles"
diff --git src/modules/Subtitles/Subtitles.hpp src/modules/Subtitles/Subtitles.hpp
index 528317b5..328137ee 100644
--- src/modules/Subtitles/Subtitles.hpp
+++ src/modules/Subtitles/Subtitles.hpp
@@ -20,15 +20,15 @@
 
 #include <Module.hpp>
 
-class Subtitles final : public Module
+class Subtitles : public Module
 {
 public:
     Subtitles();
 private:
-    QList<Info> getModulesInfo(const bool) const override;
-    void *createInstance(const QString &) override;
+    QList<Info> getModulesInfo(const bool) const override final;
+    void *createInstance(const QString &) override final;
 
-    SettingsWidget *getSettingsWidget() override;
+    SettingsWidget *getSettingsWidget() override final;
 };
 
 /**/
@@ -38,13 +38,13 @@ private:
 class QCheckBox;
 class QDoubleSpinBox;
 
-class ModuleSettingsWidget final : public Module::SettingsWidget
+class ModuleSettingsWidget : public Module::SettingsWidget
 {
     Q_DECLARE_TR_FUNCTIONS(ModuleSettingsWidget)
 public:
     ModuleSettingsWidget(Module &);
 private:
-    void saveSettings() override;
+    void saveSettings() override final;
 
     QCheckBox *srtEB, *classicEB, *mEB;
     QDoubleSpinBox *maxLenB;
diff --git src/modules/VideoFilters/BlendDeint.hpp src/modules/VideoFilters/BlendDeint.hpp
index 018c4f68..58c560a5 100644
--- src/modules/VideoFilters/BlendDeint.hpp
+++ src/modules/VideoFilters/BlendDeint.hpp
@@ -20,14 +20,14 @@
 
 #include <DeintFilter.hpp>
 
-class BlendDeint final : public DeintFilter
+class BlendDeint : public DeintFilter
 {
 public:
     BlendDeint();
 
-    bool filter(QQueue<FrameBuffer> &framesQueue) override;
+    bool filter(QQueue<FrameBuffer> &framesQueue) override final;
 
-    bool processParams(bool *paramsCorrected) override;
+    bool processParams(bool *paramsCorrected) override final;
 };
 
 #define BlendDeintName "Blend"
diff --git src/modules/VideoFilters/BobDeint.hpp src/modules/VideoFilters/BobDeint.hpp
index 948a1ad3..0700d808 100644
--- src/modules/VideoFilters/BobDeint.hpp
+++ src/modules/VideoFilters/BobDeint.hpp
@@ -20,16 +20,16 @@
 
 #include <DeintFilter.hpp>
 
-class BobDeint final : public DeintFilter
+class BobDeint : public DeintFilter
 {
 public:
     BobDeint();
 
-    void clearBuffer() override;
+    void clearBuffer() override final;
 
-    bool filter(QQueue<FrameBuffer> &framesQueue) override;
+    bool filter(QQueue<FrameBuffer> &framesQueue) override final;
 
-    bool processParams(bool *paramsCorrected) override;
+    bool processParams(bool *paramsCorrected) override final;
 private:
     bool secondFrame;
     double lastTS;
diff --git src/modules/VideoFilters/DiscardDeint.hpp src/modules/VideoFilters/DiscardDeint.hpp
index 966b761f..0312985d 100644
--- src/modules/VideoFilters/DiscardDeint.hpp
+++ src/modules/VideoFilters/DiscardDeint.hpp
@@ -20,14 +20,14 @@
 
 #include <DeintFilter.hpp>
 
-class DiscardDeint final : public DeintFilter
+class DiscardDeint : public DeintFilter
 {
 public:
     DiscardDeint();
 
-    bool filter(QQueue<FrameBuffer> &framesQueue) override;
+    bool filter(QQueue<FrameBuffer> &framesQueue) override final;
 
-    bool processParams(bool *paramsCorrected) override;
+    bool processParams(bool *paramsCorrected) override final;
 };
 
 #define DiscardDeintName "Discard"
diff --git src/modules/VideoFilters/MotionBlur.hpp src/modules/VideoFilters/MotionBlur.hpp
index 666b14ec..5099b1d6 100644
--- src/modules/VideoFilters/MotionBlur.hpp
+++ src/modules/VideoFilters/MotionBlur.hpp
@@ -20,14 +20,14 @@
 
 #include <VideoFilter.hpp>
 
-class MotionBlur final : public VideoFilter
+class MotionBlur : public VideoFilter
 {
 public:
     MotionBlur();
 
-    bool filter(QQueue<FrameBuffer> &framesQueue) override;
+    bool filter(QQueue<FrameBuffer> &framesQueue) override final;
 
-    bool processParams(bool *paramsCorrected) override;
+    bool processParams(bool *paramsCorrected) override final;
 };
 
 #define MotionBlurName "Motion Blur"
diff --git src/modules/VideoFilters/VFilters.hpp src/modules/VideoFilters/VFilters.hpp
index a0978e3e..1aa7221d 100644
--- src/modules/VideoFilters/VFilters.hpp
+++ src/modules/VideoFilters/VFilters.hpp
@@ -22,12 +22,12 @@
 
 #include <QCoreApplication>
 
-class VFilters final : public Module
+class VFilters : public Module
 {
     Q_DECLARE_TR_FUNCTIONS(VFilters)
 public:
     VFilters();
 private:
-    QList<Info> getModulesInfo(const bool) const override;
-    void *createInstance(const QString &) override;
+    QList<Info> getModulesInfo(const bool) const override final;
+    void *createInstance(const QString &) override final;
 };
diff --git src/modules/VideoFilters/YadifDeint.hpp src/modules/VideoFilters/YadifDeint.hpp
index 30336ff7..092c57f4 100644
--- src/modules/VideoFilters/YadifDeint.hpp
+++ src/modules/VideoFilters/YadifDeint.hpp
@@ -29,16 +29,16 @@
 
 class YadifDeint;
 
-class YadifThr final : public QThread
+class YadifThr : public QThread
 {
 public:
     YadifThr(const YadifDeint &yadifDeint);
-    ~YadifThr();
+    ~YadifThr() final;
 
     void start(VideoFrame &destFrame, const VideoFrame &prevFrame, const VideoFrame &currFrame, const VideoFrame &nextFrame, const int id, const int n);
     void waitForFinished();
 private:
-    void run() override;
+    void run() override final;
 
     const YadifDeint &yadifDeint;
 
@@ -51,17 +51,17 @@ private:
     QMutex mutex;
 };
 
-class YadifDeint final : public DeintFilter
+class YadifDeint : public DeintFilter
 {
     friend class YadifThr;
 public:
     YadifDeint(bool doubler, bool spatialCheck);
 
-    void clearBuffer() override;
+    void clearBuffer() override final;
 
-    bool filter(QQueue<FrameBuffer> &framesQueue) override;
+    bool filter(QQueue<FrameBuffer> &framesQueue) override final;
 
-    bool processParams(bool *paramsCorrected) override;
+    bool processParams(bool *paramsCorrected) override final;
 private:
     inline void doFilter(VideoFrame &dest, const VideoFrame &prev, const VideoFrame &curr, const VideoFrame &next, const int id, const int jobsCount) const;
 
diff --git src/modules/Visualizations/FFTSpectrum.hpp src/modules/Visualizations/FFTSpectrum.hpp
index 6af9e602..56cc152e 100644
--- src/modules/Visualizations/FFTSpectrum.hpp
+++ src/modules/Visualizations/FFTSpectrum.hpp
@@ -26,19 +26,19 @@
 
 class FFTSpectrum;
 
-class FFTSpectrumW final : public VisWidget
+class FFTSpectrumW : public VisWidget
 {
     friend class FFTSpectrum;
     Q_DECLARE_TR_FUNCTIONS(FFTSpectrumW)
 public:
     FFTSpectrumW(FFTSpectrum &);
 private:
-    void paint(QPainter &p) override;
+    void paint(QPainter &p) override final;
 
-    void mouseMoveEvent(QMouseEvent *e) override;
+    void mouseMoveEvent(QMouseEvent *e) override final;
 
-    void start() override;
-    void stop() override;
+    void start() override final;
+    void stop() override final;
 
     QVector<float> spectrumData;
     QVector<QPair<qreal, QPair<qreal, double>>> lastData;
@@ -54,22 +54,22 @@ private:
 struct FFTContext;
 struct FFTComplex;
 
-class FFTSpectrum final : public QMPlay2Extensions
+class FFTSpectrum : public QMPlay2Extensions
 {
 public:
     FFTSpectrum(Module &);
 
     void soundBuffer(const bool);
 
-    bool set() override;
+    bool set() override final;
 private:
-    DockWidget *getDockWidget() override;
+    DockWidget *getDockWidget() override final;
 
-    bool isVisualization() const override;
-    void connectDoubleClick(const QObject *, const char *) override;
-    void visState(bool, uchar, uint) override;
-    void sendSoundData(const QByteArray &) override;
-    void clearSoundData() override;
+    bool isVisualization() const override final;
+    void connectDoubleClick(const QObject *, const char *) override final;
+    void visState(bool, uchar, uint) override final;
+    void sendSoundData(const QByteArray &) override final;
+    void clearSoundData() override final;
 
     /**/
 
diff --git src/modules/Visualizations/SimpleVis.hpp src/modules/Visualizations/SimpleVis.hpp
index eb90fe90..ef25381f 100644
--- src/modules/Visualizations/SimpleVis.hpp
+++ src/modules/Visualizations/SimpleVis.hpp
@@ -26,7 +26,7 @@
 
 class SimpleVis;
 
-class SimpleVisW final : public VisWidget
+class SimpleVisW : public VisWidget
 {
     friend class SimpleVis;
 
@@ -34,12 +34,12 @@ class SimpleVisW final : public VisWidget
 public:
     SimpleVisW(SimpleVis &);
 private:
-    void paint(QPainter &p) override;
+    void paint(QPainter &p) override final;
 
-    void resizeEvent(QResizeEvent *) override;
+    void resizeEvent(QResizeEvent *) override final;
 
-    void start() override;
-    void stop() override;
+    void start() override final;
+    void stop() override final;
 
     QByteArray soundData;
     quint8 chn;
@@ -54,22 +54,22 @@ private:
 
 /**/
 
-class SimpleVis final : public QMPlay2Extensions
+class SimpleVis : public QMPlay2Extensions
 {
 public:
     SimpleVis(Module &);
 
     void soundBuffer(const bool);
 
-    bool set() override;
+    bool set() override final;
 private:
-    DockWidget *getDockWidget() override;
+    DockWidget *getDockWidget() override final;
 
-    bool isVisualization() const override;
-    void connectDoubleClick(const QObject *, const char *) override;
-    void visState(bool, uchar, uint) override;
-    void sendSoundData(const QByteArray &) override;
-    void clearSoundData() override;
+    bool isVisualization() const override final;
+    void connectDoubleClick(const QObject *, const char *) override final;
+    void visState(bool, uchar, uint) override final;
+    void sendSoundData(const QByteArray &) override final;
+    void clearSoundData() override final;
 
     /**/
 
diff --git src/modules/Visualizations/Visualizations.hpp src/modules/Visualizations/Visualizations.hpp
index 4a1f2abc..7a73f268 100644
--- src/modules/Visualizations/Visualizations.hpp
+++ src/modules/Visualizations/Visualizations.hpp
@@ -20,15 +20,15 @@
 
 #include <Module.hpp>
 
-class Visualizations final : public Module
+class Visualizations : public Module
 {
 public:
     Visualizations();
 private:
-    QList<Info> getModulesInfo(const bool) const override;
-    void *createInstance(const QString &) override;
+    QList<Info> getModulesInfo(const bool) const override final;
+    void *createInstance(const QString &) override final;
 
-    SettingsWidget *getSettingsWidget() override;
+    SettingsWidget *getSettingsWidget() override final;
 };
 
 /**/
@@ -38,13 +38,13 @@ private:
 class QCheckBox;
 class QSpinBox;
 
-class ModuleSettingsWidget final : public Module::SettingsWidget
+class ModuleSettingsWidget : public Module::SettingsWidget
 {
     Q_DECLARE_TR_FUNCTIONS(ModuleSettingsWidget)
 public:
     ModuleSettingsWidget(Module &);
 private:
-    void saveSettings() override;
+    void saveSettings() override final;
 
 #ifdef USE_OPENGL
     QCheckBox *useOpenGLB;
diff --git src/modules/XVideo/XVideo.hpp src/modules/XVideo/XVideo.hpp
index 47767a60..52bef2a7 100644
--- src/modules/XVideo/XVideo.hpp
+++ src/modules/XVideo/XVideo.hpp
@@ -20,15 +20,15 @@
 
 #include <Module.hpp>
 
-class XVideo final : public Module
+class XVideo : public Module
 {
 public:
     XVideo();
 private:
-    QList<Info> getModulesInfo(const bool) const override;
-    void *createInstance(const QString &) override;
+    QList<Info> getModulesInfo(const bool) const override final;
+    void *createInstance(const QString &) override final;
 
-    SettingsWidget *getSettingsWidget() override;
+    SettingsWidget *getSettingsWidget() override final;
 };
 
 /**/
@@ -38,13 +38,13 @@ private:
 class QCheckBox;
 class QComboBox;
 
-class ModuleSettingsWidget final : public Module::SettingsWidget
+class ModuleSettingsWidget : public Module::SettingsWidget
 {
     Q_DECLARE_TR_FUNCTIONS(ModuleSettingsWidget)
 public:
     ModuleSettingsWidget(Module &);
 private:
-    void saveSettings() override;
+    void saveSettings() override final;
 
     QCheckBox *enabledB, *useSHMB;
     QComboBox *adaptorsB;
diff --git src/modules/XVideo/XVideoWriter.hpp src/modules/XVideo/XVideoWriter.hpp
index d71e6ec3..9345f8ff 100644
--- src/modules/XVideo/XVideoWriter.hpp
+++ src/modules/XVideo/XVideoWriter.hpp
@@ -24,18 +24,18 @@
 
 #include <QWidget>
 
-class Drawable final : public QWidget
+class Drawable : public QWidget
 {
     friend class XVideoWriter;
 public:
     Drawable(class XVideoWriter &);
     ~Drawable() final = default;
 private:
-    void resizeEvent(QResizeEvent *) override;
-    void paintEvent(QPaintEvent *) override;
-    bool event(QEvent *) override;
+    void resizeEvent(QResizeEvent *) override final;
+    void paintEvent(QPaintEvent *) override final;
+    bool event(QEvent *) override final;
 
-    QPaintEngine *paintEngine() const override;
+    QPaintEngine *paintEngine() const override final;
 
     int X, Y, W, H;
     QRect dstRect, srcRect;
@@ -46,25 +46,25 @@ private:
 
 class QMPlay2OSD;
 
-class XVideoWriter final : public VideoWriter
+class XVideoWriter : public VideoWriter
 {
     friend class Drawable;
 public:
     XVideoWriter(Module &);
 private:
-    ~XVideoWriter();
+    ~XVideoWriter() final;
 
-    bool set() override;
+    bool set() override final;
 
-    bool readyWrite() const override;
+    bool readyWrite() const override final;
 
-    bool processParams(bool *paramsCorrected) override;
-    void writeVideo(const VideoFrame &videoFrame) override;
-    void writeOSD(const QList<const QMPlay2OSD *> &) override;
+    bool processParams(bool *paramsCorrected) override final;
+    void writeVideo(const VideoFrame &videoFrame) override final;
+    void writeOSD(const QList<const QMPlay2OSD *> &) override final;
 
-    QString name() const override;
+    QString name() const override final;
 
-    bool open() override;
+    bool open() override final;
 
     /**/
 
diff --git src/qmplay2/LineEdit.cpp src/qmplay2/LineEdit.cpp
index ee3c34a9..8be1335a 100644
--- src/qmplay2/LineEdit.cpp
+++ src/qmplay2/LineEdit.cpp
@@ -1,6 +1,6 @@
 /*
     QMPlay2 is a video and audio player.
-    Copyright (C) 2010-2019  Błażej Szczygieł
+    Copyright (C) 2010-2017  Błażej Szczygieł
 
     This program is free software: you can redistribute it and/or modify
     it under the terms of the GNU Lesser General Public License as published
@@ -18,14 +18,11 @@
 
 #include <LineEdit.hpp>
 
-#include <QMPlay2Core.hpp>
 
-#if QT_VERSION >= QT_VERSION_CHECK(5, 2, 0)
-    #include <QAction>
-#else
-    #include <Functions.hpp>
+#include <QMPlay2Core.hpp>
+#include <Functions.hpp>
 
-    #include <QResizeEvent>
+#include <QResizeEvent>
 
 LineEditButton::LineEditButton()
 {
@@ -41,30 +38,20 @@ void LineEditButton::mousePressEvent(QMouseEvent *e)
     if (e->button() & Qt::LeftButton)
         emit clicked();
 }
-#endif
+
+/**/
 
 LineEdit::LineEdit(QWidget *parent)
     : QLineEdit(parent)
 {
-#if QT_VERSION >= QT_VERSION_CHECK(5, 2, 0)
-    QAction *clearAct = addAction(QMPlay2Core.getIconFromTheme("edit-clear"), TrailingPosition);
-    connect(clearAct, &QAction::triggered, this, &LineEdit::clearText);
-    connect(this, &LineEdit::textChanged, this, [=](const QString &text) {
-        clearAct->setVisible(!text.isEmpty());
-    });
-    clearAct->setToolTip(tr("Clear"));
-    clearAct->setVisible(false);
-#else
     connect(this, SIGNAL(textChanged(const QString &)), this, SLOT(textChangedSlot(const QString &)));
     connect(&b, SIGNAL(clicked()), this, SLOT(clearText()));
     setMinimumWidth(b.width() * 2.5);
     setTextMargins(0, 0, b.width() * 1.5, 0);
     b.setParent(this);
     b.hide();
-#endif
 }
 
-#if QT_VERSION < QT_VERSION_CHECK(5, 2, 0)
 void LineEdit::resizeEvent(QResizeEvent *e)
 {
     b.move(e->size().width() - b.width() * 1.5, e->size().height() / 2 - b.height() / 2);
@@ -79,12 +66,11 @@ void LineEdit::mouseMoveEvent(QMouseEvent *e)
     if (!b.underMouse())
         QLineEdit::mouseMoveEvent(e);
 }
+
 void LineEdit::textChangedSlot(const QString &str)
 {
     b.setVisible(!str.isEmpty());
 }
-#endif
-
 void LineEdit::clearText()
 {
     clear();
diff --git src/qmplay2/VideoFilters.cpp src/qmplay2/VideoFilters.cpp
index 3b1f1a7d..b9f3fda9 100644
--- src/qmplay2/VideoFilters.cpp
+++ src/qmplay2/VideoFilters.cpp
@@ -137,7 +137,7 @@ private:
 
 /**/
 
-class VideoFiltersThr final : public QThread
+class VideoFiltersThr : public QThread
 {
 public:
     VideoFiltersThr(VideoFilters &videoFilters) :
@@ -188,7 +188,7 @@ public:
 
     QMutex bufferMutex;
 private:
-    void run() override
+    void run() override final
     {
         while (!br)
         {
diff --git src/qmplay2/headers/AudioFilter.hpp src/qmplay2/headers/AudioFilter.hpp
index 4e179e05..fa0321c5 100644
--- src/qmplay2/headers/AudioFilter.hpp
+++ src/qmplay2/headers/AudioFilter.hpp
@@ -24,7 +24,7 @@
 
 class Buffer;
 
-class QMPLAY2SHAREDLIB_EXPORT AudioFilter : public ModuleCommon
+class AudioFilter : public ModuleCommon
 {
 public:
     virtual ~AudioFilter() = default;
diff --git src/qmplay2/headers/Buffer.hpp src/qmplay2/headers/Buffer.hpp
index 0538aa70..6366ad57 100644
--- src/qmplay2/headers/Buffer.hpp
+++ src/qmplay2/headers/Buffer.hpp
@@ -18,11 +18,11 @@
 
 #pragma once
 
-#include <QMPlay2Lib.hpp>
+#include <QtGlobal>
 
 struct AVBufferRef;
 
-class QMPLAY2SHAREDLIB_EXPORT Buffer
+class Buffer
 {
     AVBufferRef *m_bufferRef = nullptr;
     qint32 m_size = 0;
diff --git src/qmplay2/headers/ColorButton.hpp src/qmplay2/headers/ColorButton.hpp
index 75aa784a..9e66c641 100644
--- src/qmplay2/headers/ColorButton.hpp
+++ src/qmplay2/headers/ColorButton.hpp
@@ -18,11 +18,9 @@
 
 #pragma once
 
-#include <QMPlay2Lib.hpp>
-
 #include <QPushButton>
 
-class QMPLAY2SHAREDLIB_EXPORT ColorButton final : public QPushButton
+class ColorButton : public QPushButton
 {
     Q_OBJECT
 public:
@@ -34,7 +32,7 @@ public:
         return m_color;
     }
 protected:
-    void paintEvent(QPaintEvent *) override;
+    void paintEvent(QPaintEvent *) override final;
 private:
     QColor m_color;
     bool m_alphaChannel;
diff --git src/qmplay2/headers/CommonJS.hpp src/qmplay2/headers/CommonJS.hpp
index ffe88429..985410a9 100644
--- src/qmplay2/headers/CommonJS.hpp
+++ src/qmplay2/headers/CommonJS.hpp
@@ -1,7 +1,5 @@
 #pragma once
 
-#include <QMPlay2Lib.hpp>
-
 #include <IOController.hpp>
 
 #include <QVariantMap>
@@ -15,7 +13,7 @@ class NetworkAccessJS;
 class NetworkReply;
 class QTimer;
 
-class QMPLAY2SHAREDLIB_EXPORT CommonJS : public QObject
+class CommonJS : public QObject
 {
     Q_OBJECT
 
diff --git src/qmplay2/headers/Decoder.hpp src/qmplay2/headers/Decoder.hpp
index 2361f9eb..cc5e10b9 100644
--- src/qmplay2/headers/Decoder.hpp
+++ src/qmplay2/headers/Decoder.hpp
@@ -31,7 +31,7 @@ class VideoWriter;
 class StreamInfo;
 class LibASS;
 
-class QMPLAY2SHAREDLIB_EXPORT Decoder : public ModuleCommon
+class Decoder : public ModuleCommon
 {
 public:
     static Decoder *create(StreamInfo &streamInfo, VideoWriter *writer = nullptr, const QStringList &modNames = {}, QString *modNameOutput = nullptr);
diff --git src/qmplay2/headers/DeintFilter.hpp src/qmplay2/headers/DeintFilter.hpp
index 182b2014..2339584c 100644
--- src/qmplay2/headers/DeintFilter.hpp
+++ src/qmplay2/headers/DeintFilter.hpp
@@ -21,7 +21,7 @@
 #include <VideoFilter.hpp>
 #include <VideoFrame.hpp>
 
-class QMPLAY2SHAREDLIB_EXPORT DeintFilter : public VideoFilter
+class DeintFilter : public VideoFilter
 {
 public:
     enum DeintFlags {AutoDeinterlace = 0x1, DoubleFramerate = 0x2, AutoParity = 0x4, TopFieldFirst = 0x8};
diff --git src/qmplay2/headers/Demuxer.hpp src/qmplay2/headers/Demuxer.hpp
index 5999ae31..09050479 100644
--- src/qmplay2/headers/Demuxer.hpp
+++ src/qmplay2/headers/Demuxer.hpp
@@ -26,7 +26,7 @@
 
 struct Packet;
 
-class QMPLAY2SHAREDLIB_EXPORT Demuxer : protected ModuleCommon, public BasicIO
+class Demuxer : protected ModuleCommon, public BasicIO
 {
 public:
     class FetchTracks
diff --git src/qmplay2/headers/DockWidget.hpp src/qmplay2/headers/DockWidget.hpp
index 9c9c1385..cde4fc2f 100644
--- src/qmplay2/headers/DockWidget.hpp
+++ src/qmplay2/headers/DockWidget.hpp
@@ -38,9 +38,12 @@ public:
         setTitleBarVisible(titleBarVisible);
     }
 private:
-    class QMPLAY2SHAREDLIB_EXPORT EmptyW final : public QWidget
+    class EmptyW : public QWidget
     {
-        QSize sizeHint() const override;
+#if QT_VERSION >= 0x050000 && QT_VERSION < 0x050600
+        void showEvent(QShowEvent *);
+#endif
+        QSize sizeHint() const override final;
     } emptyW;
     bool titleBarVisible, globalTitleBarVisible;
 };
diff --git src/qmplay2/headers/Functions.hpp src/qmplay2/headers/Functions.hpp
index 04440836..a5e0a0fb 100644
--- src/qmplay2/headers/Functions.hpp
+++ src/qmplay2/headers/Functions.hpp
@@ -59,21 +59,21 @@ namespace Functions
     using DemuxersInfo = QVector<DemuxerInfo>;
     using ChecksumList = QVector<quint64>;
 
-    QMPLAY2SHAREDLIB_EXPORT QDate parseVersion(const QString &dateTxt);
+    QDate parseVersion(const QString &dateTxt);
 
-    QMPLAY2SHAREDLIB_EXPORT QString Url(QString, const QString &pth = QString());
-    QMPLAY2SHAREDLIB_EXPORT QString getUrlScheme(const QString &url);
+    QString Url(QString, const QString &pth = QString());
+    QString getUrlScheme(const QString &url);
 
-    QMPLAY2SHAREDLIB_EXPORT QString timeToStr(const double t, const bool decimals = false);
+    QString timeToStr(const double t, const bool decimals = false);
 
-    QMPLAY2SHAREDLIB_EXPORT QString filePath(const QString &);
-    QMPLAY2SHAREDLIB_EXPORT QString fileName(QString, bool extension = true);
-    QMPLAY2SHAREDLIB_EXPORT QString fileExt(const QString &);
+    QString filePath(const QString &);
+    QString fileName(QString, bool extension = true);
+    QString fileExt(const QString &);
 
-    QMPLAY2SHAREDLIB_EXPORT QString cleanPath(QString);
-    QMPLAY2SHAREDLIB_EXPORT QString cleanFileName(QString, const QString &replaced = "_");
+    QString cleanPath(QString);
+    QString cleanFileName(QString, const QString &replaced = "_");
 
-    QMPLAY2SHAREDLIB_EXPORT QString sizeString(quint64);
+    QString sizeString(quint64);
 
     static inline double gettime()
     {
@@ -114,48 +114,48 @@ namespace Functions
         return val > 255 ? (quint8)255 : (val < 0 ? (quint8)0 : val);
     }
 
-    QMPLAY2SHAREDLIB_EXPORT void getImageSize(const double aspect_ratio, const double zoom, const int winW, const int winH, int &W, int &H, int *X = nullptr, int *Y = nullptr, QRect *dstRect = nullptr, const int *vidW = nullptr, const int *vidH = nullptr, QRect *srcRect = nullptr);
+    void getImageSize(const double aspect_ratio, const double zoom, const int winW, const int winH, int &W, int &H, int *X = nullptr, int *Y = nullptr, QRect *dstRect = nullptr, const int *vidW = nullptr, const int *vidH = nullptr, QRect *srcRect = nullptr);
 
-    QMPLAY2SHAREDLIB_EXPORT QPixmap getPixmapFromIcon(const QIcon &icon, QSize size, QWidget *w = nullptr);
-    QMPLAY2SHAREDLIB_EXPORT void drawPixmap(QPainter &p, const QPixmap &pixmap, const QWidget *w, Qt::TransformationMode transformationMode = Qt::SmoothTransformation, Qt::AspectRatioMode aRatioMode = Qt::KeepAspectRatio, QSize size = QSize(), qreal scale = 1.0);
+    QPixmap getPixmapFromIcon(const QIcon &icon, QSize size, QWidget *w = nullptr);
+    void drawPixmap(QPainter &p, const QPixmap &pixmap, const QWidget *w, Qt::TransformationMode transformationMode = Qt::SmoothTransformation, Qt::AspectRatioMode aRatioMode = Qt::KeepAspectRatio, QSize size = QSize(), qreal scale = 1.0);
 
-    QMPLAY2SHAREDLIB_EXPORT bool mustRepaintOSD(const QList<const QMPlay2OSD *> &osd_list, const ChecksumList &osd_ids, const qreal *scaleW = nullptr, const qreal *scaleH = nullptr, QRect *bounds = nullptr);
-    QMPLAY2SHAREDLIB_EXPORT void paintOSD(bool rgbSwapped, const QList<const QMPlay2OSD *> &osd_list, const qreal scaleW, const qreal scaleH, QPainter &painter, ChecksumList *osd_ids = nullptr);
-    QMPLAY2SHAREDLIB_EXPORT void paintOSDtoYV12(quint8 *imageData, QImage &osdImg, int W, int H, int linesizeLuma, int linesizeChroma, const QList<const QMPlay2OSD *> &osd_list, ChecksumList &osd_ids);
+    bool mustRepaintOSD(const QList<const QMPlay2OSD *> &osd_list, const ChecksumList &osd_ids, const qreal *scaleW = nullptr, const qreal *scaleH = nullptr, QRect *bounds = nullptr);
+    void paintOSD(bool rgbSwapped, const QList<const QMPlay2OSD *> &osd_list, const qreal scaleW, const qreal scaleH, QPainter &painter, ChecksumList *osd_ids = nullptr);
+    void paintOSDtoYV12(quint8 *imageData, QImage &osdImg, int W, int H, int linesizeLuma, int linesizeChroma, const QList<const QMPlay2OSD *> &osd_list, ChecksumList &osd_ids);
 
-    QMPLAY2SHAREDLIB_EXPORT QPixmap applyDropShadow(const QPixmap &input, const qreal blurRadius, const QPointF &offset, const QColor &color);
-    QMPLAY2SHAREDLIB_EXPORT QPixmap applyBlur(const QPixmap &input, const qreal blurRadius);
+    QPixmap applyDropShadow(const QPixmap &input, const qreal blurRadius, const QPointF &offset, const QColor &color);
+    QPixmap applyBlur(const QPixmap &input, const qreal blurRadius);
 
-    QMPLAY2SHAREDLIB_EXPORT void ImageEQ(int Contrast, int Brightness, quint8 *imageBits, unsigned bitsCount);
-    QMPLAY2SHAREDLIB_EXPORT int scaleEQValue(int val, int min, int max);
+    void ImageEQ(int Contrast, int Brightness, quint8 *imageBits, unsigned bitsCount);
+    int scaleEQValue(int val, int min, int max);
 
-    QMPLAY2SHAREDLIB_EXPORT int getField(const VideoFrame &videoFrame, int deinterlace, int fullFrame, int topField, int bottomField);
+    int getField(const VideoFrame &videoFrame, int deinterlace, int fullFrame, int topField, int bottomField);
 
-    QMPLAY2SHAREDLIB_EXPORT QByteArray convertToASS(QString txt);
+    QByteArray convertToASS(QString txt);
 
-    QMPLAY2SHAREDLIB_EXPORT bool chkMimeData(const QMimeData *mimeData);
-    QMPLAY2SHAREDLIB_EXPORT QStringList getUrlsFromMimeData(const QMimeData *mimeData, const bool checkExtensionsForUrl = true);
+    bool chkMimeData(const QMimeData *mimeData);
+    QStringList getUrlsFromMimeData(const QMimeData *mimeData, const bool checkExtensionsForUrl = true);
 
-    QMPLAY2SHAREDLIB_EXPORT QString maybeExtensionAddress(const QString &url);
+    QString maybeExtensionAddress(const QString &url);
 
-    QMPLAY2SHAREDLIB_EXPORT bool splitPrefixAndUrlIfHasPluginPrefix(const QString &entireUrl, QString *addressPrefixName, QString *url, QString *param = nullptr);
-    QMPLAY2SHAREDLIB_EXPORT void getDataIfHasPluginPrefix(const QString &entireUrl, QString *url = nullptr, QString *name = nullptr, QIcon *icon = nullptr, IOController<> *ioCtrl = nullptr, const DemuxersInfo &demuxersInfo = DemuxersInfo());
+    bool splitPrefixAndUrlIfHasPluginPrefix(const QString &entireUrl, QString *addressPrefixName, QString *url, QString *param = nullptr);
+    void getDataIfHasPluginPrefix(const QString &entireUrl, QString *url = nullptr, QString *name = nullptr, QIcon *icon = nullptr, IOController<> *ioCtrl = nullptr, const DemuxersInfo &demuxersInfo = DemuxersInfo());
 
-    QMPLAY2SHAREDLIB_EXPORT QByteArray getUserAgent();
-    QMPLAY2SHAREDLIB_EXPORT QString prepareFFmpegUrl(QString url, AVDictionary *&options, bool setCookies = true, bool setRawHeaders = true, bool icy = true, const QByteArray &userAgentArg = QByteArray());
+    QByteArray getUserAgent();
+    QString prepareFFmpegUrl(QString url, AVDictionary *&options, bool setCookies = true, bool setRawHeaders = true, bool icy = true, const QByteArray &userAgentArg = QByteArray());
 
-    QMPLAY2SHAREDLIB_EXPORT void hFlip(quint8 *data, int linesize, int height, int width);
-    QMPLAY2SHAREDLIB_EXPORT void vFlip(quint8 *data, int linesize, int height);
+    void hFlip(quint8 *data, int linesize, int height, int width);
+    void vFlip(quint8 *data, int linesize, int height);
 
-    QMPLAY2SHAREDLIB_EXPORT QString dBStr(double a);
+    QString dBStr(double a);
 
-    QMPLAY2SHAREDLIB_EXPORT quint32 getBestSampleRate();
+    quint32 getBestSampleRate();
 
-    QMPLAY2SHAREDLIB_EXPORT bool wrapMouse(QWidget *widget, QPoint &mousePos, int margin = 0);
+    bool wrapMouse(QWidget *widget, QPoint &mousePos, int margin = 0);
 
-    QMPLAY2SHAREDLIB_EXPORT QByteArray decryptAes256Cbc(const QByteArray &password, const QByteArray &salt, const QByteArray &ciphered);
+    QByteArray decryptAes256Cbc(const QByteArray &password, const QByteArray &salt, const QByteArray &ciphered);
 
-    QMPLAY2SHAREDLIB_EXPORT QByteArray textWithFallbackEncoding(const QByteArray &data);
+    QByteArray textWithFallbackEncoding(const QByteArray &data);
 
-    QMPLAY2SHAREDLIB_EXPORT QMatrix3x3 getYUVtoRGBmatrix(float cr, float cg, float cb, bool limited);
+    QMatrix3x3 getYUVtoRGBmatrix(float cr, float cg, float cb, bool limited);
 }
diff --git src/qmplay2/headers/IPC.hpp src/qmplay2/headers/IPC.hpp
index 4766b238..54f47443 100644
--- src/qmplay2/headers/IPC.hpp
+++ src/qmplay2/headers/IPC.hpp
@@ -18,8 +18,6 @@
 
 #pragma once
 
-#include <QMPlay2Lib.hpp>
-
 #include <QIODevice>
 #include <QString>
 
@@ -31,18 +29,18 @@ class IPCServerPriv;
 
 class QSocketNotifier;
 
-class QMPLAY2SHAREDLIB_EXPORT IPCSocket final : public QIODevice
+class IPCSocket : public QIODevice
 {
     Q_OBJECT
     friend class IPCServer;
 public:
     IPCSocket(const QString &fileName, QObject *parent = nullptr);
-    ~IPCSocket();
+    ~IPCSocket() final;
 
     bool isConnected() const;
 
-    bool open(OpenMode mode) override;
-    void close() override;
+    bool open(OpenMode mode) override final;
+    void close() override final;
 
 private slots:
     void socketReadActive();
@@ -54,20 +52,20 @@ private:
     IPCSocket(int socket, QObject *parent);
 #endif
 
-    qint64 readData(char *data, qint64 maxSize) override;
-    qint64 writeData(const char *data, qint64 maxSize) override;
+    qint64 readData(char *data, qint64 maxSize) override final;
+    qint64 writeData(const char *data, qint64 maxSize) override final;
 
     IPCSocketPriv *m_priv;
 };
 
 /**/
 
-class QMPLAY2SHAREDLIB_EXPORT IPCServer final : public QObject
+class IPCServer : public QObject
 {
     Q_OBJECT
 public:
     IPCServer(const QString &fileName, QObject *parent = nullptr);
-    ~IPCServer();
+    ~IPCServer() final;
 
     bool listen();
     void close();
diff --git src/qmplay2/headers/ImgScaler.hpp src/qmplay2/headers/ImgScaler.hpp
index e6a35de4..9cfb8d90 100644
--- src/qmplay2/headers/ImgScaler.hpp
+++ src/qmplay2/headers/ImgScaler.hpp
@@ -18,14 +18,14 @@
 
 #pragma once
 
-#include <QMPlay2Lib.hpp>
+#include <stddef.h>
 
 /* YUV planar to RGB32 */
 
 struct SwsContext;
 class VideoFrame;
 
-class QMPLAY2SHAREDLIB_EXPORT ImgScaler
+class ImgScaler
 {
 public:
     ImgScaler();
diff --git src/qmplay2/headers/InDockW.hpp src/qmplay2/headers/InDockW.hpp
index d4b51c50..bc6bc81f 100644
--- src/qmplay2/headers/InDockW.hpp
+++ src/qmplay2/headers/InDockW.hpp
@@ -18,12 +18,10 @@
 
 #pragma once
 
-#include <QMPlay2Lib.hpp>
-
 #include <QPointer>
 #include <QWidget>
 
-class QMPLAY2SHAREDLIB_EXPORT InDockW final : public QWidget
+class InDockW : public QWidget
 {
     Q_OBJECT
 public:
@@ -44,9 +42,9 @@ private slots:
 public:
     void setWidget(QWidget *newW);
 protected:
-    void resizeEvent(QResizeEvent *) override;
-    void paintEvent(QPaintEvent *) override;
-    bool event(QEvent *) override;
+    void resizeEvent(QResizeEvent *) override final;
+    void paintEvent(QPaintEvent *) override final;
+    bool event(QEvent *) override final;
 signals:
     void resized(int, int);
     void itemDropped(const QString &);
diff --git src/qmplay2/headers/LibASS.hpp src/qmplay2/headers/LibASS.hpp
index 88931e28..cf6f5b56 100644
--- src/qmplay2/headers/LibASS.hpp
+++ src/qmplay2/headers/LibASS.hpp
@@ -18,8 +18,6 @@
 
 #pragma once
 
-#include <QMPlay2Lib.hpp>
-
 #include <QByteArray>
 #include <QList>
 
@@ -31,7 +29,7 @@ struct ass_track;
 struct ass_event;
 struct ass_renderer;
 
-class QMPLAY2SHAREDLIB_EXPORT LibASS
+class LibASS
 {
 public:
 #if defined Q_OS_WIN && !defined Q_OS_WIN64
diff --git src/qmplay2/headers/LineEdit.hpp src/qmplay2/headers/LineEdit.hpp
index f35ce503..fe961967 100644
--- src/qmplay2/headers/LineEdit.hpp
+++ src/qmplay2/headers/LineEdit.hpp
@@ -18,45 +18,37 @@
 
 #pragma once
 
-#include <QMPlay2Lib.hpp>
-
 #include <QLineEdit>
+#include <QLabel>
 
-#if QT_VERSION < QT_VERSION_CHECK(5, 2, 0)
-    #include <QLabel>
-
-class QMPLAY2SHAREDLIB_EXPORT LineEditButton final : public QLabel
+class LineEditButton : public QLabel
 {
     Q_OBJECT
 public:
     LineEditButton();
 private:
-    void mousePressEvent(QMouseEvent *) override;
+    void mousePressEvent(QMouseEvent *) override final;
 signals:
     void clicked();
 };
-#endif
 
-class QMPLAY2SHAREDLIB_EXPORT LineEdit final : public QLineEdit
+/**/
+
+class LineEdit : public QLineEdit
 {
     Q_OBJECT
-
 public:
     LineEdit(QWidget *parent = nullptr);
-#if QT_VERSION < QT_VERSION_CHECK(5, 2, 0)
 private:
-    void resizeEvent(QResizeEvent *) override;
-    void mousePressEvent(QMouseEvent *) override;
-    void mouseMoveEvent(QMouseEvent *) override;
+    void resizeEvent(QResizeEvent *) override final;
+    void mousePressEvent(QMouseEvent *) override final;
+    void mouseMoveEvent(QMouseEvent *) override final;
 
     LineEditButton b;
 private slots:
     void textChangedSlot(const QString &);
 public slots:
-#endif
-
     void clearText();
-
 signals:
     void clearButtonClicked();
 };
diff --git src/qmplay2/headers/MkvMuxer.hpp src/qmplay2/headers/MkvMuxer.hpp
index f0f71a96..63bfb8ae 100644
--- src/qmplay2/headers/MkvMuxer.hpp
+++ src/qmplay2/headers/MkvMuxer.hpp
@@ -18,15 +18,13 @@
 
 #pragma once
 
-#include <QMPlay2Lib.hpp>
-
 #include <QList>
 
 struct AVFormatContext;
 class StreamInfo;
 struct Packet;
 
-class QMPLAY2SHAREDLIB_EXPORT MkvMuxer
+class MkvMuxer
 {
     MkvMuxer(const MkvMuxer &) = delete;
     MkvMuxer &operator =(const MkvMuxer &) = delete;
diff --git src/qmplay2/headers/Module.hpp src/qmplay2/headers/Module.hpp
index 5fee6266..442ef070 100644
--- src/qmplay2/headers/Module.hpp
+++ src/qmplay2/headers/Module.hpp
@@ -27,7 +27,7 @@
 
 class ModuleCommon;
 
-class QMPLAY2SHAREDLIB_EXPORT Module : public Settings
+class Module : public Settings
 {
     friend class ModuleCommon;
 public:
diff --git src/qmplay2/headers/ModuleCommon.hpp src/qmplay2/headers/ModuleCommon.hpp
index 89ea8782..42bc0c40 100644
--- src/qmplay2/headers/ModuleCommon.hpp
+++ src/qmplay2/headers/ModuleCommon.hpp
@@ -20,7 +20,7 @@
 
 #include <Module.hpp>
 
-class QMPLAY2SHAREDLIB_EXPORT ModuleCommon
+class ModuleCommon
 {
 public:
     virtual bool set();
diff --git src/qmplay2/headers/ModuleParams.hpp src/qmplay2/headers/ModuleParams.hpp
index d351c08e..eff7fbf8 100644
--- src/qmplay2/headers/ModuleParams.hpp
+++ src/qmplay2/headers/ModuleParams.hpp
@@ -18,13 +18,11 @@
 
 #pragma once
 
-#include <QMPlay2Lib.hpp>
-
 #include <QHash>
 #include <QString>
 #include <QVariant>
 
-class QMPLAY2SHAREDLIB_EXPORT ModuleParams
+class ModuleParams
 {
     Q_DISABLE_COPY(ModuleParams)
 public:
diff --git src/qmplay2/headers/NetworkAccess.hpp src/qmplay2/headers/NetworkAccess.hpp
index d8266d78..0f3fe210 100644
--- src/qmplay2/headers/NetworkAccess.hpp
+++ src/qmplay2/headers/NetworkAccess.hpp
@@ -19,14 +19,13 @@
 #pragma once
 
 #include <IOController.hpp>
-#include <QMPlay2Lib.hpp>
 
 #include <QObject>
 
 class NetworkReplyPriv;
 struct NetworkAccessParams;
 
-class QMPLAY2SHAREDLIB_EXPORT NetworkReply final : public QObject, public BasicIO
+class NetworkReply : public QObject, public BasicIO
 {
     Q_OBJECT
 
@@ -63,11 +62,11 @@ public:
     Q_ENUM(Wait)
 #endif
 
-    ~NetworkReply();
+    ~NetworkReply() final;
 
     QString url() const;
 
-    void abort() override;
+    void abort() override final;
 
     bool hasError() const;
     Error error() const;
@@ -90,7 +89,7 @@ private:
 
 /**/
 
-class QMPLAY2SHAREDLIB_EXPORT NetworkAccess : public QObject
+class NetworkAccess : public QObject
 {
     Q_OBJECT
 
diff --git src/qmplay2/headers/NetworkAccessJS.hpp src/qmplay2/headers/NetworkAccessJS.hpp
index 8cc77097..b78a8087 100644
--- src/qmplay2/headers/NetworkAccessJS.hpp
+++ src/qmplay2/headers/NetworkAccessJS.hpp
@@ -1,14 +1,12 @@
 #pragma once
 
-#include <QMPlay2Lib.hpp>
-
 #include <QtQml/QJSValue>
 #include <QVariant>
 #include <QObject>
 
 class NetworkAccess;
 
-class QMPLAY2SHAREDLIB_EXPORT NetworkAccessJS : public QObject
+class NetworkAccessJS : public QObject
 {
     Q_OBJECT
 
diff --git src/qmplay2/headers/Notifies.hpp src/qmplay2/headers/Notifies.hpp
index 4e29246b..c4e88d2d 100644
--- src/qmplay2/headers/Notifies.hpp
+++ src/qmplay2/headers/Notifies.hpp
@@ -18,13 +18,12 @@
 
 #pragma once
 
-#include <QMPlay2Lib.hpp>
-
 class QSystemTrayIcon;
+class QString;
 class QPixmap;
 class QImage;
 
-class QMPLAY2SHAREDLIB_EXPORT Notifies
+class Notifies
 {
 public:
     static void initialize(QSystemTrayIcon *tray);
diff --git src/qmplay2/headers/NotifiesAndroid.hpp src/qmplay2/headers/NotifiesAndroid.hpp
index 7be1ac13..f07b1028 100644
--- src/qmplay2/headers/NotifiesAndroid.hpp
+++ src/qmplay2/headers/NotifiesAndroid.hpp
@@ -22,10 +22,10 @@
 
 #include <QObject>
 
-class NotifiesAndroid final : public QObject, public Notifies
+class NotifiesAndroid : public QObject, public Notifies
 {
     Q_OBJECT
 
-    bool doNotify(const QString &title, const QString &message, const int ms, const QPixmap &pixmap, const int iconId = 0) override;
-    bool doNotify(const QString &title, const QString &message, const int ms, const QImage &image, const int iconId = 0) override;
+    bool doNotify(const QString &title, const QString &message, const int ms, const QPixmap &pixmap, const int iconId = 0) override final;
+    bool doNotify(const QString &title, const QString &message, const int ms, const QImage &image, const int iconId = 0) override final;
 };
diff --git src/qmplay2/headers/NotifiesFreedesktop.hpp src/qmplay2/headers/NotifiesFreedesktop.hpp
index 1f2f7405..8858deb6 100644
--- src/qmplay2/headers/NotifiesFreedesktop.hpp
+++ src/qmplay2/headers/NotifiesFreedesktop.hpp
@@ -26,17 +26,17 @@
 class OrgFreedesktopNotificationsInterface;
 class QDBusPendingCallWatcher;
 
-class QMPLAY2SHAREDLIB_EXPORT NotifiesFreedesktop final : public QObject, public Notifies
+class NotifiesFreedesktop : public QObject, public Notifies
 {
     Q_OBJECT
 
 public:
     NotifiesFreedesktop();
-    ~NotifiesFreedesktop();
+    ~NotifiesFreedesktop() final;
 
 private:
-    bool doNotify(const QString &title, const QString &message, const int ms, const QPixmap &pixmap, const int iconId = 0) override;
-    bool doNotify(const QString &title, const QString &message, const int ms, const QImage &image, const int iconId = 0) override;
+    bool doNotify(const QString &title, const QString &message, const int ms, const QPixmap &pixmap, const int iconId = 0) override final;
+    bool doNotify(const QString &title, const QString &message, const int ms, const QImage &image, const int iconId = 0) override final;
 
 private slots:
     void callFinished(QDBusPendingCallWatcher *watcher);
diff --git src/qmplay2/headers/NotifiesMacOS.hpp src/qmplay2/headers/NotifiesMacOS.hpp
index 73b5f908..bc1b5745 100644
--- src/qmplay2/headers/NotifiesMacOS.hpp
+++ src/qmplay2/headers/NotifiesMacOS.hpp
@@ -22,15 +22,15 @@
 
 #include <QList>
 
-class NotifiesMacOS final : public Notifies
+class NotifiesMacOS : public Notifies
 {
 public:
     NotifiesMacOS();
-    ~NotifiesMacOS();
+    ~NotifiesMacOS() final;
 
 private:
-    bool doNotify(const QString &title, const QString &message, const int ms, const QPixmap &pixmap, const int iconId) override;
-    bool doNotify(const QString &title, const QString &message, const int ms, const QImage &image, const int iconId) override;
+    bool doNotify(const QString &title, const QString &message, const int ms, const QPixmap &pixmap, const int iconId) override final;
+    bool doNotify(const QString &title, const QString &message, const int ms, const QImage &image, const int iconId) override final;
 
     void *m_notificationItem;
     QList<void *> m_notifications;
diff --git src/qmplay2/headers/NotifiesTray.hpp src/qmplay2/headers/NotifiesTray.hpp
index d258201d..6c859c6e 100644
--- src/qmplay2/headers/NotifiesTray.hpp
+++ src/qmplay2/headers/NotifiesTray.hpp
@@ -20,16 +20,16 @@
 
 #include <Notifies.hpp>
 
-class QMPLAY2SHAREDLIB_EXPORT NotifiesTray final : public Notifies
+class NotifiesTray : public Notifies
 {
 public:
     NotifiesTray(QSystemTrayIcon *tray);
     ~NotifiesTray() final = default;
 
 private:
-    bool doNotify(const QString &title, const QString &message, const int ms, const QPixmap &pixmap, const int iconId) override;
-    bool doNotify(const QString &title, const QString &message, const int ms, const QImage &image, const int iconId) override;
-    bool doNotify(const QString &title, const QString &message, const int ms, const int iconId) override;
+    bool doNotify(const QString &title, const QString &message, const int ms, const QPixmap &pixmap, const int iconId) override final;
+    bool doNotify(const QString &title, const QString &message, const int ms, const QImage &image, const int iconId) override final;
+    bool doNotify(const QString &title, const QString &message, const int ms, const int iconId) override final;
 
     QSystemTrayIcon *m_tray;
 };
diff --git src/qmplay2/headers/Packet.hpp src/qmplay2/headers/Packet.hpp
index eab053e5..fb882a3a 100644
--- src/qmplay2/headers/Packet.hpp
+++ src/qmplay2/headers/Packet.hpp
@@ -23,7 +23,7 @@
 
 #include <QByteArray>
 
-struct QMPLAY2SHAREDLIB_EXPORT Packet : public Buffer
+struct Packet : public Buffer
 {
     TimeStamp ts;
     double duration, sampleAspectRatio = 0.0;
diff --git src/qmplay2/headers/PacketBuffer.hpp src/qmplay2/headers/PacketBuffer.hpp
index 4cc1388e..f8b3af92 100644
--- src/qmplay2/headers/PacketBuffer.hpp
+++ src/qmplay2/headers/PacketBuffer.hpp
@@ -23,7 +23,7 @@
 #include <QMutex>
 #include <QList>
 
-class QMPLAY2SHAREDLIB_EXPORT PacketBuffer : private QList<Packet>
+class PacketBuffer : private QList<Packet>
 {
     static int backwardPackets;
 public:
diff --git src/qmplay2/headers/PixelFormats.hpp src/qmplay2/headers/PixelFormats.hpp
index 52e312db..97d5f171 100644
--- src/qmplay2/headers/PixelFormats.hpp
+++ src/qmplay2/headers/PixelFormats.hpp
@@ -18,8 +18,6 @@
 
 #pragma once
 
-#include <QMPlay2Lib.hpp>
-
 #include <QVector>
 
 enum class QMPlay2PixelFormat
@@ -60,10 +58,10 @@ struct LumaCoefficients
 
 namespace QMPlay2PixelFormatConvert {
 
-QMPLAY2SHAREDLIB_EXPORT int toFFmpeg(QMPlay2PixelFormat pixFmt);
-QMPLAY2SHAREDLIB_EXPORT QMPlay2PixelFormat fromFFmpeg(int pixFmt);
+int toFFmpeg(QMPlay2PixelFormat pixFmt);
+QMPlay2PixelFormat fromFFmpeg(int pixFmt);
 
-QMPLAY2SHAREDLIB_EXPORT QMPlay2ColorSpace fromFFmpegColorSpace(int colorSpace, int h);
-QMPLAY2SHAREDLIB_EXPORT LumaCoefficients getLumaCoeff(QMPlay2ColorSpace colorSpace);
+QMPlay2ColorSpace fromFFmpegColorSpace(int colorSpace, int h);
+LumaCoefficients getLumaCoeff(QMPlay2ColorSpace colorSpace);
 
 }
diff --git src/qmplay2/headers/Playlist.hpp src/qmplay2/headers/Playlist.hpp
index 2f059403..e150d60b 100644
--- src/qmplay2/headers/Playlist.hpp
+++ src/qmplay2/headers/Playlist.hpp
@@ -19,12 +19,11 @@
 #pragma once
 
 #include <IOController.hpp>
-#include <QMPlay2Lib.hpp>
 
 #include <QString>
 #include <QList>
 
-class QMPLAY2SHAREDLIB_EXPORT Playlist
+class Playlist
 {
 public:
     class Entry
diff --git src/qmplay2/headers/QMPlay2Core.hpp src/qmplay2/headers/QMPlay2Core.hpp
index 7c73b00c..287f9495 100644
--- src/qmplay2/headers/QMPlay2Core.hpp
+++ src/qmplay2/headers/QMPlay2Core.hpp
@@ -18,8 +18,6 @@
 
 #pragma once
 
-#include <QMPlay2Lib.hpp>
-
 #include <QAtomicInt>
 #include <QObject>
 #include <QMutex>
@@ -39,7 +37,7 @@ class QWidget;
 class QPixmap;
 class Module;
 
-class QMPLAY2SHAREDLIB_EXPORT QMPlay2CoreClass : public QObject
+class QMPlay2CoreClass : public QObject
 {
     Q_OBJECT
 
diff --git src/qmplay2/headers/QMPlay2Extensions.hpp src/qmplay2/headers/QMPlay2Extensions.hpp
index 64c380fe..58dc2325 100644
--- src/qmplay2/headers/QMPlay2Extensions.hpp
+++ src/qmplay2/headers/QMPlay2Extensions.hpp
@@ -25,7 +25,7 @@
 #include <QString>
 #include <QImage>
 
-class QMPLAY2SHAREDLIB_EXPORT QMPlay2Extensions : public ModuleCommon
+class QMPlay2Extensions : public ModuleCommon
 {
 public:
     static void openExtensions();
diff --git src/qmplay2/headers/QMPlay2OSD.hpp src/qmplay2/headers/QMPlay2OSD.hpp
index df21ce31..617688a4 100644
--- src/qmplay2/headers/QMPlay2OSD.hpp
+++ src/qmplay2/headers/QMPlay2OSD.hpp
@@ -18,14 +18,12 @@
 
 #pragma once
 
-#include <QMPlay2Lib.hpp>
-
 #include <QMutex>
 #include <QList>
 #include <QRect>
 #include <QTime>
 
-class QMPLAY2SHAREDLIB_EXPORT QMPlay2OSD
+class QMPlay2OSD
 {
 public:
     class Image
diff --git src/qmplay2/headers/Reader.hpp src/qmplay2/headers/Reader.hpp
index 3168d49d..3d9b750b 100644
--- src/qmplay2/headers/Reader.hpp
+++ src/qmplay2/headers/Reader.hpp
@@ -22,7 +22,7 @@
 #include <ModuleParams.hpp>
 #include <IOController.hpp>
 
-class QMPLAY2SHAREDLIB_EXPORT Reader : protected ModuleCommon, public ModuleParams, public BasicIO
+class Reader : protected ModuleCommon, public ModuleParams, public BasicIO
 {
 public:
     static bool create(const QString &url, IOController<Reader> &reader, const QString &plugName = QString());
diff --git src/qmplay2/headers/Settings.hpp src/qmplay2/headers/Settings.hpp
index 1b3165f3..af49579c 100644
--- src/qmplay2/headers/Settings.hpp
+++ src/qmplay2/headers/Settings.hpp
@@ -25,7 +25,7 @@
 #include <QMap>
 #include <QSet>
 
-class QMPLAY2SHAREDLIB_EXPORT Settings : protected QSettings
+class Settings : protected QSettings
 {
     using SettingsMap = QMap<QString, QVariant>;
 public:
diff --git src/qmplay2/headers/Slider.hpp src/qmplay2/headers/Slider.hpp
index 52acb3b0..bd8b76b2 100644
--- src/qmplay2/headers/Slider.hpp
+++ src/qmplay2/headers/Slider.hpp
@@ -18,11 +18,9 @@
 
 #pragma once
 
-#include <QMPlay2Lib.hpp>
-
 #include <QSlider>
 
-class QMPLAY2SHAREDLIB_EXPORT Slider final : public QSlider
+class Slider : public QSlider
 {
     Q_OBJECT
 public:
@@ -45,12 +43,12 @@ public slots:
     }
     void drawRange(int first, int second);
 protected:
-    void paintEvent(QPaintEvent *) override;
-    void mousePressEvent(QMouseEvent *) override;
-    void mouseReleaseEvent(QMouseEvent *) override;
-    void mouseMoveEvent(QMouseEvent *) override;
-    void wheelEvent(QWheelEvent *) override;
-    void enterEvent(QEvent *) override;
+    void paintEvent(QPaintEvent *) override final;
+    void mousePressEvent(QMouseEvent *) override final;
+    void mouseReleaseEvent(QMouseEvent *) override final;
+    void mouseMoveEvent(QMouseEvent *) override final;
+    void wheelEvent(QWheelEvent *) override final;
+    void enterEvent(QEvent *) override final;
 private:
     int getMousePos(const QPoint &pos);
 
diff --git src/qmplay2/headers/SndResampler.hpp src/qmplay2/headers/SndResampler.hpp
index 6ef7681f..05c1b661 100644
--- src/qmplay2/headers/SndResampler.hpp
+++ src/qmplay2/headers/SndResampler.hpp
@@ -18,12 +18,10 @@
 
 #pragma once
 
-#include <QMPlay2Lib.hpp>
-
 class QByteArray;
 class Buffer;
 
-class QMPLAY2SHAREDLIB_EXPORT SndResampler
+class SndResampler
 {
 public:
     SndResampler() = default;
diff --git src/qmplay2/headers/StreamInfo.hpp src/qmplay2/headers/StreamInfo.hpp
index c59b4f91..eaf8c5a1 100644
--- src/qmplay2/headers/StreamInfo.hpp
+++ src/qmplay2/headers/StreamInfo.hpp
@@ -18,7 +18,6 @@
 
 #pragma once
 
-#include <QMPlay2Lib.hpp>
 #include <PixelFormats.hpp>
 
 #include <QCoreApplication>
@@ -57,7 +56,7 @@ enum QMPlay2Tags
     QMPLAY2_TAG_LYRICS,
 };
 
-class QMPLAY2SHAREDLIB_EXPORT StreamInfo
+class StreamInfo
 {
     Q_DECLARE_TR_FUNCTIONS(StreamInfo)
 public:
@@ -96,7 +95,7 @@ public:
     QMPlay2ColorSpace colorSpace = QMPlay2ColorSpace::Unknown;
 };
 
-class QMPLAY2SHAREDLIB_EXPORT StreamsInfo : public QList<StreamInfo *>
+class StreamsInfo : public QList<StreamInfo *>
 {
     Q_DISABLE_COPY(StreamsInfo)
 public:
diff --git src/qmplay2/headers/SubsDec.hpp src/qmplay2/headers/SubsDec.hpp
index 85454530..c822b6ae 100644
--- src/qmplay2/headers/SubsDec.hpp
+++ src/qmplay2/headers/SubsDec.hpp
@@ -18,13 +18,11 @@
 
 #pragma once
 
-#include <QMPlay2Lib.hpp>
-
 #include <QStringList>
 
 class LibASS;
 
-class QMPLAY2SHAREDLIB_EXPORT SubsDec
+class SubsDec
 {
 public:
     static SubsDec *create(const QString &);
diff --git src/qmplay2/headers/TreeWidgetJS.hpp src/qmplay2/headers/TreeWidgetJS.hpp
index 490b3d71..d5e28872 100644
--- src/qmplay2/headers/TreeWidgetJS.hpp
+++ src/qmplay2/headers/TreeWidgetJS.hpp
@@ -1,12 +1,10 @@
 #pragma once
 
-#include <QMPlay2Lib.hpp>
-
 #include <QObject>
 
 class QTreeWidgetItem;
 
-class QMPLAY2SHAREDLIB_EXPORT TreeWidgetItemJS : public QObject
+class TreeWidgetItemJS : public QObject
 {
     Q_OBJECT
 
@@ -30,7 +28,7 @@ private:
 
 class QTreeWidget;
 
-class QMPLAY2SHAREDLIB_EXPORT TreeWidgetJS : public QObject
+class TreeWidgetJS : public QObject
 {
     Q_OBJECT
 
diff --git src/qmplay2/headers/Version.hpp src/qmplay2/headers/Version.hpp
index 6a7ff5df..486e3a0f 100644
--- src/qmplay2/headers/Version.hpp
+++ src/qmplay2/headers/Version.hpp
@@ -18,13 +18,11 @@
 
 #pragma once
 
-#include <QMPlay2Lib.hpp>
-
 #include <QByteArray>
 
 namespace Version
 {
-    QMPLAY2SHAREDLIB_EXPORT QByteArray get();
-    QMPLAY2SHAREDLIB_EXPORT QByteArray userAgent();
-    QMPLAY2SHAREDLIB_EXPORT bool isPortable();
+	QByteArray get();
+	QByteArray userAgent();
+	bool isPortable();
 }
diff --git src/qmplay2/headers/VideoAdjustment.hpp src/qmplay2/headers/VideoAdjustment.hpp
index 94b9cd04..bf01993d 100644
--- src/qmplay2/headers/VideoAdjustment.hpp
+++ src/qmplay2/headers/VideoAdjustment.hpp
@@ -18,11 +18,11 @@
 
 #pragma once
 
-#include <QMPlay2Lib.hpp>
+#include <QtGlobal>
 
 #include <string.h>
 
-class QMPLAY2SHAREDLIB_EXPORT VideoAdjustment
+class VideoAdjustment
 {
 public:
     inline void unset()
diff --git src/qmplay2/headers/VideoFilter.hpp src/qmplay2/headers/VideoFilter.hpp
index 730d5e55..13fc3f7e 100644
--- src/qmplay2/headers/VideoFilter.hpp
+++ src/qmplay2/headers/VideoFilter.hpp
@@ -23,7 +23,7 @@
 
 #include <QQueue>
 
-class QMPLAY2SHAREDLIB_EXPORT VideoFilter : public ModuleParams
+class VideoFilter : public ModuleParams
 {
 public:
     class FrameBuffer
diff --git src/qmplay2/headers/VideoFilters.hpp src/qmplay2/headers/VideoFilters.hpp
index fddf3b7f..9803a035 100644
--- src/qmplay2/headers/VideoFilters.hpp
+++ src/qmplay2/headers/VideoFilters.hpp
@@ -29,7 +29,7 @@
 class VideoFiltersThr;
 class TimeStamp;
 
-class QMPLAY2SHAREDLIB_EXPORT VideoFilters
+class VideoFilters
 {
     Q_DISABLE_COPY(VideoFilters)
     friend class VideoFiltersThr;
diff --git src/qmplay2/headers/VideoFrame.hpp src/qmplay2/headers/VideoFrame.hpp
index 25ccefa5..36e7983e 100644
--- src/qmplay2/headers/VideoFrame.hpp
+++ src/qmplay2/headers/VideoFrame.hpp
@@ -21,7 +21,7 @@
 #include <Buffer.hpp>
 #include <PixelFormats.hpp>
 
-class QMPLAY2SHAREDLIB_EXPORT VideoFrameSize
+class VideoFrameSize
 {
 public:
     inline VideoFrameSize(qint32 width, qint32 height, quint8 chromaShiftW = 1, quint8 chromaShiftH = 1) :
@@ -55,7 +55,7 @@ public:
 
 struct AVFrame;
 
-class QMPLAY2SHAREDLIB_EXPORT AVFrameHolder
+class AVFrameHolder
 {
 public:
     AVFrameHolder() = default;
@@ -74,7 +74,7 @@ private:
 
 /**/
 
-class QMPLAY2SHAREDLIB_EXPORT VideoFrame
+class VideoFrame
 {
 public:
     VideoFrame(const VideoFrameSize &size, AVBufferRef *bufferRef[], const qint32 newLinesize[], bool interlaced, bool tff);
diff --git src/qmplay2/headers/VideoWriter.hpp src/qmplay2/headers/VideoWriter.hpp
index 2c9dd349..43e5ba3f 100644
--- src/qmplay2/headers/VideoWriter.hpp
+++ src/qmplay2/headers/VideoWriter.hpp
@@ -26,7 +26,7 @@ class QMPlay2OSD;
 class VideoFrame;
 class ImgScaler;
 
-class QMPLAY2SHAREDLIB_EXPORT VideoWriter : public Writer
+class VideoWriter : public Writer
 {
 public:
     static VideoWriter *createOpenGL2(HWAccelInterface *hwAccelInterface);
diff --git src/qmplay2/headers/Writer.hpp src/qmplay2/headers/Writer.hpp
index 2c83cc5b..16103d58 100644
--- src/qmplay2/headers/Writer.hpp
+++ src/qmplay2/headers/Writer.hpp
@@ -24,7 +24,7 @@
 
 #include <QStringList>
 
-class QMPLAY2SHAREDLIB_EXPORT Writer : public ModuleCommon, public ModuleParams, public BasicIO
+class Writer : public ModuleCommon, public ModuleParams, public BasicIO
 {
 public:
     static Writer *create(const QString &, const QStringList &modNames = {});
diff --git src/qmplay2/headers/YouTubeDL.hpp src/qmplay2/headers/YouTubeDL.hpp
index 76e0d2ce..beb55ced 100644
--- src/qmplay2/headers/YouTubeDL.hpp
+++ src/qmplay2/headers/YouTubeDL.hpp
@@ -26,7 +26,7 @@
 
 class NetworkReply;
 
-class QMPLAY2SHAREDLIB_EXPORT YouTubeDL final : public BasicIO
+class YouTubeDL : public BasicIO
 {
     Q_DECLARE_TR_FUNCTIONS(YouTubeDL)
     Q_DISABLE_COPY(YouTubeDL)
@@ -38,14 +38,14 @@ public:
     static bool fixUrl(const QString &url, QString &outUrl, IOController<> *ioCtrl, QString *name, QString *extension, QString *error);
 
     YouTubeDL();
-    ~YouTubeDL();
+    ~YouTubeDL() final;
 
     void addr(const QString &url, const QString &param, QString *streamUrl, QString *name, QString *extension, QString *err = nullptr);
 
     QStringList exec(const QString &url, const QStringList &args, QString *silentErr = nullptr, bool rawOutput = false);
 
 private:
-    void abort() override;
+    void abort() override final;
 
 private:
     bool prepare();
-- 
2.47.0

