From ace0ec1a4e5daf7922b76ad59bb1c8f4414c789a Mon Sep 17 00:00:00 2001
From: Iain Sandoe <iain@sandoe.co.uk>
Date: Sat, 30 Mar 2019 16:36:47 +0000
Subject: [PATCH] [llas] Don't report support for compressed debug,
 disable compact unwind

---
 llvm/tools/llas/llas.cpp | 7 ++++++-
 1 file changed, 6 insertions(+), 1 deletion(-)

diff --git a/llvm/tools/llas/llas.cpp b/llvm/tools/llas/llas.cpp
index 6209166e981..46fc902e70d 100644
--- a/llvm/tools/llas/llas.cpp
+++ b/llvm/tools/llas/llas.cpp
@@ -59,6 +59,7 @@ OutputFilename("o", desc("Output filename"),
 static opt<bool>
 ShowEncoding("show-encoding", desc("Show instruction encodings"), Hidden);
 
+#if 0
 static opt<DebugCompressionType> CompressDebugSections(
     "compress-debug-sections", ValueOptional,
     init(DebugCompressionType::None),
@@ -68,6 +69,7 @@ static opt<DebugCompressionType> CompressDebugSections(
                           "Use zlib compression"),
                clEnumValN(DebugCompressionType::GNU, "zlib-gnu",
                           "Use zlib-gnu compression (deprecated)")));
+#endif
 
 static opt<bool>
 ShowInst("show-inst", desc("Show internal instruction representation"), Hidden);
@@ -479,6 +481,7 @@ LLVM_DEBUG(dbgs() << TheTarget->getName() << " triple named " \
   std::unique_ptr<MCAsmInfo> MAI(TheTarget->createMCAsmInfo(*MRI, TripleName));
   assert(MAI && "Unable to create target asm info!");
 
+#if 0
   if (CompressDebugSections != DebugCompressionType::None) {
     if (!zlib::isAvailable()) {
       errs() << ProgName
@@ -487,13 +490,15 @@ LLVM_DEBUG(dbgs() << TheTarget->getName() << " triple named " \
     }
     MAI->setCompressDebugSections(CompressDebugSections);
   }
+#endif
 
   // FIXME: This is not pretty. MCContext has a ptr to MCObjectFileInfo and
   // MCObjectFileInfo needs a MCContext reference in order to initialize itself.
   MCObjectFileInfo MOFI;
   MCContext Ctx(MAI.get(), MRI.get(), &MOFI, &SrcMgr);
   bool PIC = RelocMode == RS_Static ? false : true;
-  MOFI.InitMCObjectFileInfo(TheTriple, PIC, Ctx, LargeCodeModel, !NoCompactUnwind);
+  MOFI.InitMCObjectFileInfo(TheTriple, PIC, Ctx, LargeCodeModel,
+			    /*!NoCompactUnwind*/ false);
 
   if (SaveTempLabels)
     Ctx.setAllowTemporaryLabels(false);
