From 287a42ea856281f2cb0a936c381218d00bbfda14 Mon Sep 17 00:00:00 2001
From: barracuda156 <vital.had@gmail.com>
Date: Tue, 26 Dec 2023 17:56:36 +0800
Subject: [PATCH 2/6] cpu-ppc.mac.S

---
 vm/cpu-ppc.mac.S | 90 ++++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 90 insertions(+)
 create mode 100644 vm/cpu-ppc.mac.S

diff --git vm/cpu-ppc.mac.S vm/cpu-ppc.mac.S
new file mode 100644
index 0000000000..7565c1a594
--- /dev/null
+++ vm/cpu-ppc.mac.S
@@ -0,0 +1,90 @@
+.text
+.align 2
+
+#define MANGLE(sym) _##sym
+#define XX @
+
+; The returns and args are just for documentation
+#define DEF(returns,symbol,args) .globl MANGLE(symbol) XX \
+MANGLE(symbol)
+
+; Thanks to Joshua Grams for this code.
+
+On PowerPC processors, we must flush the instruction cache manually
+after writing to the code heap. */
+
+DEF(void,flush_icache,(void*, int)):
+    ; compute number of cache lines to flush
+    add r4,r4,r3
+    ; align addr to next lower cache line boundary
+#ifdef __ppc64__
+    clrrdi r3,r3,5
+#else
+    clrrwi r3,r3,5
+#endif
+    ; then n_lines = (len + 0x1f) / 0x20
+    sub r4,r4,r3
+    addi r4,r4,0x1f
+    ; note '.' suffix
+#ifdef __ppc64__
+    srdi. r4,r4,5
+#else
+    srwi. r4,r4,5
+#endif
+    ; if n_lines == 0, just return.
+    beqlr
+    ; flush cache lines
+    mtctr r4
+    ; for each line...
+0:  dcbf 0,r3
+    sync
+    icbi 0,r3
+    addi r3,r3,0x20
+    bdnz 0b
+    ; finish up
+    sync
+    isync
+    blr
+
+DEF(void,get_ppc_fpu_env,(void*)):
+    mffs f0
+    stfd f0,0(r3)
+    blr
+
+DEF(void,set_ppc_fpu_env,(const void*)):
+    lfd f0,0(r3)
+    mtfsf 0xff,f0
+    blr
+
+DEF(void,get_ppc_vmx_env,(void*)):
+    mfvscr v0
+    subi r4,r1,16
+    li r5,0xf
+    andc r4,r4,r5
+    stvxl v0,0,r4
+    li r5,0xc
+#ifdef __ppc64__
+    ldx r6,r5,r4
+    std r6,0(r3)
+#else
+    lwzx r6,r5,r4
+    stw r6,0(r3)
+#endif
+
+    blr
+
+DEF(void,set_ppc_vmx_env,(const void*)):
+    subi r4,r1,16
+    li r5,0xf
+    andc r4,r4,r5
+    li r5,0xc
+#ifdef __ppc64__
+    ld r6,0(r3)
+    stdx r6,r5,r4
+#else
+    lwz r6,0(r3)
+    stwx r6,r5,r4
+#endif
+    lvxl v0,0,r4
+    mtvscr v0
+    blr
-- 
2.43.0

