From c53d8a47e3e12a284157864e7bdddf3e5805e61e Mon Sep 17 00:00:00 2001
From: Sergey Fedorov <barracuda@macos-powerpc.org>
Date: Sat, 31 Aug 2024 04:42:10 +0800
Subject: [PATCH 20/21] X11Application

---
 hw/xquartz/X11Application.m | 39 +++++++------------------------------
 1 file changed, 7 insertions(+), 32 deletions(-)

diff --git a/hw/xquartz/X11Application.m b/hw/xquartz/X11Application.m
index 944cd43d8..2c895b9a2 100644
--- a/hw/xquartz/X11Application.m
+++ b/hw/xquartz/X11Application.m
@@ -58,13 +58,16 @@
 extern int
 xpbproxy_run(void);
 
-#define DEFAULTS_FILE X11LIBDIR "/X11/xserver/Xquartz.plist"
+#ifndef DEFAULTS_FILE
+#define DEFAULTS_FILE "/opt/local/lib/X11/xserver/Xquartz.plist"
+#endif
 
 #ifndef XSERVER_VERSION
 #define XSERVER_VERSION "?"
 #endif
 
-#ifdef HAVE_LIBDISPATCH
+// Needs blocks, useless with gcc atm
+#ifdef __clang__
 #include <dispatch/dispatch.h>
 static dispatch_queue_t eventTranslationQueue;
 #endif
@@ -1237,25 +1240,18 @@ X11ApplicationMain(int argc, char **argv, char **envp)
         aquaMenuBarHeight = NSHeight([primaryScreen frame]) - NSMaxY([primaryScreen visibleFrame]);
     }
 
-#ifdef HAVE_LIBDISPATCH
+#ifdef __clang__
     eventTranslationQueue = dispatch_queue_create(
         BUNDLE_ID_PREFIX ".X11.NSEventsToX11EventsQueue", NULL);
     assert(eventTranslationQueue != NULL);
 #endif
 
     /* Set the key layout seed before we start the server */
-#if MAC_OS_X_VERSION_MIN_REQUIRED >= 1050
     last_key_layout = TISCopyCurrentKeyboardLayoutInputSource();
 
     if (!last_key_layout)
         ErrorF(
             "X11ApplicationMain: Unable to determine TISCopyCurrentKeyboardLayoutInputSource() at startup.\n");
-#else
-    KLGetCurrentKeyboardLayout(&last_key_layout);
-    if (!last_key_layout)
-        ErrorF(
-            "X11ApplicationMain: Unable to determine KLGetCurrentKeyboardLayout() at startup.\n");
-#endif
 
     if (!QuartsResyncKeymap(FALSE)) {
         ErrorF("X11ApplicationMain: Could not build a valid keymap.\n");
@@ -1648,33 +1644,11 @@ handle_mouse:
 
     case NSScrollWheel:
     {
-#if MAC_OS_X_VERSION_MAX_ALLOWED < 1050
-        float deltaX = [e deltaX];
-        float deltaY = [e deltaY];
-        BOOL isContinuous = NO;
-#else
         CGFloat deltaX = [e deltaX];
         CGFloat deltaY = [e deltaY];
         CGEventRef cge = [e CGEvent];
         BOOL isContinuous =
             CGEventGetIntegerValueField(cge, kCGScrollWheelEventIsContinuous);
-
-#if 0
-        /* Scale the scroll value by line height */
-        CGEventSourceRef source = CGEventCreateSourceFromEvent(cge);
-        if (source) {
-            double lineHeight = CGEventSourceGetPixelsPerLine(source);
-            CFRelease(source);
-            
-            /* There's no real reason for the 1/5 ratio here other than that
-             * it feels like a good ratio after some testing.
-             */
-            
-            deltaX *= lineHeight / 5.0;
-            deltaY *= lineHeight / 5.0;
-        }
-#endif
-#endif
         
 #if !defined(XPLUGIN_VERSION) || XPLUGIN_VERSION == 0
         /* If we're in the background, we need to send a MotionNotify event
@@ -1687,6 +1661,7 @@ handle_mouse:
                                     0.0, 0.0);
         }
 #endif
+
 #if MAC_OS_X_VERSION_MAX_ALLOWED >= 1070
         // TODO: Change 1117 to NSAppKitVersionNumber10_7 when it is defined
         if (NSAppKitVersionNumber >= 1117 &&
-- 
2.46.0

