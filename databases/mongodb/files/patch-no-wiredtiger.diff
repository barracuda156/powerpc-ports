--- src/mongo/db/repl/tenant_file_importer_service.cpp	2023-06-16 20:55:56.000000000 +0800
+++ src/mongo/db/repl/tenant_file_importer_service.cpp	2024-04-10 09:08:28.000000000 +0800
@@ -41,7 +41,9 @@
 #include "mongo/db/repl/tenant_migration_access_blocker_util.h"
 #include "mongo/db/repl/tenant_migration_shard_merge_util.h"
 #include "mongo/db/service_context.h"
+#if !defined(__ppc__) && !defined(__i386__)
 #include "mongo/db/storage/wiredtiger/wiredtiger_import.h"
+#endif
 #include "mongo/executor/network_interface_factory.h"
 #include "mongo/executor/network_interface_thread_pool.h"
 #include "mongo/logv2/log.h"
@@ -92,6 +94,7 @@
         boost::filesystem::remove_all(tempWTDirectory, ec);
     });
 
+#if !defined(__ppc__) && !defined(__i386__)
     auto metadatas = wiredTigerRollbackToStableAndGetMetadata(opCtx, tempWTDirectory.string());
     for (auto&& m : metadatas) {
         auto tenantId = parseTenantIdFromDB(m.ns.db());
@@ -117,6 +120,7 @@
             MODE_X);
         uassertStatusOK(catalog->reloadViews(opCtx, m.ns.db()));
     }
+#endif
 }
 }  // namespace
 

--- src/mongo/db/repl/tenant_migration_shard_merge_util.cpp	2023-06-16 20:55:56.000000000 +0800
+++ src/mongo/db/repl/tenant_migration_shard_merge_util.cpp	2024-04-10 09:12:38.000000000 +0800
@@ -128,6 +128,7 @@
 }
 }  // namespace
 
+#if !defined(__ppc__) && !defined(__i386__)
 void wiredTigerImportFromBackupCursor(OperationContext* opCtx,
                                       const std::vector<CollectionImportMetadata>& metadatas,
                                       const std::string& importPath) {
@@ -230,6 +231,7 @@
         revertIndexFileMove.dismiss();
     }
 }
+#endif
 
 void cloneFile(OperationContext* opCtx, const BSONObj& metadataDoc) {
     std::unique_ptr<DBClientConnection> client;


--- src/mongo/db/repl/tenant_migration_recipient_service.cpp	2023-06-16 20:55:56.000000000 +0800
+++ src/mongo/db/repl/tenant_migration_recipient_service.cpp	2024-04-10 09:11:06.000000000 +0800
@@ -71,7 +71,9 @@
 #include "mongo/db/repl/wait_for_majority_service.h"
 #include "mongo/db/session_catalog_mongod.h"
 #include "mongo/db/session_txn_record_gen.h"
+#if !defined(__ppc__) && !defined(__i386__)
 #include "mongo/db/storage/wiredtiger/wiredtiger_import.h"
+#endif
 #include "mongo/db/transaction_participant.h"
 #include "mongo/db/vector_clock_mutable.h"
 #include "mongo/db/write_concern_options.h"


--- src/mongo/db/repl/SConscript	2023-06-16 20:55:56.000000000 +0800
+++ src/mongo/db/repl/SConscript	2024-04-10 09:58:07.000000000 +0800
@@ -1387,7 +1387,6 @@
         '$BUILD_DIR/mongo/db/multitenancy',
         '$BUILD_DIR/mongo/db/ops/write_ops_exec',
         '$BUILD_DIR/mongo/db/pipeline/process_interface/mongo_process_interface',
-        '$BUILD_DIR/mongo/db/storage/wiredtiger/storage_wiredtiger_import',
         '$BUILD_DIR/mongo/db/transaction',
         '$BUILD_DIR/mongo/executor/scoped_task_executor',
         '$BUILD_DIR/mongo/idl/cluster_parameter_synchronization_helpers',


